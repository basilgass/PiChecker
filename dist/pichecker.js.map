{"version":3,"file":"pichecker.js","sources":["../src/checker.config.ts","../node_modules/pimath/dist/pimath.js","../src/CheckerAbstract.ts","../src/Basic/PolynomChecker.ts","../src/Basic/CartesianChecker.ts","../src/helperFunctions.ts","../src/Basic/ExactChecker.ts","../src/Basic/CoordChecker.ts","../src/Basic/EquationChecker.ts","../src/Basic/ExpChecker.ts","../src/Basic/FractionChecker.ts","../src/Basic/FunctionChecker.ts","../src/Basic/InputChecker.ts","../src/Basic/LogChecker.ts","../src/Basic/NumberChecker.ts","../src/Basic/PrimitiveChecker.ts","../src/Basic/RationalChecker.ts","../src/Basic/ScientificChecker.ts","../src/asciimath2tex.ts","../src/Basic/SolutionChecker.ts","../src/Basic/StringChecker.ts","../src/Basic/VectorChecker.ts","../src/Custom/OrderChecker.ts","../src/Custom/QcmChecker.ts","../src/Custom/StudyChecker.ts","../src/Custom/TableofsignChecker.ts","../src/Custom/TypeChecker.ts","../src/piChecker.ts"],"sourcesContent":["export interface CheckerResult {\r\n    result: boolean,\r\n    message: string,\r\n    index?: number\r\n}\r\n\r\nexport enum CHECKERS {\r\n    // Basic checkers\r\n    CARTESIAN = \"cartesian\",\r\n    COORDINATES = \"coord\",\r\n    EQUATION = \"equation\",\r\n    EXACT = \"exact\",\r\n    EXPONENTIAL = \"exp\",\r\n    FRACTION = \"fraction\",\r\n    FUNCTION = \"function\",\r\n    INPUT = \"input\",\r\n    LOGARITHM = \"log\",\r\n    NUMBER = \"number\",\r\n    POLYNOMIAL = \"polynom\",\r\n    PRIMITIVE = \"primitive\",\r\n    RATIONAL = \"rational\",\r\n    SCIENTIFIC = \"scientific\",\r\n    SOLUTION = \"solution\",\r\n    STRING = \"string\",\r\n    VECTOR = \"vector\",\r\n\r\n    // Custom checkers\r\n    ORDER = \"order\",\r\n    QCM = \"qcm\",\r\n    STUDY = \"study\",\r\n    TABLE_OF_SIGNS = \"tos\",\r\n    TYPE = \"type\"\r\n}\r\n\r\nexport function checkerNameToEnum(name: string): CHECKERS {\r\n    switch (name) {\r\n        case \"exact\":\r\n            return CHECKERS.EXACT\r\n        case \"polynom\":\r\n            return CHECKERS.POLYNOMIAL\r\n        case \"rational\":\r\n            return CHECKERS.RATIONAL\r\n        case \"equ\":\r\n        case \"equation\":\r\n            return CHECKERS.EQUATION\r\n        case \"cart\":\r\n        case \"cartesian\":\r\n            return CHECKERS.CARTESIAN\r\n        case \"fn\":\r\n        case \"function\":\r\n            return CHECKERS.FUNCTION\r\n        case \"nb\":\r\n        case \"number\":\r\n            return CHECKERS.NUMBER\r\n        case \"fr\":\r\n        case \"frac\":\r\n        case \"fraction\":\r\n            return CHECKERS.FRACTION\r\n        case \"scn\":\r\n            return CHECKERS.SCIENTIFIC\r\n        case \"tos\":\r\n            return CHECKERS.TABLE_OF_SIGNS\r\n        case \"study\":\r\n            return CHECKERS.STUDY\r\n        case \"sol\":\r\n        case \"solution\":\r\n            return CHECKERS.SOLUTION\r\n        case \"coord\":\r\n            return CHECKERS.COORDINATES\r\n        case \"vector\":\r\n            return CHECKERS.VECTOR\r\n        case \"log\":\r\n            return CHECKERS.LOGARITHM\r\n        case \"exp\":\r\n            return CHECKERS.EXPONENTIAL\r\n        case \"primitive\":\r\n            return CHECKERS.PRIMITIVE\r\n        default:\r\n            return CHECKERS.STRING\r\n    }\r\n\r\n}","var Li = Object.defineProperty;\nvar gi = (o) => {\n  throw TypeError(o);\n};\nvar Vi = (o, e, t) => e in o ? Li(o, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : o[e] = t;\nvar a = (o, e, t) => Vi(o, typeof e != \"symbol\" ? e + \"\" : e, t), _t = (o, e, t) => e.has(o) || gi(\"Cannot \" + t);\nvar s = (o, e, t) => (_t(o, e, \"read from private field\"), t ? t.call(o) : e.get(o)), m = (o, e, t) => e.has(o) ? gi(\"Cannot add the same private member more than once\") : e instanceof WeakSet ? e.add(o) : e.set(o, t), h = (o, e, t, i) => (_t(o, e, \"write to private field\"), i ? i.call(o, t) : e.set(o, t), t), A = (o, e, t) => (_t(o, e, \"access private method\"), t);\nfunction Di(o) {\n  const e = wi(o), t = [];\n  let i, n;\n  for (; e.length > 0; )\n    i = e.shift() ?? 1, n = (e.length > 0 ? e.pop() : +i) ?? 1, t.push([i, n]);\n  return t;\n}\nfunction Zi(...o) {\n  const e = ui(...o);\n  return o.map((t) => t / e);\n}\nfunction wi(o) {\n  const e = Math.abs(o), t = Math.sqrt(e), i = [];\n  for (let n = 1; n <= t; n++)\n    o % n === 0 && (i.push(n), i.push(e / n));\n  return i.sort(function(n, r) {\n    return n - r;\n  }), [...new Set(i)];\n}\nfunction ui(...o) {\n  const e = function(n, r) {\n    return r === 0 ? n : e(r, n % r);\n  };\n  let t = 1, i = 2;\n  if (o.length === 0)\n    return 1;\n  if (o.length === 1)\n    return o[0] === 0 ? 1 : o[0];\n  if (t = e(o[0], o[1]), t === 1)\n    return 1;\n  for (i = 2; i < o.length && (t = e(t, o[i]), t !== 1); i++)\n    ;\n  return Math.abs(t);\n}\nfunction Fi(...o) {\n  return o.reduce(function(e, t) {\n    return Math.abs(e * t / ui(e, t));\n  });\n}\nfunction ji(o, e = 3) {\n  return +o.toFixed(e);\n}\nfunction Ui(o) {\n  if (Number.isSafeInteger(o) || o.toString().split(\".\")[0].length < 10)\n    return 0;\n  throw new Error(\"Periodic value: Not implemented yet\");\n}\nfunction Wi(o) {\n  const e = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003, 5009, 5011, 5021, 5023, 5039, 5051, 5059, 5077, 5081, 5087, 5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179, 5189, 5197, 5209, 5227, 5231, 5233, 5237, 5261, 5273, 5279, 5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387, 5393, 5399, 5407, 5413, 5417, 5419, 5431, 5437, 5441, 5443, 5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521, 5527, 5531, 5557, 5563, 5569, 5573, 5581, 5591, 5623, 5639, 5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693, 5701, 5711, 5717, 5737, 5741, 5743, 5749, 5779, 5783, 5791, 5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857, 5861, 5867, 5869, 5879, 5881, 5897, 5903, 5923, 5927, 5939, 5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053, 6067, 6073, 6079, 6089, 6091, 6101, 6113, 6121, 6131, 6133, 6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221, 6229, 6247, 6257, 6263, 6269, 6271, 6277, 6287, 6299, 6301, 6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367, 6373, 6379, 6389, 6397, 6421, 6427, 6449, 6451, 6469, 6473, 6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571, 6577, 6581, 6599, 6607, 6619, 6637, 6653, 6659, 6661, 6673, 6679, 6689, 6691, 6701, 6703, 6709, 6719, 6733, 6737, 6761, 6763, 6779, 6781, 6791, 6793, 6803, 6823, 6827, 6829, 6833, 6841, 6857, 6863, 6869, 6871, 6883, 6899, 6907, 6911, 6917, 6947, 6949, 6959, 6961, 6967, 6971, 6977, 6983, 6991, 6997, 7001, 7013, 7019, 7027, 7039, 7043, 7057, 7069, 7079, 7103, 7109, 7121, 7127, 7129, 7151, 7159, 7177, 7187, 7193, 7207, 7211, 7213, 7219, 7229, 7237, 7243, 7247, 7253, 7283, 7297, 7307, 7309, 7321, 7331, 7333, 7349, 7351, 7369, 7393, 7411, 7417, 7433, 7451, 7457, 7459, 7477, 7481, 7487, 7489, 7499, 7507, 7517, 7523, 7529, 7537, 7541, 7547, 7549, 7559, 7561, 7573, 7577, 7583, 7589, 7591, 7603, 7607, 7621, 7639, 7643, 7649, 7669, 7673, 7681, 7687, 7691, 7699, 7703, 7717, 7723, 7727, 7741, 7753, 7757, 7759, 7789, 7793, 7817, 7823, 7829, 7841, 7853, 7867, 7873, 7877, 7879, 7883, 7901, 7907, 7919, 7927, 7933, 7937, 7949, 7951, 7963, 7993, 8009, 8011, 8017, 8039, 8053, 8059, 8069, 8081, 8087, 8089, 8093, 8101, 8111, 8117, 8123, 8147, 8161, 8167, 8171, 8179, 8191, 8209, 8219, 8221, 8231, 8233, 8237, 8243, 8263, 8269, 8273, 8287, 8291, 8293, 8297, 8311, 8317, 8329, 8353, 8363, 8369, 8377, 8387, 8389, 8419, 8423, 8429, 8431, 8443, 8447, 8461, 8467, 8501, 8513, 8521, 8527, 8537, 8539, 8543, 8563, 8573, 8581, 8597, 8599, 8609, 8623, 8627, 8629, 8641, 8647, 8663, 8669, 8677, 8681, 8689, 8693, 8699, 8707, 8713, 8719, 8731, 8737, 8741, 8747, 8753, 8761, 8779, 8783, 8803, 8807, 8819, 8821, 8831, 8837, 8839, 8849, 8861, 8863, 8867, 8887, 8893, 8923, 8929, 8933, 8941, 8951, 8963, 8969, 8971, 8999, 9001, 9007, 9011, 9013, 9029, 9041, 9043, 9049, 9059, 9067, 9091, 9103, 9109, 9127, 9133, 9137, 9151, 9157, 9161, 9173, 9181, 9187, 9199, 9203, 9209, 9221, 9227, 9239, 9241, 9257, 9277, 9281, 9283, 9293, 9311, 9319, 9323, 9337, 9341, 9343, 9349, 9371, 9377, 9391, 9397, 9403, 9413, 9419, 9421, 9431, 9433, 9437, 9439, 9461, 9463, 9467, 9473, 9479, 9491, 9497, 9511, 9521, 9533, 9539, 9547, 9551, 9587, 9601, 9613, 9619, 9623, 9629, 9631, 9643, 9649, 9661, 9677, 9679, 9689, 9697, 9719, 9721, 9733, 9739, 9743, 9749, 9767, 9769, 9781, 9787, 9791, 9803, 9811, 9817, 9829, 9833, 9839, 9851, 9857, 9859, 9871, 9883, 9887, 9901, 9907, 9923, 9929, 9931, 9941, 9949, 9967, 9973];\n  return o === void 0 ? e : e.slice(0, Math.min(e.length, o));\n}\nfunction Gi(o, e) {\n  const t = [], i = e === !0 ? +o : o ** 2;\n  for (let n = 0; n <= o; n++)\n    for (let r = 0; r <= o; r++)\n      n ** 2 + r ** 2 === i && t.push([n, r, o]);\n  return t;\n}\nfunction Hi(o, e = 2) {\n  return +`${Math.round(+`${o}e${e}`)}e-${e}`;\n}\nconst U = {\n  decompose: Di,\n  dividers: wi,\n  divideNumbersByGCD: Zi,\n  gcd: ui,\n  lcm: Fi,\n  numberCorrection: ji,\n  periodic: Ui,\n  primes: Wi,\n  pythagoreanTripletsWithTarget: Gi,\n  round: Hi\n};\nvar ut, x, v, Re;\nconst $ = class $ {\n  constructor(e, t) {\n    m(this, ut, !1);\n    m(this, x, 1);\n    m(this, v, 1);\n    m(this, Re, \"frac\");\n    // ------------------------------------------\n    /**\n     * Parse the value to get the numerator and denominator\n     * @param value : number or string to parse to get the fraction\n     * @param denominatorOrPeriodic (optional|number) : length of the periodic part: 2.333333 => 1 or denominator value\n     */\n    a(this, \"parse\", (e, t) => {\n      let i;\n      if (e === \"\")\n        return h(this, v, 0), h(this, x, 1), this;\n      switch (typeof e) {\n        case \"string\":\n          if (i = e.split(\"/\"), i.length > 2)\n            throw new Error(`The given value is not a valid fraction (${e})`);\n          if (i.map((n) => n === \"\" || isNaN(Number(n))).includes(!0))\n            throw new Error(`The given value is not a valid fraction (${e})`);\n          if (i.length === 1)\n            return this.parse(+i[0]);\n          i.length === 2 ? i[1] === \"0\" ? (h(this, v, NaN), h(this, x, 1)) : (h(this, v, +i[0]), h(this, x, +i[1])) : (h(this, v, NaN), h(this, x, 1));\n          break;\n        case \"number\":\n          if (Number.isSafeInteger(e))\n            h(this, v, +e), t === void 0 || !Number.isSafeInteger(t) ? h(this, x, 1) : h(this, x, +t);\n          else {\n            const [, n] = e.toString().split(\".\"), r = n ? n.length : 0;\n            t === void 0 ? (h(this, v, e * Math.pow(10, r)), h(this, x, Math.pow(10, r))) : Number.isSafeInteger(t) && (h(this, v, e * Math.pow(10, r) - Math.floor(e * Math.pow(10, r - t))), this.denominator = Math.pow(10, r) - Math.pow(10, r - t)), this.reduce();\n          }\n          break;\n        case \"object\":\n          e instanceof $ && (h(this, v, +e.numerator), h(this, x, +e.denominator));\n          break;\n      }\n      return this;\n    });\n    a(this, \"clone\", () => {\n      const e = new $();\n      return e.numerator = +s(this, v), e.denominator = +s(this, x), e;\n    });\n    a(this, \"abs\", () => (h(this, v, Math.abs(s(this, v))), h(this, x, Math.abs(s(this, x))), this));\n    a(this, \"add\", (e) => {\n      if (e instanceof $) {\n        const t = s(this, v), i = s(this, x);\n        h(this, v, t * e.denominator + e.numerator * i), h(this, x, i * e.denominator);\n      } else\n        return this.add(new $(e));\n      return this.reduce();\n    });\n    a(this, \"amplify\", (e) => (Number.isSafeInteger(e) && (h(this, v, s(this, v) * e), h(this, x, s(this, x) * e)), this));\n    /**\n     * Simple function to determine if it's a fraction\n     */\n    a(this, \"areEquals\", (...e) => e.every((t) => t.isEqual(e[0])));\n    // ------------------------------------------\n    /**\n     * Compare the current coefficient with another coefficient\n     * @param F (Coefficient) The coefficient to _compare\n     * @param sign (string| default is =): authorized values: =, <, <=, >, >= with some variations.\n     */\n    a(this, \"compare\", (e, t) => {\n      t === void 0 && (t = \"=\");\n      let i;\n      switch (e instanceof $ ? i = e.clone() : i = new $(e), t) {\n        case \">\":\n          return this.value > i.value;\n        case \">=\":\n        case \"=>\":\n        case \"geq\":\n          return this.value >= i.value;\n        case \"<\":\n          return this.value < i.value;\n        case \"<=\":\n        case \"=<\":\n        case \"leq\":\n          return this.value <= i.value;\n        case \"=\":\n          return this.value === i.value;\n        case \"<>\":\n          return this.value !== i.value;\n        default:\n          return !1;\n      }\n    });\n    a(this, \"divide\", (e) => {\n      const t = new $(e);\n      if (t.numerator === 0)\n        return new $().infinite();\n      const i = +s(this, v), n = +s(this, x);\n      return h(this, v, i * t.denominator), h(this, x, n * t.numerator), this.reduce();\n    });\n    a(this, \"infinite\", () => (h(this, v, 1 / 0), h(this, x, 1), this));\n    a(this, \"invalid\", () => (h(this, v, NaN), h(this, x, 1), this));\n    a(this, \"inverse\", () => {\n      const e = +s(this, v);\n      return h(this, v, +s(this, x)), h(this, x, e), this;\n    });\n    a(this, \"isApproximative\", () => s(this, ut) || s(this, v).toString().length >= 15 && s(this, x).toString().length >= 15);\n    a(this, \"isEqual\", (e) => this.compare(e, \"=\"));\n    a(this, \"isEven\", () => this.isRelative() && this.value % 2 === 0);\n    a(this, \"isExact\", () => !this.isApproximative());\n    a(this, \"isFinite\", () => !this.isInfinity() && !this.isNaN());\n    a(this, \"isGeq\", (e) => this.compare(e, \">=\"));\n    a(this, \"isGreater\", (e) => this.compare(e, \">\"));\n    a(this, \"isInfinity\", () => Math.abs(s(this, v)) === 1 / 0);\n    a(this, \"isInverted\", (e) => this.isEqual(new $().one().divide(e.clone())));\n    a(this, \"isLeq\", (e) => this.compare(e, \"<=\"));\n    /* Compare shortcuts */\n    a(this, \"isLesser\", (e) => this.compare(e, \"<\"));\n    a(this, \"isNaN\", () => isNaN(s(this, v)));\n    a(this, \"isNatural\", () => this.isRelative() && this.isPositive());\n    a(this, \"isNegative\", () => this.sign() === -1);\n    a(this, \"isNegativeOne\", () => s(this, v) === -1 && s(this, x) === 1);\n    a(this, \"isNotEqual\", (e) => this.compare(e, \"<>\"));\n    // ------------------------------------------\n    a(this, \"isNotZero\", () => s(this, v) !== 0);\n    a(this, \"isOdd\", () => this.isRelative() && this.value % 2 === 1);\n    a(this, \"isOne\", () => s(this, v) === 1 && s(this, x) === 1);\n    a(this, \"isOpposite\", (e) => this.isEqual(e.clone().opposite()));\n    a(this, \"isPositive\", () => this.sign() === 1);\n    a(this, \"isRational\", () => !this.isRelative());\n    a(this, \"isReduced\", () => Math.abs(U.gcd(s(this, v), s(this, x))) === 1);\n    a(this, \"isRelative\", () => this.clone().reduce().denominator === 1);\n    a(this, \"isSquare\", () => Math.sqrt(s(this, v)) % 1 === 0 && Math.sqrt(s(this, x)) % 1 === 0);\n    a(this, \"isStrictlyNegative\", () => this.value < 0);\n    a(this, \"isStrictlyPositive\", () => this.value > 0);\n    // Mathematical operations specific to fractions\n    a(this, \"isZero\", () => s(this, v) === 0);\n    a(this, \"multiply\", (e) => {\n      const t = new $(e);\n      return h(this, v, s(this, v) * t.numerator), h(this, x, s(this, x) * t.denominator), this.reduce();\n    });\n    a(this, \"one\", () => (h(this, v, 1), h(this, x, 1), this));\n    a(this, \"opposite\", () => (h(this, v, -s(this, v)), this));\n    a(this, \"pow\", (e) => {\n      if (e instanceof $)\n        return this.pow(e.value);\n      this.reduce(), e < 0 && this.inverse();\n      const t = Math.floor(Math.pow(s(this, v), Math.abs(e))), i = Math.floor(Math.pow(s(this, x), Math.abs(e)));\n      return t ** Math.abs(e) === s(this, v) && i ** Math.abs(e) === s(this, x) ? (h(this, v, s(this, v) ** Math.abs(e)), h(this, x, s(this, x) ** Math.abs(e))) : (h(this, v, s(this, v) ** Math.abs(e)), h(this, x, s(this, x) ** Math.abs(e))), this;\n    });\n    // ------------------------------------------\n    a(this, \"reduce\", () => {\n      const e = U.gcd(s(this, v), s(this, x));\n      return h(this, v, s(this, v) / e), h(this, x, s(this, x) / e), s(this, x) < 0 && (h(this, x, -s(this, x)), h(this, v, -s(this, v))), this;\n    });\n    a(this, \"root\", (e) => {\n      if (e === 0)\n        return this;\n      if (e < 0 && this.inverse(), !Number.isSafeInteger(e))\n        throw new Error(\"The root must be an integer.\");\n      if (this.isNegative() && e % 2 === 0)\n        throw new Error(\"The root of a negative number must be odd.\");\n      const t = this.sign();\n      this.abs(), this.reduce();\n      const i = Math.floor(Math.pow(s(this, v), Math.abs(1 / e))), n = Math.floor(Math.pow(s(this, x), Math.abs(1 / e)));\n      return h(this, v, Math.pow(s(this, v), Math.abs(1 / e))), h(this, x, Math.pow(s(this, x), Math.abs(1 / e))), (i !== s(this, v) || n !== s(this, x)) && (h(this, v, s(this, v) / s(this, x)), h(this, x, 1), h(this, ut, !0)), this.multiply(t), this;\n    });\n    // ------------------------------------------\n    // Getter and setter\n    a(this, \"sign\", () => s(this, v) * s(this, x) >= 0 ? 1 : -1);\n    a(this, \"sqrt\", () => this.root(2));\n    a(this, \"subtract\", (e) => e instanceof $ ? this.add(e.clone().opposite()) : this.add(-e));\n    a(this, \"zero\", () => (h(this, v, 0), h(this, x, 1), this));\n    return e !== void 0 && this.parse(e, t), this;\n  }\n  get denominator() {\n    return s(this, x);\n  }\n  set denominator(e) {\n    h(this, x, e);\n  }\n  get dfrac() {\n    return h(this, Re, \"dfrac\"), this;\n  }\n  get display() {\n    return this.isExact() ? s(this, x) === 1 ? `${s(this, v)}` : `${s(this, v)}/${s(this, x)}` : this.value.toFixed(3);\n  }\n  get frac() {\n    return h(this, Re, \"frac\"), this;\n  }\n  // ------------------------------------------\n  get numerator() {\n    return s(this, v);\n  }\n  set numerator(e) {\n    h(this, v, e);\n  }\n  // Display getter\n  get tex() {\n    return this.isInfinity() ? `${this.sign() === 1 ? \"+\" : \"-\"}\\\\infty` : this.isExact() ? s(this, x) === 1 ? `${s(this, v)}` : s(this, v) < 0 ? `-\\\\${s(this, Re)}{ ${-s(this, v)} }{ ${s(this, x)} }` : `\\\\${s(this, Re)}{ ${s(this, v)} }{ ${s(this, x)} }` : this.value.toFixed(3);\n  }\n  get texWithSign() {\n    return this.isPositive() ? `+${this.tex}` : this.tex;\n  }\n  get tfrac() {\n    return h(this, Re, \"tfrac\"), this;\n  }\n  get value() {\n    const e = s(this, v) / s(this, x);\n    return e === 0 ? 0 : e;\n  }\n};\nut = new WeakMap(), x = new WeakMap(), v = new WeakMap(), Re = new WeakMap(), a($, \"average\", (...e) => {\n  const t = new $().zero();\n  for (const i of e)\n    t.add(i);\n  return t.divide(e.length), t;\n}), a($, \"max\", (...e) => {\n  let t = new $(e[0]);\n  for (const i of e) {\n    const n = new $(i);\n    n.isGreater(t) && (t = n.clone());\n  }\n  return t;\n}), a($, \"min\", (...e) => {\n  let t = new $(e[0]);\n  for (const i of e) {\n    const n = new $(i);\n    n.isLesser(t) && (t = n.clone());\n  }\n  return t;\n}), a($, \"sort\", (e, t) => {\n  const n = e.map((r) => r instanceof $ ? r : new $(r)).sort((r, l) => r.value - l.value);\n  return t && n.reverse(), n;\n}), // ------------------------------------------\n// Compare functions\na($, \"unique\", (e) => {\n  const t = {}, i = [];\n  return e.forEach((n) => {\n    n instanceof $ || (n = new $(n)), t[n.clone().reduce().tex] || (i.push(n.clone()), t[n.tex] = !0);\n  }), i;\n}), a($, \"xMultiply\", (...e) => {\n  const t = new $();\n  for (const i of e) {\n    const n = new $(i);\n    t.numerator = t.numerator * n.numerator, t.denominator = t.denominator * n.denominator;\n  }\n  return t;\n});\nlet f = $;\nvar Z, ie, re, Ye;\nclass vt {\n  constructor(...e) {\n    m(this, Z);\n    m(this, ie);\n    m(this, re);\n    m(this, Ye);\n    // ------------------------------------------\n    // Creation / parsing functions\n    // ------------------------------------------\n    a(this, \"parse\", (e, t, i) => (h(this, re, i ?? 1), h(this, ie, t ?? 2), h(this, Z, e), s(this, ie) % 2 === 0 && s(this, Z) < 0 && h(this, Ye, !1), this));\n    // ------------------------------------------\n    // Mathematical operations\n    // ------------------------------------------\n    a(this, \"reduce\", () => {\n      let e = Math.floor(Math.pow(s(this, Z), 1 / s(this, ie)));\n      for (; e > 1; ) {\n        if (s(this, Z) % Math.pow(e, s(this, ie)) === 0) {\n          h(this, re, s(this, re) * e), h(this, Z, s(this, Z) / Math.pow(e, s(this, ie))), e = Math.floor(Math.pow(s(this, Z), 1 / s(this, ie)));\n          continue;\n        }\n        e--;\n      }\n      return this;\n    });\n    a(this, \"multiply\", (e) => (h(this, Z, s(this, Z) * e.radical), this.reduce()));\n    // ------------------------------------------\n    // Help functions\n    // ------------------------------------------\n    a(this, \"hasRadical\", () => !(s(this, Z) === 1 || s(this, Z) === 0 || !s(this, Ye)));\n    h(this, Z, 1), h(this, re, 1), h(this, ie, 2), h(this, Ye, !0), e.length > 0 && this.parse(e[0], e[1], e[2]);\n  }\n  // ------------------------------------------\n  // Getter and setter\n  // ------------------------------------------\n  get radical() {\n    return s(this, Z);\n  }\n  set radical(e) {\n    h(this, Z, e);\n  }\n  get nth() {\n    return s(this, ie);\n  }\n  set nth(e) {\n    Number.isSafeInteger(e) && e >= 2 ? h(this, ie, e) : (console.log(\"Error setting the nth root\"), h(this, ie, 2));\n  }\n  get coefficient() {\n    return s(this, re);\n  }\n  set coefficient(e) {\n    h(this, re, e);\n  }\n  get tex() {\n    let e;\n    return s(this, re) === 1 ? e = \"\" : s(this, re) === -1 ? e = \"-\" : e = s(this, re).toString(), s(this, Z) === 1 ? `${s(this, re)}` : s(this, ie) === 2 ? `${e}\\\\sqrt{${s(this, Z)}}` : `${e}\\\\sqrt[${s(this, ie)}]{${s(this, Z)}}`;\n  }\n  get display() {\n    let e;\n    return s(this, re) === 1 ? e = \"\" : s(this, re) === -1 ? e = \"-\" : e = s(this, re).toString(), s(this, Z) === 1 ? `${s(this, re)}` : s(this, ie) === 2 ? `${e}sqrt{${s(this, Z)}}` : `${e}root(${s(this, ie)}){${s(this, Z)}}`;\n  }\n  get value() {\n    return s(this, re) * Math.pow(s(this, Z), 1 / s(this, ie));\n  }\n}\nZ = new WeakMap(), ie = new WeakMap(), re = new WeakMap(), Ye = new WeakMap();\nvar K, Fe, C, Ge, ge, vi, bi, xi, Ei, Ni, Ai, Ti;\nconst pi = class pi {\n  constructor(e, t, i = \"x\") {\n    m(this, C);\n    m(this, K);\n    m(this, Fe);\n    if (h(this, Fe, i), Object.hasOwn(e, \"moveLeft\")) {\n      const n = e;\n      h(this, K, n.left.clone().subtract(n.right));\n    } else\n      h(this, K, e.clone().subtract(t ?? 0));\n  }\n  solve() {\n    const e = s(this, K).degree().value;\n    if (e === 0)\n      return [];\n    if (e === 1)\n      return A(this, C, Ni).call(this);\n    if (e === 2)\n      return A(this, C, Ai).call(this);\n    const t = A(this, C, xi).call(this);\n    return t.length > 0 ? t : A(this, C, vi).call(this);\n  }\n  solveAsCardan() {\n    if (s(this, K).degree().value !== 3)\n      throw new Error(\"The equation is not cubic.\");\n    return A(this, C, Ei).call(this);\n  }\n};\nK = new WeakMap(), Fe = new WeakMap(), C = new WeakSet(), Ge = function(e, t) {\n  return {\n    variable: s(this, Fe),\n    exact: !1,\n    value: +e.toFixed(10),\n    tex: (t == null ? void 0 : t.tex) ?? \"\",\n    display: (t == null ? void 0 : t.display) ?? \"\"\n  };\n}, ge = function(e) {\n  if (e instanceof f && e.isApproximative())\n    return A(this, C, Ge).call(this, e.value);\n  const t = new f(e);\n  return {\n    variable: s(this, Fe),\n    exact: t,\n    value: t.value,\n    tex: t.tex,\n    display: t.display\n  };\n}, vi = function() {\n  const e = [];\n  s(this, K).degree().value;\n  const t = s(this, K).getCoefficients().map((p) => p.value), [i, ...n] = s(this, K).getCoefficients(), r = 1 + Math.max(...n.map((p) => p.value / i.value)), c = 2 * r / 100, u = [];\n  for (let p = -r; p <= r; p += c) {\n    const w = U.numberCorrection(p);\n    u.push(\n      {\n        x: w,\n        fx: s(this, K).evaluate(w, !0)\n      }\n    );\n  }\n  u.sort((p, w) => p.x - w.x);\n  const d = [];\n  return u.forEach((p, w) => {\n    w > 0 && (p.fx === 0 ? d.push([p.x, p.x]) : u[w - 1].fx * p.fx < 0 && d.push([\n      u[w - 1].x,\n      p.x\n    ]));\n  }), d.forEach((p) => {\n    const [w, V] = p;\n    if (w === V)\n      e.push(A(this, C, ge).call(this, w));\n    else {\n      const ce = A(this, C, bi).call(this, t, w, V);\n      ce !== null && e.push(A(this, C, Ge).call(this, ce));\n    }\n  }), e;\n}, bi = function(e, t, i, n = 1e-10) {\n  let r = s(this, K).evaluate(t, !0), l = s(this, K).evaluate(i, !0);\n  if (r * l > 0)\n    return console.log(\"Pas de racine dans l'intervalle donné\"), null;\n  let c;\n  for (; (i - t) / 2 > n; ) {\n    c = (t + i) / 2;\n    const u = s(this, K).evaluate(c, !0);\n    if (u === 0)\n      return c;\n    r * u < 0 ? (i = c, l = u) : (t = c, r = u);\n  }\n  return (t + i) / 2;\n}, xi = function() {\n  let e = s(this, K).clone(), t = [];\n  const i = e.lcmDenominator();\n  i !== 1 && e.multiply(i);\n  const n = e.monomByDegree().coefficient;\n  let r = e.monomByDegree(0).coefficient;\n  for (; r.isZero(); )\n    t.length === 0 && t.push(A(this, C, ge).call(this, 0)), e = e.divide(\"x\"), r = e.monomByDegree(0).coefficient;\n  const l = U.dividers(n.value), c = U.dividers(r.value);\n  for (const d of l)\n    for (const p of c) {\n      const w = new f(p, d);\n      e.evaluate(w).isZero() && !t.find((V) => V.value === w.value) && t.push(A(this, C, ge).call(this, w)), w.opposite(), e.evaluate(w).isZero() && !t.find((V) => V.value === w.value) && t.push(A(this, C, ge).call(this, w));\n    }\n  for (const d of t) {\n    if (d.exact !== !1 && d.exact.isZero())\n      continue;\n    const p = s(this, K).clone().parse(\"x\", d.exact.denominator, -d.exact.numerator);\n    for (; e.isDividableBy(p); )\n      e = e.divide(p);\n  }\n  if (e.degree().isZero())\n    return t.sort((d, p) => d.value - p.value);\n  if (e.degree().value > 3)\n    return [];\n  const u = new pi(e, e.clone().parse(\"0\"), s(this, Fe));\n  return t = t.concat(u.solve()), t.sort((d, p) => d.value - p.value);\n}, Ei = function() {\n  const e = s(this, K), t = e.monomByDegree(3).coefficient, i = e.monomByDegree(2).coefficient, n = e.monomByDegree(1).coefficient, r = e.monomByDegree(0).coefficient, l = i.clone().divide(t), c = n.clone().divide(t), u = r.clone().divide(t), d = c.clone().subtract(l.clone().pow(2).divide(3)), p = u.clone().subtract(l.clone().multiply(c).divide(3)).add(l.clone().pow(3).multiply(2).divide(27)), w = p.clone().opposite(), V = d.clone().opposite().pow(3).divide(27), ce = w.clone().pow(2).subtract(V.clone().multiply(4)).opposite();\n  if (ce.isNegative()) {\n    const ue = p.clone().opposite().add(ce.clone().opposite().sqrt()).divide(2).root(3), fe = p.clone().opposite().subtract(ce.clone().opposite().sqrt()).divide(2).root(3), ye = ue.clone().add(fe).subtract(l.clone().divide(3));\n    return [A(this, C, ge).call(this, ye)];\n  }\n  if (ce.isZero()) {\n    const ue = p.clone().opposite().divide(2).root(3), fe = ue.clone().opposite().subtract(l.clone().divide(3)), ye = ue.clone().multiply(2).subtract(l.clone().divide(3));\n    return fe.isEqual(ye) ? [A(this, C, ge).call(this, fe)] : [\n      A(this, C, ge).call(this, ye),\n      A(this, C, ge).call(this, fe)\n    ].sort((me, de) => me.value - de.value);\n  }\n  if (ce.isPositive()) {\n    const ue = [], fe = d.value, ye = p.value, me = l.value;\n    for (let de = 0; de < 3; de++)\n      ue.push(2 * Math.sqrt(-fe / 3) * Math.cos(Math.acos(3 * ye / (2 * fe) * Math.sqrt(-3 / fe)) / 3 + 2 * Math.PI * de / 3) - me / 3);\n    return ue.map((de) => A(this, C, Ge).call(this, de)).sort((de, rt) => de.value - rt.value);\n  }\n  return [];\n}, Ni = function() {\n  const [e, t] = s(this, K).getCoefficients(), i = t.opposite().divide(e);\n  return [\n    A(this, C, ge).call(this, i)\n  ];\n}, Ai = function() {\n  const e = s(this, K), [t, i, n] = e.getCoefficients(), r = i.clone().pow(2).subtract(t.clone().multiply(n).multiply(4));\n  if (r.isNegative())\n    return [];\n  if (r.isSquare()) {\n    const l = r.sqrt(), c = i.clone().opposite().add(l).divide(t.clone().multiply(2)), u = i.clone().opposite().subtract(l).divide(t.clone().multiply(2));\n    return l.isZero() ? [A(this, C, ge).call(this, c)] : [\n      A(this, C, ge).call(this, c),\n      A(this, C, ge).call(this, u)\n    ].sort((d, p) => d.value - p.value);\n  }\n  return A(this, C, Ti).call(this, t, i, r);\n}, Ti = function(e, t, i) {\n  const n = U.dividers(i.value).filter((me) => Math.sqrt(me) % 1 === 0).map((me) => Math.sqrt(me)).pop() ?? 1, r = U.gcd(2 * e.value, t.value, n) * (e.isNegative() ? -1 : 1), l = t.clone().divide(r).opposite(), c = e.clone().divide(r).multiply(2), u = i.clone().divide(n ** 2), d = Math.abs(n / r), p = n === 1 ? \"-\" : `-${d} `, w = n === 1 ? \"+\" : `+${d} `;\n  function V(me, de, rt, Jt) {\n    return `\\\\frac{ ${de} ${rt}\\\\sqrt{ ${Jt} } }{ ${me} }`;\n  }\n  function ce(me, de, rt, Jt) {\n    return `(${de}${rt}sqrt(${Jt}))/${me}`;\n  }\n  const ue = i.value ** 0.5, fe = (-t.value - ue) / (2 * e.value), ye = (-t.value + ue) / (2 * e.value);\n  return [\n    A(this, C, Ge).call(this, fe, {\n      tex: V(c.tex, l.tex, p.toString(), u.tex),\n      display: ce(c.display, l.display, p.toString(), u.display)\n    }),\n    A(this, C, Ge).call(this, ye, {\n      tex: V(c.tex, l.tex, w.toString(), u.tex),\n      display: ce(c.display, l.display, w.toString(), u.display)\n    })\n  ].sort((me, de) => me.value - de.value);\n};\nlet At = pi;\nvar Xi = Object.defineProperty, Oi = (o) => {\n  throw TypeError(o);\n}, Yi = (o, e, t) => e in o ? Xi(o, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : o[e] = t, ei = (o, e, t) => Yi(o, typeof e != \"symbol\" ? e + \"\" : e, t), qi = (o, e, t) => e.has(o) || Oi(\"Cannot \" + t), te = (o, e, t) => (qi(o, e, \"read from private field\"), t ? t.call(o) : e.get(o)), ot = (o, e, t) => e.has(o) ? Oi(\"Cannot add the same private member more than once\") : e instanceof WeakSet ? e.add(o) : e.set(o, t), Ee = (o, e, t, i) => (qi(o, e, \"write to private field\"), e.set(o, t), t);\nconst fi = {\n  pi: Math.PI,\n  e: Math.exp(1)\n};\nvar g = /* @__PURE__ */ ((o) => (o.VARIABLE = \"variable\", o.COEFFICIENT = \"coefficient\", o.OPERATION = \"operation\", o.CONSTANT = \"constant\", o.FUNCTION = \"function\", o.FUNCTION_ARGUMENT = \"function-argument\", o.MONOM = \"monom\", o.LEFT_PARENTHESIS = \"(\", o.RIGHT_PARENTHESIS = \")\", o))(g || {}), Ze = /* @__PURE__ */ ((o) => (o.EXPRESSION = \"expression\", o.POLYNOM = \"polynom\", o.SET = \"set\", o.NUMERIC = \"numeric\", o))(Ze || {});\nfunction Qi(o, e) {\n  if (o.length <= 1)\n    return o;\n  const t = Object.keys(e).filter((w) => e[w].type === g.FUNCTION).map((w) => w);\n  t.sort((w, V) => V.length - w.length);\n  const i = new RegExp(`^(${t.join(\"|\")})\\\\(`), n = Object.keys(fi);\n  n.sort((w, V) => V.length - w.length);\n  const r = new RegExp(`^(${n.join(\"|\")})`), l = /^(\\d+(\\.\\d+)?)/;\n  let c = \"\", u, d, p;\n  for (; o.length > 0; ) {\n    if (u = d, p = void 0, t.length > 0 && i.exec(o)) {\n      const w = t.find((V) => o.startsWith(V));\n      w && (p = w + \"(\", o = o.slice(w.length + 1), d = g.FUNCTION);\n    } else if (n.length > 0 && r.exec(o)) {\n      const w = n.find((V) => o.startsWith(V));\n      w && (p = w, o = o.slice(w.length), d = g.CONSTANT);\n    } else if (l.exec(o)) {\n      const w = l.exec(o);\n      w && (p = w[0], o = o.slice(w[0].length), d = g.COEFFICIENT);\n    } else\n      switch (p = o[0], o = o.slice(1), p) {\n        case \"(\":\n          d = g.LEFT_PARENTHESIS;\n          break;\n        case \")\":\n          d = g.RIGHT_PARENTHESIS;\n          break;\n        case \",\":\n          d = g.FUNCTION_ARGUMENT;\n          break;\n        case \"+\":\n        case \"-\":\n        case \"*\":\n        case \"/\":\n        case \"^\":\n          d = g.OPERATION;\n          break;\n        default:\n          d = g.VARIABLE;\n      }\n    if (p === void 0 || d === void 0)\n      throw new Error(\"The token is undefined\");\n    c += Ki(u, d), c += p;\n  }\n  return c;\n}\nfunction Ki(o, e) {\n  return o === void 0 || o === g.OPERATION || e === g.OPERATION || o === g.LEFT_PARENTHESIS || o === g.FUNCTION || o === g.FUNCTION_ARGUMENT || e === g.RIGHT_PARENTHESIS || e === g.FUNCTION_ARGUMENT ? \"\" : \"*\";\n}\nconst Ji = {\n  \"^\": { precedence: 4, associative: \"right\", type: g.OPERATION },\n  \"*\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"/\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"+\": { precedence: 2, associative: \"left\", type: g.OPERATION },\n  \"-\": { precedence: 2, associative: \"left\", type: g.OPERATION }\n}, _i = {\n  \"^\": { precedence: 4, associative: \"right\", type: g.OPERATION },\n  \"*\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"/\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"+\": { precedence: 2, associative: \"left\", type: g.OPERATION },\n  \"-\": { precedence: 2, associative: \"left\", type: g.OPERATION },\n  \"%\": { precedence: 3, associative: \"right\", type: g.OPERATION },\n  sin: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  cos: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  tan: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  sqrt: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  nthrt: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  \",\": { precedence: 2, associative: \"left\", type: g.FUNCTION_ARGUMENT }\n}, es = {\n  \"^\": { precedence: 4, associative: \"right\", type: g.OPERATION },\n  \"*\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"/\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"+\": { precedence: 2, associative: \"left\", type: g.OPERATION },\n  \"-\": { precedence: 2, associative: \"left\", type: g.OPERATION },\n  \"%\": { precedence: 3, associative: \"right\", type: g.OPERATION },\n  sin: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  cos: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  tan: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  sqrt: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  nthrt: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  ln: { precedence: 4, associative: \"right\", type: g.FUNCTION },\n  log: { precedence: 4, associative: \"right\", type: g.FUNCTION }\n}, ts = {\n  \"&\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"|\": { precedence: 3, associative: \"left\", type: g.OPERATION },\n  \"!\": { precedence: 4, associative: \"right\", type: g.OPERATION },\n  \"-\": { precedence: 2, associative: \"left\", type: g.OPERATION }\n};\nvar He, at, ne, bt, Ve;\nclass Kt {\n  constructor(e) {\n    ot(this, He), ot(this, at, []), ot(this, ne, {}), ot(this, bt, []), ot(this, Ve), Ee(this, He, typeof e > \"u\" ? Ze.POLYNOM : e), this.tokenConfigInitialization();\n  }\n  // Getter\n  get rpn() {\n    return te(this, at);\n  }\n  get rpnToken() {\n    return te(this, at).map((e) => e.token);\n  }\n  tokenConfigInitialization() {\n    return te(this, He) === Ze.SET ? (Ee(this, ne, ts), Ee(this, Ve, !1)) : te(this, He) === Ze.NUMERIC ? (Ee(this, ne, es), Ee(this, Ve, !0)) : te(this, He) === Ze.EXPRESSION ? (Ee(this, ne, _i), Ee(this, Ve, !0)) : (Ee(this, ne, Ji), Ee(this, Ve, !0)), Ee(this, bt, Object.keys(te(this, ne)).sort((e, t) => t.length - e.length)), te(this, ne);\n  }\n  /**\n   * Get the next token to analyse.\n   * @param expr (string) Expression to analyse\n   * @param start (number) CUrrent position in the expr string.\n   */\n  NextToken(e, t) {\n    let i, n;\n    if (i = \"\", n = void 0, e[t] === \"(\")\n      i = \"(\", n = g.LEFT_PARENTHESIS;\n    else if (e[t] === \")\")\n      i = \")\", n = g.RIGHT_PARENTHESIS;\n    else if (e[t] === \",\")\n      i = \",\", n = g.FUNCTION_ARGUMENT;\n    else {\n      for (const r of te(this, bt))\n        if (e.substring(t, t + r.length) === r) {\n          i += r, n = te(this, ne)[r].type;\n          break;\n        }\n      for (const r in fi)\n        if (e.substring(t, t + r.length) === r) {\n          i += r, n = g.CONSTANT;\n          break;\n        }\n      if (i === \"\")\n        if (/[0-9.]/.exec(e[t])) {\n          const r = /^([0-9.]+)/.exec(e.substring(t));\n          i = r ? r[0] : \"\", n = g.COEFFICIENT;\n        } else if (/[a-zA-Z]/.exec(e[t])) {\n          const r = /^([a-zA-Z])/.exec(e.substring(t));\n          i = r ? r[0] : \"\", n = g.VARIABLE;\n        } else\n          console.log(\"Unidentified token\", e[t], e, t), i = e[t], n = g.MONOM;\n    }\n    if (n === void 0)\n      throw new Error(`Token type is undefined for token ${i}`);\n    return [i, t + i.length, n];\n  }\n  /**\n   * Parse an expression using the shutting yard tree algorithms\n   * @param expr (string) Expression to analyse\n   * Returns a RPN list of items.\n   * @param uniformize\n   */\n  parse(e, t) {\n    const i = [], n = [];\n    let r = \"\", l = 0, c;\n    (t ?? te(this, Ve)) && (e = Qi(e, te(this, ne)));\n    const u = 50;\n    let d = 50, p;\n    for (; l < e.length; ) {\n      if (d--, d === 0) {\n        console.log(\"SECURITY LEVEL 1 EXIT\");\n        break;\n      }\n      switch ([r, l, c] = this.NextToken(e, l), c) {\n        case g.MONOM:\n        case g.COEFFICIENT:\n        case g.VARIABLE:\n        case g.CONSTANT:\n          i.push({\n            token: r,\n            tokenType: c\n          });\n          break;\n        case g.OPERATION:\n          if (n.length > 0) {\n            let w = n[n.length - 1];\n            for (p = +u; w.token in te(this, ne) && //either o1 is left-associative and its precedence is less than or equal to that of o2,\n            (te(this, ne)[r].associative === \"left\" && te(this, ne)[r].precedence <= te(this, ne)[w.token].precedence || //or o1 is right associative, and has precedence less than that of o2,\n            te(this, ne)[r].associative === \"right\" && te(this, ne)[r].precedence < te(this, ne)[w.token].precedence); ) {\n              if (p--, p === 0) {\n                console.log(\"SECURITY LEVEL 2 OPERATION EXIT\");\n                break;\n              }\n              if (i.push(n.pop() ?? { token: \"\", tokenType: g.OPERATION }), n.length === 0)\n                break;\n              w = n[n.length - 1];\n            }\n          }\n          n.push({ token: r, tokenType: c });\n          break;\n        case g.FUNCTION_ARGUMENT:\n          for (p = +u; n[n.length - 1].token !== \"(\" && n.length > 0; ) {\n            if (p--, p === 0) {\n              console.log(\"SECURITY LEVEL 2 FUNCTION ARGUMENT EXIT\");\n              break;\n            }\n            i.push(n.pop() ?? { token: r, tokenType: c });\n          }\n          break;\n        case g.LEFT_PARENTHESIS:\n          n.push({ token: r, tokenType: c }), e[l] === \"-\" && i.push({ token: \"0\", tokenType: g.COEFFICIENT });\n          break;\n        case g.RIGHT_PARENTHESIS:\n          for (p = +u; n[n.length - 1].token !== \"(\" && n.length > 1; ) {\n            if (p--, p === 0) {\n              console.log(\"SECURITY LEVEL 2 CLOSING PARENTHESIS EXIT\");\n              break;\n            }\n            i.push(n.pop() ?? { token: r, tokenType: c });\n          }\n          n.pop();\n          break;\n        case g.FUNCTION:\n          n.push({ token: r, tokenType: c });\n          break;\n        default:\n          throw new Error(`Token type ${r} is not handled`);\n      }\n    }\n    return Ee(this, at, i.concat(n.reverse())), this;\n  }\n}\nHe = /* @__PURE__ */ new WeakMap(), at = /* @__PURE__ */ new WeakMap(), ne = /* @__PURE__ */ new WeakMap(), bt = /* @__PURE__ */ new WeakMap(), Ve = /* @__PURE__ */ new WeakMap();\nclass is {\n  constructor(e, t) {\n    ei(this, \"_rpn\"), ei(this, \"_expression\"), ei(this, \"_isValid\"), this._expression = e;\n    try {\n      this._rpn = new Kt(Ze.NUMERIC).parse(e, t).rpn;\n    } catch {\n      throw this._rpn = null, this._isValid = !1, new Error(`There was a problem parsing: ${e}`);\n    }\n  }\n  get rpn() {\n    return this._rpn ?? [];\n  }\n  get isValid() {\n    if (this._isValid === void 0)\n      try {\n        this.evaluate({ x: 2 });\n      } catch {\n        this._isValid = !1;\n      }\n    return this._isValid ?? !1;\n  }\n  set isValid(e) {\n    this._isValid = e;\n  }\n  get expression() {\n    return this._expression;\n  }\n  evaluate(e) {\n    const t = [];\n    if (this._rpn === null)\n      return this._isValid = !1, 0;\n    this._isValid = !0;\n    for (const i of this._rpn)\n      if (i.tokenType === g.COEFFICIENT)\n        if (!isNaN(+i.token))\n          t.push(+i.token);\n        else {\n          const n = i.token.split(\"/\");\n          if (n.length !== 2)\n            throw this._isValid = !1, new Error(\"This coefficient is not a fraction\");\n          t.push(+n[0] / +n[1]);\n        }\n      else if (i.tokenType === g.VARIABLE && e !== void 0)\n        Object.hasOwn(e, i.token) && t.push(+e[i.token]);\n      else if (i.tokenType === g.CONSTANT)\n        t.push(fi[i.token]);\n      else if (i.tokenType === g.OPERATION) {\n        if (i.token === \"*\") {\n          const n = t.pop(), r = t.pop();\n          if (r === void 0 || n === void 0)\n            throw this._isValid = !1, new Error(`The multiplication factors ${r ?? \"a\"} or ${n ?? \"b\"} are not defined`);\n          t.push(r * n);\n        } else if (i.token === \"/\") {\n          const n = t.pop(), r = t.pop();\n          if (r === void 0 || n === void 0)\n            throw this._isValid = !1, new Error(`The division values ${r ?? \"a\"} or ${n ?? \"b\"} are not defined`);\n          t.push(r / n);\n        } else if (i.token === \"+\") {\n          const n = t.pop(), r = t.pop();\n          if (r === void 0 || n === void 0)\n            throw this._isValid = !1, new Error(`The addition values ${r ?? \"a\"} or ${n ?? \"b\"} are not defined`);\n          t.push(+r + +n);\n        } else if (i.token === \"-\") {\n          const n = t.pop(), r = t.pop() ?? 0;\n          if (n === void 0)\n            throw this._isValid = !1, new Error(\"The subtraction value b is  not defined\");\n          t.push(r - n);\n        } else if (i.token === \"^\") {\n          const n = t.pop(), r = t.pop();\n          if (r === void 0 || n === void 0)\n            throw this._isValid = !1, new Error(`The base value ${r ?? \"a\"} or exponent ${n ?? \"b\"} are not defined`);\n          t.push(Math.pow(r, n));\n        }\n      } else if (i.tokenType === g.FUNCTION) {\n        const n = t.pop();\n        if (n === void 0)\n          throw this._isValid = !1, new Error(`The parameters for ${i.token} is not defined`);\n        if (i.token === \"sin\")\n          t.push(Math.sin(n));\n        else if (i.token === \"cos\")\n          t.push(Math.cos(n));\n        else if (i.token === \"tan\")\n          t.push(Math.tan(n));\n        else if (i.token === \"sqrt\")\n          t.push(Math.sqrt(n));\n        else if (i.token === \"nthrt\") {\n          const r = t.pop();\n          if (r === void 0)\n            throw this._isValid = !1, new Error(\"The nthrt function requires two parameters\");\n          n % 2 === 0 && r < 0 ? t.push(NaN) : t.push((r < 0 ? -1 : 1) * Math.pow(Math.abs(r), 1 / n));\n        } else i.token === \"ln\" ? t.push(Math.log(n)) : i.token === \"log\" && t.push(Math.log10(n));\n      }\n    if (t.length === 1)\n      return this._numberCorrection(t[0]);\n    throw new Error(`There was a problem parsing: ${this._expression}`);\n  }\n  _numberCorrection(e, t = 8) {\n    return +e.toFixed(t);\n  }\n}\nvar T, b, Qe, xt, ze, kt, Mt;\nconst I = class I {\n  constructor(e) {\n    m(this, Qe);\n    m(this, T);\n    m(this, b);\n    /**\n     * Clone the current Monom.\n     */\n    a(this, \"clone\", () => {\n      const e = new I();\n      e.coefficient = s(this, T).clone();\n      for (const t in s(this, b))\n        e.setLetter(t, s(this, b)[t].clone());\n      return e;\n    });\n    /**\n     * Add all similar monoms. If they aren't similar, they are simply skipped.\n     * @param M (Monom[]) The monoms to add.\n     */\n    a(this, \"add\", (...e) => {\n      for (const t of e) {\n        const i = t instanceof I ? t : new I(t);\n        this.isSameAs(i) ? (this.isZero() && A(this, Qe, xt).call(this, i), s(this, T).add(i.coefficient)) : console.log(\"Add monom: \" + this.display + \" is not similar with \", i.display);\n      }\n      return this;\n    });\n    a(this, \"containsRationalPower\", () => Object.values(s(this, b)).some((e) => e.isRational()));\n    /**\n     * Get the degree of a monom. If no setLetter is given, the result will be the global degree.\n     * @param letter (string) Letter to get to degree (power)\n     */\n    a(this, \"degree\", (e) => this.variables.length === 0 ? new f().zero() : e === void 0 ? Object.values(s(this, b)).reduce((t, i) => t.clone().add(i)) : this.hasVariable(e) ? s(this, b)[e].clone() : new f().zero());\n    /**\n     * Derivative the monom\n     * @param letter\n     */\n    a(this, \"derivative\", (e) => {\n      if (e === void 0 && (e = \"x\"), this.hasVariable(e)) {\n        const t = s(this, b)[e].clone(), i = this.clone();\n        return s(i, b)[e].subtract(1), s(i, T).multiply(new f(t.clone())), i;\n      } else\n        return new I().zero();\n    });\n    /**\n     * Divide the current monoms by multiple monoms\n     * @param M (Monom[])\n     */\n    a(this, \"divide\", (...e) => {\n      for (const t of e) {\n        const i = t instanceof I ? t : new I(t);\n        s(this, T).divide(i.coefficient);\n        for (const n in i.literal)\n          s(this, b)[n] = this.hasVariable(n) ? s(this, b)[n].subtract(i.literal[n]) : i.literal[n].clone().opposite(), s(this, b)[n].isZero() && this.removeVariable(n);\n      }\n      return this;\n    });\n    /**\n     * Evaluate a monom. Each setLetter must be assigned to a Fraction.\n     * @param values    Dictionary of <setLetter: Fraction>\n     * @param asNumeric\n     */\n    a(this, \"evaluate\", (e, t) => {\n      if (t === !0) {\n        if (e instanceof f)\n          return s(this, ze).call(this, e.value);\n        if (e instanceof vt)\n          return new f().invalid();\n        if (typeof e == \"number\")\n          return s(this, ze).call(this, e);\n        if (typeof e == \"object\") {\n          const n = {};\n          for (const r in e)\n            n[r] = new f(e[r]).value;\n          return s(this, ze).call(this, n);\n        }\n      }\n      const i = this.coefficient.clone();\n      if (typeof e == \"number\" || e instanceof f) {\n        const n = {};\n        return n[this.variables[0]] = new f(e), this.evaluate(n);\n      }\n      if (e instanceof vt)\n        return new f().invalid();\n      if (typeof e == \"object\") {\n        if (this.variables.length === 0)\n          return this.coefficient;\n        for (const n in s(this, b)) {\n          const r = new f(e[n]);\n          i.multiply(r.pow(s(this, b)[n]));\n        }\n      }\n      return i;\n    });\n    // -------------------------------------\n    /**\n     * Determine if a monom contains a setLetter in it's literal part\n     * @param letter\n     */\n    a(this, \"hasVariable\", (e) => Object.hasOwn(s(this, b), e ?? \"x\"));\n    a(this, \"inverse\", () => {\n      s(this, T).opposite();\n      for (const e in s(this, b))\n        s(this, b)[e].opposite();\n      return this;\n    });\n    a(this, \"isDivisible\", (e) => {\n      if (e.degree().isStrictlyPositive()) {\n        for (const t of e.variables)\n          if (!this.degree(t).isGeq(e.degree(t)))\n            return !1;\n      }\n      return this.coefficient.isRational() || e.coefficient.isRational() ? !0 : this.coefficient.clone().divide(e.coefficient).isRelative();\n    });\n    /**\n     * Determine if two monoms are equals\n     * @param M\n     */\n    a(this, \"isEqual\", (e) => this.isSameAs(e) && s(this, T).isEqual(e.coefficient));\n    a(this, \"isLiteralSquare\", () => {\n      for (const e in this.literal)\n        if (this.literal[e].isRational() || this.literal[e].isEven())\n          return !1;\n      return !0;\n    });\n    /**\n     * Determine if the monom is one\n     */\n    a(this, \"isOne\", () => s(this, T).value === 1 && this.variables.length === 0);\n    /**\n     * Determine if two monoms are similar\n     * @param M\n     */\n    a(this, \"isSameAs\", (e) => {\n      const t = this.variables, i = e.variables, n = t.concat(i.filter((r) => !t.includes(r)));\n      if (this.isZero() || e.isZero() || t.length === 0 && i.length === 0)\n        return !0;\n      if (t.length !== i.length)\n        return !1;\n      if (!this.isZero() && !e.isZero()) {\n        for (const r of n)\n          if (!this.hasVariable(r) || !e.hasVariable(r) || !s(this, b)[r].isEqual(e.literal[r]))\n            return !1;\n      }\n      return !0;\n    });\n    a(this, \"isSquare\", () => this.coefficient.isSquare() ? this.isLiteralSquare() : !1);\n    /**\n     * Determine if the monom is null\n     */\n    a(this, \"isZero\", () => s(this, T).value === 0);\n    /**\n     * Multiple multiple monoms to the current monom\n     * @param M (Monom[]) The monoms to multiply to.\n     */\n    a(this, \"multiply\", (...e) => {\n      for (const t of e) {\n        const i = t instanceof I ? t : new I(t);\n        s(this, T).multiply(i.coefficient);\n        for (const n in i.literal)\n          this.hasVariable(n) ? s(this, b)[n].add(i.literal[n]) : s(this, b)[n] = i.literal[n].clone();\n      }\n      return this;\n    });\n    /**\n     * Create a one value monom\n     */\n    a(this, \"one\", () => (h(this, T, new f().one()), h(this, b, {}), this));\n    /**\n     * Get the opposite\n     * Returns a monom.\n     */\n    a(this, \"opposite\", () => (s(this, T).opposite(), this));\n    /**\n     * Get the pow of a monom.\n     * @param nb (number) : Mathematical pow\n     */\n    a(this, \"pow\", (e) => {\n      s(this, T).pow(e);\n      for (const t in s(this, b))\n        s(this, b)[t].multiply(e);\n      return this;\n    });\n    a(this, \"primitive\", (e) => {\n      e === void 0 && (e = \"x\");\n      const t = this.clone();\n      let i;\n      return t.hasVariable(e) ? (i = t.degree(e).clone().add(1), t.coefficient = t.coefficient.clone().divide(i), t.setLetter(e, i)) : (t.coefficient.isZero() && (t.coefficient = new f().one()), t.setLetter(e, 1)), t;\n    });\n    a(this, \"reduce\", () => {\n      this.coefficient.reduce();\n      for (const e in s(this, b))\n        s(this, b)[e].isZero() && this.removeVariable(e);\n      return this;\n    });\n    /**\n     * Get the nth-root of the monom\n     */\n    a(this, \"root\", () => {\n      throw new Error(\"Method not implemented.\");\n    });\n    /**\n     * Set the power of a particular setLetter\n     * @param letter (string) Letter to change\n     * @param pow (number) Power of the setLetter (must be positive integer.\n     */\n    a(this, \"setLetter\", (e, t) => t instanceof f ? (this.hasVariable(e) && t.isZero() && this.removeVariable(e), s(this, b)[e] = t.clone(), this) : this.setLetter(e, new f(t)));\n    /**\n     * Return the square root of a monom\n     */\n    a(this, \"sqrt\", () => {\n      if (this.isSquare()) {\n        s(this, T).sqrt();\n        for (const e in s(this, b))\n          s(this, b)[e].clone().divide(2);\n      }\n      return this;\n    });\n    /**\n     * Subtract multiple monoms\n     * @param M (Monom[]) The monoms to subtract\n     */\n    a(this, \"subtract\", (...e) => {\n      for (const t of e) {\n        const i = t instanceof I ? t : new I(t);\n        this.isSameAs(i) ? (this.isZero() && A(this, Qe, xt).call(this, i), s(this, T).add(i.clone().coefficient.opposite())) : console.log(\"Subtract: Is not similar: \", i.display);\n      }\n      return this;\n    });\n    /**\n     * Create a zero value monom\n     */\n    a(this, \"zero\", () => (h(this, T, new f().zero()), h(this, b, {}), this));\n    m(this, ze, (e) => {\n      let t = this.coefficient.value;\n      if (typeof e == \"number\") {\n        const i = {}, n = this.variables[0];\n        return i[n] = e, s(this, ze).call(this, i);\n      }\n      if (e instanceof f) {\n        const i = {};\n        return i[this.variables[0]] = new f(e).value, s(this, ze).call(this, i);\n      }\n      if (e instanceof vt)\n        return NaN;\n      if (typeof e == \"object\") {\n        if (this.variables.length === 0)\n          return this.coefficient.value;\n        for (const i in s(this, b)) {\n          const n = e[i];\n          n instanceof f ? t *= n.value ** s(this, b)[i].value : t *= n ** s(this, b)[i].value;\n        }\n      }\n      return t;\n    });\n    m(this, kt, (e) => {\n      const i = new Kt().parse(e).rpn, n = [];\n      if (i.length === 0)\n        return this.zero(), this;\n      if (i.length === 1) {\n        const r = i[0];\n        return this.one(), r.tokenType === g.COEFFICIENT ? this.coefficient = new f(r.token) : r.tokenType === g.VARIABLE && this.setLetter(r.token, 1), this;\n      } else\n        for (const r of i)\n          s(this, Mt).call(this, n, r);\n      return this.one(), this.multiply(n[0]), this;\n    });\n    m(this, Mt, (e, t) => {\n      var u;\n      let i, n, r, l, c;\n      if (t.tokenType === g.COEFFICIENT)\n        e.push(new I(new f(t.token)));\n      else if (t.tokenType === g.VARIABLE) {\n        const d = new I().one();\n        d.setLetter(t.token, 1), e.push(d.clone());\n      } else if (t.tokenType === g.OPERATION)\n        switch (t.token) {\n          case \"-\":\n            n = e.pop() ?? new I().zero(), i = e.pop() ?? new I().zero(), e.push(i.subtract(n));\n            break;\n          case \"*\":\n            n = e.pop() ?? new I().one(), i = e.pop() ?? new I().one(), e.push(i.multiply(n));\n            break;\n          case \"/\":\n            n = e.pop() ?? new I().one(), i = e.pop() ?? new I().one(), e.push(i.divide(n));\n            break;\n          case \"^\": {\n            c = ((u = e.pop()) == null ? void 0 : u.coefficient) ?? new f().one(), r = e.pop() ?? new I().one(), l = r.variables[0], l && r.setLetter(l, c), e.push(r);\n            break;\n          }\n        }\n    });\n    return h(this, T, new f().zero()), h(this, b, {}), e !== void 0 && this.parse(e), this;\n  }\n  // -----------------------------------------\n  /**\n   * Parse a string to a monom. The string may include fraction.\n   * @param inputStr\n   */\n  parse(e) {\n    return h(this, T, new f()), h(this, b, {}), typeof e == \"string\" ? s(this, kt).call(this, e) : typeof e == \"number\" ? h(this, T, new f(e)) : e instanceof f ? h(this, T, e.clone()) : e instanceof I && (h(this, T, s(e, T).clone()), A(this, Qe, xt).call(this, e)), this;\n  }\n  /**\n   * Get the coefficient \\\\(k\\\\) of the Monom \\\\(k\\\\cdot x^{n}\\\\)\n   * @returns {Fraction}\n   */\n  get coefficient() {\n    return s(this, T);\n  }\n  /**\n   * Set the coefficient \\\\(k\\\\) value of the monom\n   * @param {Fraction | number | string} F\n   */\n  set coefficient(e) {\n    h(this, T, new f(e));\n  }\n  // Display getter\n  /**\n   * This display getter is to be used in the polynom display getter\n   */\n  get display() {\n    let e = \"\";\n    const t = Object.keys(s(this, b)).sort();\n    for (const i of t)\n      s(this, b)[i].isNotZero() && (e += i, s(this, b)[i].isNotEqual(1) && (e += `^(${s(this, b)[i].display})`));\n    return e === \"\" ? s(this, T).value != 0 ? s(this, T).display : \"\" : s(this, T).value === 1 ? e : s(this, T).value === -1 ? `-${e}` : s(this, T).value === 0 ? \"0\" : `${s(this, T).display}${e}`;\n  }\n  get dividers() {\n    if (!this.coefficient.isRelative())\n      return [this.clone()];\n    if (this.containsRationalPower())\n      return [this.clone()];\n    if (this.coefficient.numerator > 1e6)\n      return [this.clone()];\n    const e = U.dividers(Math.abs(this.coefficient.numerator));\n    let t = [];\n    for (const n in this.literal)\n      t = this._getLiteralDividers(t, n);\n    const i = [];\n    if (t.length > 0 && e.length > 0)\n      for (const n of e)\n        for (const r of t) {\n          const l = new I();\n          l.coefficient = new f(n), l.literal = r, i.push(l);\n        }\n    else if (e.length === 0)\n      for (const n of t) {\n        const r = new I();\n        r.coefficient = new f().one(), r.literal = n, i.push(r);\n      }\n    else\n      for (const n of e) {\n        const r = new I();\n        r.coefficient = new f(n), i.push(r);\n      }\n    return i.length === 0 ? [new I().one()] : i;\n  }\n  integrate(e, t, i) {\n    const n = this.primitive(i);\n    return n.evaluate(t).subtract(n.evaluate(e));\n  }\n  /**\n   * Get the literal part of \\\\(x^{n_1}y^{n_2}\\\\) as dictionary \\\\[\\\\begin{array}{ll}x&=n_1\\\\\\\\y&=n_2\\\\end{array}\\\\]\n   * @returns {literalType}\n   */\n  get literal() {\n    return s(this, b);\n  }\n  /**\n   * Set the literal part of the monom. Must be a dictionary {x: Fraction, y: Fraction, ...}\n   * @param {literalType<Fraction>} L\n   */\n  set literal(e) {\n    h(this, b, e);\n  }\n  /**\n   * Get the literal square roots of the Monom.\n   * @returns {literalType<Fraction>}\n   */\n  get literalSqrt() {\n    if (this.isLiteralSquare()) {\n      const e = {};\n      for (const t in s(this, b))\n        e[t] = s(this, b)[t].clone().sqrt();\n      return e;\n    } else\n      return s(this, b);\n  }\n  /**\n   * Set the literal part of the monom from a string\n   * @param inputStr  String like x^2y^3\n   */\n  set literalStr(e) {\n    for (const t of [...e.matchAll(/([a-z])\\^([+-]?[0-9]+)/g)])\n      t[1] in s(this, b) || (s(this, b)[t[1]] = new f().zero()), s(this, b)[t[1]].add(+t[2]);\n    for (const t of [...e.matchAll(/([a-z](?!\\^))/g)])\n      t[1] in s(this, b) || (s(this, b)[t[1]] = new f().zero()), s(this, b)[t[1]].add(1);\n  }\n  get plotFunction() {\n    let e = \"\";\n    const t = Object.keys(s(this, b)).sort();\n    for (const i of t)\n      s(this, b)[i].isNotZero() && (e += (e === \"\" ? \"\" : \"*\") + i, s(this, b)[i].isNotEqual(1) && (e += `^(${s(this, b)[i].display})`));\n    return e === \"\" ? s(this, T).value != 0 ? s(this, T).display : \"\" : s(this, T).value === 1 ? e : s(this, T).value === -1 ? `-${e}` : s(this, T).value === 0 ? \"0\" : `${s(this, T).display}*${e}`;\n  }\n  removeVariable(e) {\n    delete s(this, b)[e];\n  }\n  /**\n   * Get the tex output of the monom\n   */\n  get tex() {\n    let e = \"\";\n    const t = Object.keys(s(this, b)).sort();\n    for (const i of t)\n      s(this, b)[i].isNotZero() && (e += i, s(this, b)[i].isNotEqual(1) && (e += `^{ ${s(this, b)[i].tfrac.tex} }`));\n    return e === \"\" ? s(this, T).value != 0 ? s(this, T).frac.tex : \"0\" : s(this, T).value === 1 ? e : s(this, T).value === -1 ? `-${e}` : s(this, T).value === 0 ? \"0\" : `${s(this, T).frac.tex}${e}`;\n  }\n  // Getter helpers.\n  /**\n   * Get the variables letters\n   */\n  get variables() {\n    const e = [];\n    return Object.entries(this.literal).forEach(\n      ([t, i]) => {\n        i.isZero() || e.push(t);\n      }\n    ), e.sort(), e;\n  }\n  _getLiteralDividers(e, t) {\n    const i = [];\n    for (let n = 0; n <= this.literal[t].value; n++)\n      if (e.length === 0) {\n        const r = {};\n        r[t] = new f(n), i.push(r);\n      } else\n        for (const r of e) {\n          const l = {};\n          for (const c in r)\n            l[c] = r[c];\n          l[t] = new f(n), i.push(l);\n        }\n    return i;\n  }\n};\nT = new WeakMap(), b = new WeakMap(), Qe = new WeakSet(), xt = function(e) {\n  for (const t in e.literal)\n    s(this, b)[t] = e.literal[t].clone();\n}, ze = new WeakMap(), kt = new WeakMap(), Mt = new WeakMap(), a(I, \"gcd\", (...e) => {\n  for (const r of e)\n    if (r.containsRationalPower())\n      return new I().zero();\n  const t = new I(), i = U.gcd(...e.map((r) => r.coefficient.numerator)), n = U.lcm(...e.map((r) => r.coefficient.denominator));\n  t.coefficient = new f(i, n).reduce();\n  for (const r of e) {\n    for (const l in t.literal)\n      l in r.literal || t.literal[l].zero();\n    for (const l in r.literal)\n      !t.hasVariable(l) && r.literal[l].isStrictlyPositive() ? t.literal[l] = r.literal[l].clone() : t.literal[l] = new f(Math.min(r.literal[l].value, t.literal[l].value));\n  }\n  return t;\n}), /**\n * Multiply two monoms and return a NEW monom.\n * @param monoms\n */\na(I, \"xMultiply\", (...e) => {\n  const t = new I().one();\n  for (const i of e)\n    t.multiply(i);\n  return t;\n});\nlet M = I;\nfunction yi(o, e = !0) {\n  return e ? `\\\\left( ${o} \\\\right)` : `(${o})`;\n}\nfunction Et(o, e, t, i, n) {\n  return o.map((r, l) => r === e ? t : r);\n}\nvar je, y, Ke, ft, Je, dt, Ct, Pt, $t, _e, It, pt, St, Bt, Rt, zt, ki, Lt, Vt;\nconst P = class P {\n  constructor(e, ...t) {\n    m(this, zt);\n    m(this, je);\n    m(this, y);\n    m(this, Ke);\n    m(this, ft, !1);\n    /**\n     * Parse a string to a polynom.\n     * @param inputStr\n     * @param values\n     */\n    a(this, \"parse\", (e, ...t) => {\n      if (h(this, y, []), h(this, je, []), typeof e == \"string\")\n        return A(this, zt, ki).call(this, e, ...t);\n      if ((typeof e == \"number\" || e instanceof f || e instanceof M) && t.length === 0)\n        s(this, y).push(new M(e));\n      else if (e instanceof M && t.length > 0)\n        s(this, y).push(new M(e)), t.forEach((i) => {\n          s(this, y).push(new M(i));\n        });\n      else if (e instanceof P)\n        for (const i of e.monoms)\n          s(this, y).push(i.clone());\n      return this;\n    });\n    /**\n     * Clone the polynom\n     */\n    a(this, \"clone\", () => {\n      const e = new P(), t = [];\n      for (const i of s(this, y))\n        t.push(i.clone());\n      return e.monoms = t, e;\n    });\n    a(this, \"add\", (...e) => {\n      for (const t of e)\n        t instanceof P ? h(this, y, s(this, y).concat(t.monoms)) : t instanceof M ? s(this, y).push(t.clone()) : typeof t == \"number\" && Number.isSafeInteger(t) ? s(this, y).push(new M(t.toString())) : s(this, y).push(new M(t));\n      return this.reduce();\n    });\n    a(this, \"commonMonom\", () => {\n      const e = new M().one(), t = this.gcdNumerator(), i = this.gcdDenominator(), n = this.degree();\n      e.coefficient = new f(t, i);\n      for (const r of this.variables) {\n        e.setLetter(r, n);\n        for (const l of s(this, y))\n          if (e.setLetter(r, f.min(l.degree(r), e.degree(r))), e.degree(r).isZero())\n            break;\n      }\n      return e;\n    });\n    a(this, \"degree\", (e) => {\n      let t = new f().zero();\n      for (const i of s(this, y))\n        t = f.max(i.degree(e).value, t);\n      return t;\n    });\n    a(this, \"derivative\", (e) => {\n      const t = new P();\n      for (const i of s(this, y))\n        t.add(i.derivative(e));\n      return t.reduce();\n    });\n    a(this, \"divide\", (e) => {\n      if (e instanceof f)\n        return s(this, dt).call(this, e);\n      if (typeof e == \"number\" && Number.isSafeInteger(e))\n        return s(this, Ct).call(this, e);\n      if (e instanceof M)\n        return this.divide(new P(e));\n      if (e instanceof P) {\n        if (e.monoms.length === 1 && e.variables.length === 0)\n          return s(this, dt).call(this, e.monoms[0].coefficient);\n        {\n          const { quotient: t, reminder: i } = this.euclidean(e);\n          if (i.isZero())\n            return h(this, y, t.monoms), this;\n        }\n      } else if (typeof e == \"string\")\n        return this.divide(new P(e));\n      throw new Error(`Cannot divide by ${e}`);\n    });\n    a(this, \"empty\", () => (h(this, y, []), this));\n    /**\n     * Divide the current polynom by another polynom.\n     * @param P\n     * returns {quotient: Polynom, reminder: Polynom}\n     */\n    a(this, \"euclidean\", (e) => {\n      const t = e.variables[0], i = new P().zero(), n = this.clone().reorder(t);\n      if (e.variables.length === 0)\n        return {\n          quotient: this.clone().divide(e).reduce(),\n          reminder: new P().zero()\n        };\n      const r = e.monomByDegree(void 0, t), l = e.degree(t);\n      let c, u = this.degree(t).value * 2;\n      for (; n.degree(t).isGeq(l) && u > 0 && (u--, c = n.monomByDegree(void 0, t).clone().divide(r), !(!c.isZero() && (i.add(c), n.subtract(e.clone().multiply(c)).reduce(), c.degree(t).isZero()))); )\n        ;\n      return i.reduce(), n.reduce(), { quotient: i, reminder: n };\n    });\n    a(this, \"evaluate\", (e, t) => {\n      if (t)\n        return s(this, Pt).call(this, e);\n      const i = new f().zero();\n      return s(this, y).forEach((n) => {\n        i.add(n.evaluate(e, t));\n      }), i;\n    });\n    // -------------------------------------\n    /**\n     * Factorize a polynom and store the best results in factors.\n     * @param letter\n     */\n    a(this, \"factorize\", (e) => {\n      let t = [], i = this.clone().reorder();\n      const n = i.commonMonom();\n      if (i.monomByDegree().coefficient.isStrictlyNegative() && n.coefficient.isStrictlyPositive() && !n.isOne() && n.opposite(), !n.isOne()) {\n        const c = new P(n);\n        t = [c.clone()], i = i.euclidean(c).quotient;\n      }\n      let r = i.degree().clone().multiply(2).value, l = 1;\n      for (; r >= 0; )\n        if (r--, i.monoms.length < 2) {\n          i.isOne() || (t.push(i.clone()), i.one());\n          break;\n        } else if (i.degree(e).isOne()) {\n          t.push(i.clone()), i.one();\n          break;\n        } else {\n          let c = s(this, It).call(this, i, l, e ?? \"x\");\n          for (l = i.degree(e).value; c.length > 0; ) {\n            const u = c[0];\n            if (!i.isDividableBy(u))\n              c.shift();\n            else {\n              const d = i.euclidean(u);\n              t.push(u), i = d.quotient.clone(), c = c.filter((p) => {\n                const w = i.monoms[0], V = i.monoms[i.monoms.length - 1], ce = p.monoms[0], ue = p.monoms[p.monoms.length - 1];\n                return V.isDivisible(ue) ? w.isDivisible(ce) : !1;\n              });\n            }\n          }\n        }\n      return i.isOne() || t.push(i.clone()), h(this, je, t), s(this, je);\n    });\n    a(this, \"gcdDenominator\", () => U.gcd(...this.getDenominators()));\n    a(this, \"gcdNumerator\", () => U.gcd(...this.getNumerators()));\n    // Next functions are used for for commonMonom, which is used in the factorize method.\n    a(this, \"getDenominators\", () => {\n      const e = [];\n      for (const t of s(this, y))\n        e.push(t.coefficient.denominator);\n      return e;\n    });\n    a(this, \"getNumerators\", () => {\n      const e = [];\n      for (const t of s(this, y))\n        e.push(t.coefficient.numerator);\n      return e;\n    });\n    a(this, \"getZeroes\", () => this.degree().isZero() ? [] : (this.roots = new At(this.clone()).solve(), this.roots));\n    a(this, \"integrate\", (e, t, i = \"x\") => {\n      const n = this.primitive(i), r = {}, l = {};\n      return r[i] = new f(e), l[i] = new f(t), n.evaluate(l).subtract(n.evaluate(r));\n    });\n    a(this, \"isDeveloped\", (e) => {\n      let t;\n      const i = e.replaceAll(/\\^\\(([-0-9/]+)\\)/g, \"$1\");\n      if (i.includes(\"(\") || i.includes(\")\"))\n        return !1;\n      try {\n        t = new P(e);\n      } catch {\n        return !1;\n      }\n      return !!this.isEqual(t);\n    });\n    a(this, \"isDividableBy\", (e) => {\n      if (e.degree().isOne()) {\n        const t = e.getZeroes()[0];\n        return t.exact instanceof f ? this.evaluate(t.exact).isZero() : !1;\n      } else {\n        const { reminder: t } = this.euclidean(e);\n        return t.isZero();\n      }\n    });\n    a(this, \"isEqual\", (e) => s(this, Je).call(this, e, \"=\"));\n    a(this, \"isOppositeAt\", (e) => s(this, Je).call(this, e.clone().opposite(), \"=\"));\n    a(this, \"isReduced\", (e) => {\n      if (!this.isDeveloped(e))\n        return !1;\n      const t = new P(e);\n      if (t.monoms.length > this.monoms.length)\n        return !1;\n      for (const i of t.monoms)\n        if (!i.coefficient.isReduced())\n          return !1;\n      return !1;\n    });\n    a(this, \"isSameAs\", (e) => s(this, Je).call(this, e, \"same\"));\n    a(this, \"lcmDenominator\", () => U.lcm(...this.getDenominators()));\n    a(this, \"lcmNumerator\", () => U.lcm(...this.getNumerators()));\n    a(this, \"letters\", () => {\n      let e = /* @__PURE__ */ new Set();\n      for (const t of s(this, y))\n        e = /* @__PURE__ */ new Set([...e, ...t.variables]);\n      return [...e];\n    });\n    a(this, \"limitToInfinity\", (e) => {\n      const t = this.monomByDegree(void 0, e), i = t.coefficient.sign(), n = t.degree(e);\n      return n.isStrictlyPositive() ? i === 1 ? new f().infinite() : new f().infinite().opposite() : n.isZero() ? t.coefficient : new f().zero();\n    });\n    a(this, \"limitToNegativeInfinity\", (e) => {\n      const t = this.monomByDegree(void 0, e), i = t.coefficient.sign(), n = t.degree(e);\n      return n.isStrictlyPositive() ? i === -1 ? new f().infinite() : new f().infinite().opposite() : n.isZero() ? t.coefficient : new f().zero();\n    });\n    a(this, \"monomByDegree\", (e, t) => {\n      if (e === void 0)\n        return this.monomByDegree(this.degree(t), t);\n      const i = this.clone().reduce();\n      for (const n of s(i, y))\n        if (n.degree(t).isEqual(e))\n          return n.clone();\n      return new M().zero();\n    });\n    // Used in LinearSystem.tex\n    a(this, \"monomByLetter\", (e) => {\n      const t = this.clone().reduce();\n      for (const i of s(t, y))\n        if (i.hasVariable(e))\n          return i.clone();\n      return new M().zero();\n    });\n    a(this, \"monomsByDegree\", (e, t) => {\n      if (e === void 0)\n        return this.monomsByDegree(this.degree(t));\n      const i = [], n = this.clone().reduce();\n      for (const r of s(n, y))\n        r.degree(t).isEqual(e) && i.push(r.clone());\n      return i;\n    });\n    a(this, \"multiply\", (e) => e instanceof P ? s(this, Rt).call(this, e) : e instanceof f ? s(this, pt).call(this, e) : e instanceof M ? s(this, Bt).call(this, e) : Number.isSafeInteger(e) && typeof e == \"number\" ? s(this, St).call(this, e) : this);\n    a(this, \"one\", () => (h(this, y, []), s(this, y).push(new M().one()), this));\n    // ------------------------------------------\n    a(this, \"opposite\", () => (h(this, y, s(this, y).map((e) => e.opposite())), this));\n    a(this, \"pow\", (e) => {\n      if (!Number.isSafeInteger(e))\n        return this.zero();\n      if (e < 0)\n        return this.zero();\n      if (e === 0)\n        return new P();\n      const t = this.clone();\n      for (let i = 1; i < e; i++)\n        this.multiply(t);\n      return this.reduce();\n    });\n    a(this, \"primitive\", (e) => {\n      const t = new P();\n      for (const i of s(this, y))\n        t.add(i.primitive(e));\n      return t;\n    });\n    a(this, \"reduce\", () => {\n      let e = 0;\n      for (; e < s(this, y).length; ) {\n        for (let t = e + 1; t < s(this, y).length; t++)\n          s(this, y)[e].isSameAs(s(this, y)[t]) && (s(this, y)[e].add(s(this, y)[t]), s(this, y).splice(t, 1), s(this, y)[e].isZero() && (s(this, y)[e] = new M().zero()), t--);\n        e++;\n      }\n      h(this, y, s(this, y).filter((t) => !t.coefficient.isZero()));\n      for (const t of s(this, y))\n        t.coefficient.reduce();\n      return this.length === 0 ? new P().zero() : this.reorder();\n    });\n    // ------------------------------------------\n    a(this, \"reorder\", (e = \"x\", t) => {\n      t === void 0 && (t = !1);\n      const i = this.variables.filter((n) => n !== e);\n      return s(this, y).sort(function(n, r) {\n        const l = n.degree(e).value, c = r.degree(e).value;\n        if (l !== c)\n          return t ? l - c : c - l;\n        if (i.length > 0)\n          for (const u of i) {\n            const d = n.degree(u).value, p = r.degree(u).value;\n            if (d !== p)\n              return t ? d - p : p - d;\n          }\n        return 0;\n      }), this;\n    });\n    /**\n     * Replace a variable (letter) by a polynom.\n     * @param letter\n     * @param P\n     */\n    a(this, \"replaceBy\", (e, t) => {\n      let i;\n      const n = new P().zero();\n      for (const r of this.monoms)\n        !r.hasVariable(e) || r.literal[e].isZero() ? n.add(r.clone()) : (i = r.literal[e].clone(), r.removeVariable(e), n.add(t.clone().pow(Math.abs(i.numerator)).multiply(r)));\n      return h(this, y, n.reduce().monoms), this;\n    });\n    a(this, \"subtract\", (...e) => {\n      for (const t of e)\n        t instanceof P ? this.add(t.clone().opposite()) : t instanceof M ? s(this, y).push(t.clone().opposite()) : s(this, y).push(new M(t).opposite());\n      return this.reduce();\n    });\n    /**\n     * Set the polynom to zero.\n     * @returns {this}\n     */\n    a(this, \"zero\", () => (h(this, y, []), s(this, y).push(new M().zero()), this));\n    m(this, Je, (e, t) => {\n      t === void 0 && (t = \"=\");\n      const i = this.clone().reduce().reorder(), n = e.clone().reduce().reorder();\n      switch (t) {\n        case \"=\":\n          return i.length !== n.length || !i.degree().isEqual(n.degree()) ? !1 : i.monoms.every((r, l) => r.isEqual(n.monoms[l]));\n        case \"same\":\n          return i.length !== n.length || !i.degree().isEqual(n.degree()) ? !1 : i.monoms.every((r, l) => r.isSameAs(n.monoms[l]));\n        default:\n          return !1;\n      }\n    });\n    m(this, dt, (e) => {\n      for (const t of s(this, y))\n        t.coefficient.divide(e);\n      return this;\n    });\n    m(this, Ct, (e) => {\n      const t = new f(e);\n      for (const i of s(this, y))\n        i.coefficient.divide(t);\n      return this;\n    });\n    m(this, Pt, (e) => {\n      let t = 0;\n      return s(this, y).forEach((i) => {\n        t += i.evaluate(e, !0);\n      }), t;\n    });\n    m(this, $t, (e) => {\n      var w;\n      let t, i, n, r, l, c, u, d, p;\n      if (this.numberOfVars === 1)\n        return n = this.monomByDegree(2, e).coefficient, r = this.monomByDegree(1, e).coefficient, l = this.monomByDegree(0, e).coefficient, c = r.clone().pow(2).subtract(n.clone().multiply(l).multiply(4)), c.isZero() ? (u = r.clone().opposite().divide(n.clone().multiply(2)), t = new P(e).subtract(u.display).multiply(u.denominator), i = new P(e).subtract(u.display).multiply(u.denominator), p = n.divide(u.denominator).divide(u.denominator), p.isOne() ? [t, i] : [new P(p.display), t, i]) : c.isPositive() && c.isSquare() ? (u = r.clone().opposite().add(c.clone().sqrt()).divide(n.clone().multiply(2)), d = r.clone().opposite().subtract(c.clone().sqrt()).divide(n.clone().multiply(2)), p = n.divide(u.denominator).divide(d.denominator), p.isOne() ? [\n          new P(e).subtract(u.display).multiply(u.denominator),\n          new P(e).subtract(d.display).multiply(d.denominator)\n        ] : [\n          new P(p.display),\n          new P(e).subtract(u.display).multiply(u.denominator),\n          new P(e).subtract(d.display).multiply(d.denominator)\n        ]) : [this.clone()];\n      if (n = this.monomByDegree(2, e), r = this.monomByDegree(1, e), l = this.monomByDegree(0, e), n.isLiteralSquare() && l.isLiteralSquare() && r.clone().pow(2).isSameAs(n.clone().multiply(l))) {\n        const V = new P(\"x\", n.coefficient, r.coefficient, l.coefficient), ce = s(w = V, $t).call(w, \"x\"), ue = [];\n        let fe;\n        if (ce.length >= 2) {\n          for (const ye of ce)\n            ye.degree().isZero() ? ue.push(ye.clone()) : (fe = ye.clone(), fe.monoms[0].literal = n.literalSqrt, fe.monoms[1].literal = l.literalSqrt, ue.push(fe.clone()));\n          return ue;\n        }\n      }\n      return [this.clone()];\n    });\n    m(this, _e, (e, t, i, n) => {\n      let r = \"\";\n      for (const l of s(this, y)) {\n        if (l.coefficient.value === 0)\n          continue;\n        let c;\n        n ? c = l.plotFunction : c = e === \"tex\" ? l.tex : l.display, r += `${l.coefficient.sign() === 1 && (r !== \"\" || t === !0) ? \"+\" : \"\"}${c}`;\n      }\n      return i === !0 && this.length > 1 && (e === \"tex\" ? r = `\\\\left( ${r} \\\\right)` : r = `(${r})`), r === \"\" && (r = \"0\"), r;\n    });\n    m(this, It, (e, t, i) => {\n      const n = e.monoms[0].dividers, r = e.monoms[e.monoms.length - 1].dividers, l = [];\n      return n.forEach((c) => {\n        c.degree(i).isLeq(t) && r.forEach((u) => {\n          c.degree(i).isNotEqual(u.degree(i)) && (l.push(new P(c, u)), l.push(new P(c, u.clone().opposite())));\n        });\n      }), l;\n    });\n    m(this, pt, (e) => {\n      for (const t of s(this, y))\n        t.coefficient.multiply(e);\n      return this.reduce();\n    });\n    m(this, St, (e) => s(this, pt).call(this, new f(e)));\n    m(this, Bt, (e) => {\n      for (const t of s(this, y))\n        t.multiply(e);\n      return this.reduce();\n    });\n    m(this, Rt, (e) => {\n      const t = [];\n      for (const i of s(this, y))\n        for (const n of e.monoms)\n          t.push(M.xMultiply(i, n));\n      return h(this, y, t), this.reduce();\n    });\n    /**\n     * Main parse using a shutting yard class\n     * @param inputStr\n     */\n    m(this, Lt, (e) => {\n      const i = new Kt().parse(e).rpn;\n      this.zero();\n      const n = [];\n      for (const r of i)\n        s(this, Vt).call(this, n, r);\n      return n.length === 1 && this.add(n[0]), this.reorder();\n    });\n    m(this, Vt, (e, t) => {\n      switch (t.tokenType) {\n        case g.COEFFICIENT:\n          e.push(new P(t.token));\n          break;\n        case g.VARIABLE:\n          e.push(new P().add(new M(t.token)));\n          break;\n        case g.CONSTANT:\n          console.log(\"Actually, not supported - will be added later !\");\n          break;\n        case g.OPERATION:\n          if (e.length >= 2) {\n            const i = e.pop(), n = e.pop();\n            if (n === void 0 || i === void 0)\n              break;\n            if (t.token === \"+\")\n              e.push(n.add(i));\n            else if (t.token === \"-\")\n              e.push(n.subtract(i));\n            else if (t.token === \"*\")\n              e.push(n.multiply(i));\n            else if (t.token === \"/\")\n              i.degree().isStrictlyPositive() ? console.log(\"divide by a polynom -> should create a rational polynom !\") : e.push(n.divide(i.monoms[0].coefficient));\n            else if (t.token === \"^\") {\n              if (i.degree().isStrictlyPositive())\n                throw new Error(\"Cannot elevate a polynom with another polynom !\");\n              if (i.monoms[0].coefficient.isRelative())\n                e.push(n.pow(i.monoms[0].coefficient.value));\n              else if (n.monoms.length === 1 && n.monoms[0].coefficient.isOne()) {\n                for (const r in n.monoms[0].literal)\n                  n.monoms[0].literal[r].multiply(i.monoms[0].coefficient);\n                e.push(n);\n              } else\n                console.error(\"Cannot have power with fraction\");\n            }\n          } else if (t.token === \"-\") {\n            const i = e.pop();\n            i && e.push(i.opposite());\n          } else\n            throw new Error(\"Error parsing the polynom\");\n          break;\n        case g.MONOM:\n          console.error(\"The monom token should not appear here\");\n          break;\n        case g.FUNCTION:\n          console.error(\"The function token should not appear here - might be introduced later.\");\n          break;\n      }\n    });\n    return h(this, y, []), h(this, je, []), h(this, Ke, []), e !== void 0 && this.parse(e, ...t), this;\n  }\n  get tex() {\n    return s(this, _e).call(this, \"tex\");\n  }\n  get display() {\n    return s(this, _e).call(this);\n  }\n  fromCoefficients(...e) {\n    h(this, y, []);\n    const t = \"x\";\n    return e.reverse().forEach((i, n) => {\n      const r = new M();\n      r.coefficient = new f(i), r.setLetter(t, n), s(this, y).push(r);\n    }), this;\n  }\n  getCoefficients() {\n    const e = this.clone().reorder(), t = this.degree().value + 1, i = new Array(t).fill(new f(0));\n    return e.monoms.forEach((n) => {\n      const r = t - n.degree().value - 1;\n      i[r] = n.coefficient.clone();\n    }), i;\n  }\n  hasVariable(e) {\n    return this.variables.includes(e);\n  }\n  inverse() {\n  }\n  get isMultiVariable() {\n    return s(this, y).some((e) => e.variables.length > 1);\n  }\n  isOne() {\n    return s(this, y).length === 1 && s(this, y)[0].coefficient.isOne() && this.degree().isZero();\n  }\n  isZero() {\n    return s(this, y).length === 1 && s(this, y)[0].coefficient.isZero() || s(this, y).length === 0;\n  }\n  get length() {\n    return s(this, y).length;\n  }\n  // ------------------------------------------\n  get monoms() {\n    return s(this, y);\n  }\n  set monoms(e) {\n    h(this, y, e);\n  }\n  get numberOfVars() {\n    return this.variables.length;\n  }\n  get plotFunction() {\n    return s(this, _e).call(this, \"tex\", !1, !1, !0);\n  }\n  root() {\n    throw new Error(\"Cannot take the root from a polynom\");\n  }\n  get roots() {\n    return s(this, ft) ? s(this, Ke) : this.getZeroes();\n  }\n  set roots(e) {\n    h(this, ft, !0), h(this, Ke, e);\n  }\n  sqrt() {\n    throw new Error(\"Cannot take the square root from a polynom\");\n  }\n  tableOfSigns() {\n    const e = this.roots;\n    let t = new Array(2 * e.length + 1).fill(\"\").map((i, n) => n % 2 === 0 ? \"\" : \"z\");\n    if (t.length === 1) {\n      const [i] = this.getCoefficients().map((n) => n.value);\n      t = Et(t, \"\", i > 0 ? \"+\" : \"-\");\n    } else if (this.degree().isOne()) {\n      const [i] = this.getCoefficients().map((n) => n.value);\n      t[0] = i > 0 ? \"-\" : \"+\", t[1] = \"z\", t[2] = i > 0 ? \"+\" : \"-\";\n    } else\n      [\n        e[0].value - 1,\n        ...e.map((n, r) => r === e.length - 1 ? e[r].value + 1 : (e[r].value + e[r + 1].value) / 2)\n      ].forEach((n, r) => {\n        const l = this.evaluate({ x: n }, !0);\n        t[r * 2] = l > 0 ? \"+\" : \"-\";\n      });\n    return { roots: e, signs: t };\n  }\n  get variables() {\n    let e = [];\n    for (const t of s(this, y))\n      e = e.concat(t.variables);\n    return e = [...new Set(e)], e.sort(), e;\n  }\n  get zeroes() {\n    return this.getZeroes();\n  }\n};\nje = new WeakMap(), y = new WeakMap(), Ke = new WeakMap(), ft = new WeakMap(), Je = new WeakMap(), dt = new WeakMap(), Ct = new WeakMap(), Pt = new WeakMap(), $t = new WeakMap(), _e = new WeakMap(), It = new WeakMap(), pt = new WeakMap(), St = new WeakMap(), Bt = new WeakMap(), Rt = new WeakMap(), zt = new WeakSet(), ki = function(e, ...t) {\n  if (t.length === 0) {\n    if (e = \"\" + e, e !== \"\" && !isNaN(Number(e))) {\n      this.empty();\n      const i = new M(e);\n      return this.add(i), this;\n    }\n    return s(this, Lt).call(this, e);\n  } else if (/^[a-z]+/.test(e)) {\n    this.empty();\n    const i = t.map((n) => new f(n));\n    if (e.length > 1) {\n      const n = e.split(\"\");\n      if (n.length < t.length - 2)\n        throw new Error(\"Too many factors for too few variables !\");\n      let r = 0;\n      for (const l of i) {\n        const c = new M();\n        c.coefficient = l.clone(), c.literalStr = n[r] || \"\", this.add(c), r++;\n      }\n    } else {\n      let n = i.length - 1;\n      for (const r of i) {\n        const l = new M();\n        l.coefficient = r.clone(), l.literalStr = `${e}^${n}`, this.add(l), n--;\n      }\n    }\n    return this;\n  } else\n    return this.zero();\n}, Lt = new WeakMap(), Vt = new WeakMap();\nlet O = P;\nvar q, k, oe, Dt, et, Zt;\nconst Ne = class Ne {\n  constructor(e, t, i) {\n    // Left part of the equation\n    m(this, q);\n    // Right part of the equation\n    m(this, k);\n    // Signe of the equation\n    m(this, oe);\n    // ------------------------------------------\n    a(this, \"parse\", (e) => {\n      const t = s(this, Dt).call(this, e);\n      if (t === !1)\n        throw new Error(\"The equation is not valid (no sign found)\");\n      const i = e.split(t);\n      return this.create(new O(i[0]), new O(i[1]), s(this, et).call(this, t));\n    });\n    a(this, \"create\", (e, t, i) => (h(this, q, e), h(this, k, t), h(this, oe, s(this, et).call(this, i ?? \"=\")), this));\n    a(this, \"clone\", () => new Ne(s(this, q).clone(), s(this, k).clone(), s(this, oe)));\n    /**\n     * Get the degree of the equation\n     * @param letter\n     */\n    a(this, \"degree\", (e) => f.max(s(this, q).degree(e), s(this, k).degree(e)));\n    /**\n     * divide an equation by a given value (transformed as a fraction)\n     *\n     * ```\n     * 8x+10=6x \\vert 2\n     * 4x+5=3x\n     * ```\n     *\n     * |>Alternatively with $3x-4$ maybe it's working ?\n     * $$\\frac{3x}{5}$$\n     *\n     * @param value\n     * @returns {Equation}\n     */\n    a(this, \"divide\", (e) => {\n      const t = new f(e);\n      return t.isZero() ? this : this.multiply(t.inverse());\n    });\n    /**\n     * Determine if the equation contains a variable.\n     * @param letter\n     */\n    a(this, \"hasVariable\", (e) => this.variables.includes(e));\n    a(this, \"isLinearTo\", (e) => {\n      const t = e.clone().moveLeft().simplify().left, i = this.clone().moveLeft().simplify().left;\n      return t.isEqual(i) || t.isOppositeAt(i);\n    });\n    /**\n     * Determine if the equation contains more than one letter/variable.\n     */\n    a(this, \"isMultiVariable\", () => s(this, q).isMultiVariable || s(this, k).isMultiVariable);\n    // -----------------------------------------------\n    // Equations helpers\n    a(this, \"isEqualTo\", (e) => {\n      const t = e.clone().moveLeft().left, i = this.clone().moveLeft().left;\n      return t.isEqual(i) || t.isOppositeAt(i);\n    });\n    /**\n     * Reorder the polynom to have only one letter on the left, the rest on the right.\n     * @param letter\n     */\n    a(this, \"isolate\", (e) => {\n      if (!this.degree(e).isOne() || this.isMultiVariable())\n        return !1;\n      let t;\n      s(this, q).subtract(s(this, k)), s(this, k).zero();\n      const i = [...s(this, q).monoms];\n      for (const r of i)\n        r.hasVariable(e) || (t = r.clone(), s(this, q).subtract(t), s(this, k).subtract(t));\n      if (s(this, q).length !== 1)\n        return !1;\n      const n = s(this, q).monoms[0].coefficient.clone();\n      return s(this, q).divide(n), s(this, k).divide(n), this;\n    });\n    // -----------------------------------------------\n    // Equations operations\n    // -----------------------------------------------\n    a(this, \"letters\", () => [.../* @__PURE__ */ new Set([...s(this, q).letters(), ...s(this, k).letters()])]);\n    // -----------------------------------------------\n    /**\n     * Reorder will move all monoms containing a letter on the left, all the other on the right.\n     */\n    a(this, \"moveLeft\", () => (s(this, q).subtract(s(this, k)), s(this, k).zero(), this));\n    /**\n     * Multiple an equation by a fraction value.\n     * @param value\n     */\n    a(this, \"multiply\", (e) => {\n      const t = new f(e);\n      return s(this, q).multiply(t), s(this, k).multiply(t), s(this, oe) !== \"=\" && t.sign() === -1 && s(this, Zt).call(this), this;\n    });\n    a(this, \"opposite\", () => (h(this, q, s(this, q).opposite()), h(this, k, s(this, k).opposite()), this));\n    a(this, \"reorder\", (e) => (s(this, q).subtract(s(this, k)), s(this, k).zero(), s(this, q).reorder(), e ? this : (s(this, q).monoms.filter((t) => t.degree().isZero()).forEach((t) => {\n      const i = t.clone();\n      s(this, q).subtract(i), s(this, k).subtract(i);\n    }), s(this, q).reorder(), s(this, k).reorder(), this)));\n    // ------------------------------------------\n    a(this, \"replaceBy\", (e, t) => (s(this, q).replaceBy(e, t), s(this, k).replaceBy(e, t), this));\n    /**\n     * Multiply by the lcm denominator and divide by the gcm numerators.\n     */\n    a(this, \"simplify\", () => (this.multiply(U.lcm(...s(this, q).getDenominators(), ...s(this, k).getDenominators())), this.divide(U.gcd(...s(this, q).getNumerators(), ...s(this, k).getNumerators())), this));\n    // -----------------------------------------------\n    a(this, \"solve\", () => new At(this.clone()).solve());\n    a(this, \"test\", (e) => this.left.evaluate(e).isEqual(this.right.evaluate(e)));\n    m(this, Dt, (e) => {\n      if (e.includes(\"geq\"))\n        return e.includes(\"\\\\geq\") ? \"\\\\geq\" : \"geq\";\n      if (e.includes(\"leq\"))\n        return e.includes(\"\\\\leq\") ? \"\\\\leq\" : \"leq\";\n      if (e.includes(\">=\"))\n        return \">=\";\n      if (e.includes(\"=>\"))\n        return \"=>\";\n      if (e.includes(\">\"))\n        return \">\";\n      if (e.includes(\"<=\"))\n        return \"<=\";\n      if (e.includes(\"=<\"))\n        return \"=<\";\n      if (e.includes(\"<\"))\n        return \"<\";\n      if (e.includes(\"=\"))\n        return \"=\";\n      throw new Error(\"The equation is not valid (no sign found)\");\n    });\n    // -----------------------------------------------\n    // Equations solving algorithms\n    m(this, et, (e) => e === void 0 ? \"=\" : e.includes(\"geq\") || e.includes(\">=\") || e.includes(\"=>\") ? \">=\" : e.includes(\">\") ? \">\" : e.includes(\"leq\") || e.includes(\"<=\") || e.includes(\"=<\") ? \"<=\" : e.includes(\"<\") ? \"<\" : \"=\");\n    m(this, Zt, () => s(this, oe) === \"=\" ? this : s(this, oe).includes(\"<\") ? (s(this, oe).replace(\"<\", \">\"), this) : s(this, oe).includes(\">\") ? (s(this, oe).replace(\">\", \"<\"), this) : this);\n    if (h(this, q, new O().zero()), h(this, k, new O().zero()), h(this, oe, \"=\"), e !== void 0 && t === void 0) {\n      if (e instanceof Ne)\n        return e.clone();\n      typeof e == \"string\" && this.parse(e);\n    } else e !== void 0 && t !== void 0 && (this.left = new O(e), this.right = new O(t));\n    return i !== void 0 && (this.sign = i), this;\n  }\n  /**\n   * Add a value to the equation\n   * if value is an equation, add the left part to the left part of the equation\n   * and the right part to the right part of the equation\n   * if value is a string, try to create an equation\n   * if it fails, create a polynom and add it to the left and right part of the equation\n   * @param value | Polynom | Monom | Fraction | string | monom\n   */\n  add(e) {\n    if (e instanceof Ne)\n      return s(this, q).add(e.left), s(this, k).add(e.right), this;\n    if (typeof e == \"string\" && !Ne.isEquationString(e))\n      return this.add(new Ne(e));\n    const t = new O(e);\n    return s(this, q).add(t), s(this, k).add(t), this;\n  }\n  /**\n   * Create an Equation using two polynoms.\n   * Markdown *support* is cool\n   * @param values\n   * @param asNumeric\n   */\n  evaluate(e, t) {\n    const i = s(this, q).evaluate(e, t), n = s(this, k).evaluate(e, t);\n    return t ? i === n : i.isEqual(n);\n  }\n  isEqual(e) {\n    const t = new Ne(e);\n    return t.left.isEqual(s(this, q)) && t.right.isEqual(s(this, k));\n  }\n  pow(e) {\n    return s(this, q).pow(e), s(this, k).pow(e), this;\n  }\n  reduce() {\n    return this.moveLeft(), s(this, q).reduce(), this.simplify(), s(this, q).monoms[0].coefficient.isNegative() && this.multiply(-1), this;\n  }\n  split() {\n    return [s(this, q).clone(), s(this, k).clone()];\n  }\n  subtract(e) {\n    if (e instanceof Ne)\n      return s(this, q).subtract(e.left), s(this, k).subtract(e.right), this;\n    if (typeof e == \"string\" && !Ne.isEquationString(e))\n      return this.subtract(new Ne(e));\n    const t = new O(e);\n    return s(this, q).subtract(t), s(this, k).subtract(t), this;\n  }\n  static isEquationString(e) {\n    return e.includes(\"=\") || e.includes(\"<\") || e.includes(\">\") || e.includes(\"<=\") || e.includes(\">=\");\n  }\n  static makeSolutionsUnique(e, t) {\n    const i = [], n = e.filter((r) => i.includes(r.tex) ? !1 : (i.push(r.tex), !0));\n    return t === !0 && n.sort((r, l) => r.value - l.value), n;\n  }\n  get display() {\n    return `${s(this, q).display}${this.signAsTex}${s(this, k).display}`;\n  }\n  // Getter and setter\n  get left() {\n    return s(this, q);\n  }\n  set left(e) {\n    h(this, q, e);\n  }\n  get numberOfVars() {\n    return this.variables.length;\n  }\n  get right() {\n    return s(this, k);\n  }\n  set right(e) {\n    h(this, k, e);\n  }\n  // ------------------------------------------\n  get sign() {\n    return s(this, oe);\n  }\n  set sign(e) {\n    h(this, oe, s(this, et).call(this, e));\n  }\n  get signAsTex() {\n    return s(this, oe) === \">=\" ? \"\\\\geq\" : s(this, oe) === \"<=\" ? \"\\\\leq\" : s(this, oe);\n  }\n  get tex() {\n    return `${s(this, q).tex}${this.signAsTex}${s(this, k).tex}`;\n  }\n  get variables() {\n    return [...new Set(s(this, k).variables.concat(s(this, q).variables))];\n  }\n};\nq = new WeakMap(), k = new WeakMap(), oe = new WeakMap(), Dt = new WeakMap(), et = new WeakMap(), Zt = new WeakMap();\nlet H = Ne;\nvar Te, Ae, be, tt;\nconst ve = class ve {\n  constructor(e, t) {\n    m(this, Te);\n    m(this, Ae);\n    m(this, be);\n    m(this, tt, !1);\n    return e instanceof ve ? (h(this, Ae, e.polynom.clone()), h(this, be, e.power.clone()), t !== void 0 && s(this, be).multiply(new f(t))) : e !== void 0 ? (h(this, Ae, new O(e)), h(this, be, new f(t ?? 1))) : (h(this, Ae, new O()), h(this, be, new f(1))), h(this, Te, 1), this;\n  }\n  parse() {\n    throw new Error(\"Method not implemented.\");\n  }\n  clone() {\n    return new ve(this);\n  }\n  fromPolynom(e) {\n    return h(this, Ae, new O(e)), h(this, be, new f(1)), this;\n  }\n  get tex() {\n    const e = this.power.numerator, t = this.power.denominator;\n    let i, n;\n    return s(this, Te) === 0 && t > 1 ? (i = `\\\\sqrt${t === 2 ? \"\" : `[ ${t} ]`}{ ${this.polynom.tex} }`, n = e === 1 ? \"\" : `^{ ${e} }`) : (i = s(this, tt) && this.power.isOne() ? this.polynom.tex : yi(this.polynom.tex), n = t === 1 && e === 1 ? \"\" : `^{ ${this.power.tex} }`), i = `${i}${n}`, s(this, Te) === 0 && e < 0 && (i = `\\\\frac{ 1 }{ ${i} }`), i;\n  }\n  get display() {\n    const e = this.power.numerator, t = this.power.denominator;\n    let i, n;\n    return s(this, Te) === 0 && t > 1 ? (i = `${t === 2 ? \"sqrt\" : `root(${t})`}(${this.polynom.display})`, n = e === 1 ? \"\" : `^(${e})`) : (i = s(this, tt) && this.power.isOne() ? this.polynom.display : yi(this.polynom.display, !1), n = t === 1 && e === 1 ? \"\" : `^(${this.power.display})`), i = `${i}${n}`, s(this, Te) === 0 && e < 0 && (i = `1/(${i})`), i;\n  }\n  add() {\n    throw new Error(\"Adding two factors is not possible\");\n  }\n  get asSingle() {\n    return h(this, tt, !0), this;\n  }\n  degree(e) {\n    return this.polynom.degree(e).multiply(this.power);\n  }\n  derivative() {\n    return this.power.isZero() ? [new ve(\"0\")] : this.power.isOne() ? [new ve(this.polynom.clone().derivative())] : [\n      new ve(this.power.clone()),\n      new ve(this.polynom.clone().derivative()),\n      new ve(this.polynom.clone(), this.power.clone().subtract(1))\n    ];\n  }\n  develop() {\n    if (this.power.isNatural())\n      return this.polynom.clone().pow(this.power.value);\n    throw new Error(\"The power must be a natural number\");\n  }\n  divide(e) {\n    if (e instanceof ve && this.isSameAs(e))\n      return this.power.subtract(e.power), this;\n    const t = new O(e);\n    if (this.isSameAs(t))\n      return this.power.subtract(1), this;\n    throw new Error(\"The two factors must be the same\");\n  }\n  evaluate(e, t) {\n    return t ? this.polynom.evaluate(e, !0) ** this.power.value : this.polynom.evaluate(e).pow(this.power);\n  }\n  hasVariable(e) {\n    return this.polynom.hasVariable(e);\n  }\n  inverse() {\n    return this.power.opposite(), this;\n  }\n  isEqual(e) {\n    return this.isSameAs(e) && this.power.isEqual(e.power);\n  }\n  isOne() {\n    return this.polynom.isOne() || this.power.isZero();\n  }\n  isSameAs(e) {\n    let t;\n    return e instanceof ve ? t = e.polynom : e instanceof O ? t = e : t = new O(e), this.polynom.isEqual(t);\n  }\n  isZero() {\n    return this.polynom.isZero();\n  }\n  multiply(e) {\n    if (e instanceof ve && this.isSameAs(e))\n      return this.power.add(e.power), this;\n    const t = new O(e);\n    if (this.isSameAs(t))\n      return this.power.add(1), this;\n    throw new Error(\"The two factors must be the same\");\n  }\n  one() {\n    return s(this, Ae).one(), s(this, be).one(), this;\n  }\n  opposite() {\n    throw new Error(\"Method not implemented.\");\n  }\n  get polynom() {\n    return s(this, Ae);\n  }\n  set polynom(e) {\n    h(this, Ae, e);\n  }\n  pow(e) {\n    return this.power.multiply(e), this;\n  }\n  get power() {\n    return s(this, be);\n  }\n  set power(e) {\n    h(this, be, new f(e));\n  }\n  primitive() {\n    throw new Error(\"Method not implemented.\");\n  }\n  reduce() {\n    throw new Error(\"Method not implemented.\");\n  }\n  root(e) {\n    return this.power.divide(e), this;\n  }\n  sqrt() {\n    return this.root(2);\n  }\n  subtract() {\n    throw new Error(\"Subtracting two factors is not possible\");\n  }\n  tableOfSigns() {\n    const e = this.power.clone().reduce(), t = this.polynom.tableOfSigns();\n    return e.isStrictlyNegative() && (t.signs = Et(t.signs, \"z\", \"d\")), e.denominator % 2 === 0 ? t.signs = Et(t.signs, \"-\", \"h\") : e.numerator % 2 === 0 && (t.signs = Et(t.signs, \"-\", \"+\")), { roots: t.roots, signs: t.signs };\n  }\n  get variables() {\n    return this.polynom.variables;\n  }\n  get withPower() {\n    return h(this, Te, 1), this;\n  }\n  get withRoot() {\n    return h(this, Te, 0), this;\n  }\n  zero() {\n    return s(this, Ae).zero(), s(this, be).one(), this;\n  }\n};\nTe = new WeakMap(), Ae = new WeakMap(), be = new WeakMap(), tt = new WeakMap();\nlet se = ve;\nvar lt = /* @__PURE__ */ ((o) => (o[o.ROOT = 0] = \"ROOT\", o[o.POWER = 1] = \"POWER\", o))(lt || {}), D, Pe, Ft, jt;\nconst Xe = class Xe {\n  constructor(...e) {\n    m(this, D);\n    // Determine the letters in the linear system, usually ['x', 'y']\n    m(this, Pe);\n    a(this, \"parse\", (...e) => (h(this, D, e.map((t) => new H(t))), s(this, Ft).call(this), this));\n    a(this, \"clone\", () => new Xe().parse(...s(this, D).map((e) => e.clone())));\n    a(this, \"buildTex\", (e, t) => {\n      let i, n, r = [];\n      const l = [];\n      for (const u of e)\n        r = r.concat(u.letters());\n      r = [...new Set(r)], r.sort();\n      for (let u = 0; u < e.length; u++) {\n        const d = e[u];\n        i = [];\n        for (const p of r)\n          n = d.left.monomByLetter(p), i.length === 0 ? i.push(n.isZero() ? \"\" : n.tex) : i.push(n.isZero() ? \"\" : (n.coefficient.sign() === 1 ? \"+\" : \"\") + n.tex);\n        if (i.push(\"=\"), i.push(d.right.tex), (t == null ? void 0 : t[u]) !== void 0) {\n          i[i.length - 1] = i[i.length - 1] + \" \\\\phantom{\\\\quad}\";\n          for (const p of t[u])\n            i.push(`\\\\ \\\\cdot\\\\ ${p.startsWith(\"-\") ? \"\\\\left(\" + p + \"\\\\right)\" : p}`);\n        }\n        l.push(i.join(\"&\"));\n      }\n      let c = 0;\n      return t !== void 0 && t.length > 0 && (c = t[0].length), `\\\\left\\\\{\\\\begin{array}{${\"r\".repeat(r.length)}cl ${\"|l\".repeat(c)}}${l.join(\"\\\\\\\\ \")}\\\\end{array}\\\\right.`;\n    });\n    a(this, \"mergeEquations\", (e, t, i, n) => {\n      const r = e.clone().multiply(new f(i)), l = t.clone().multiply(new f(n));\n      return r.left.add(l.left), r.right.add(l.right), r;\n    });\n    // ------------------------------------------\n    a(this, \"reorder\", () => {\n      for (const e of s(this, D))\n        e.reorder();\n      return this;\n    });\n    a(this, \"solveMatrix\", () => {\n      const [e, t] = this.matrix, i = e.map((n, r) => [...n, t[r]]);\n      for (let n = 0; n < e.length; n++) {\n        let r = i[n][n].clone();\n        if (r.isZero()) {\n          const l = i.find((c, u) => u > n && !c[n].isZero());\n          if (l)\n            i[n].forEach((c, u) => c.add(l[u])), r = i[n][n].clone();\n          else\n            throw new Error(\"Unsolvable...\");\n        }\n        i[n] = i[n].map((l) => l.divide(r));\n        for (let l = 0; l < e.length; l++) {\n          if (l === n)\n            continue;\n          const c = i[l][n].clone().opposite();\n          for (let u = 0; u < i[l].length; u++)\n            i[l][u].add(i[n][u].clone().multiply(c));\n          if (i[l].slice(0, i[l].length - 1).every((u) => u.isZero()))\n            return i[l][i[l].length - 1].isZero() ? [new f().infinite()] : [];\n        }\n      }\n      return i.map((n) => n[n.length - 1]);\n    });\n    m(this, Ft, () => (h(this, Pe, s(this, D).reduce((e, t) => [.../* @__PURE__ */ new Set([...e, ...t.variables])], [])), s(this, Pe).sort(), this));\n    m(this, jt, () => {\n      const e = [], t = [];\n      for (const i of s(this, D)) {\n        const n = [], r = i.clone().reorder();\n        for (const l of this.variables) {\n          const c = r.left.monomByLetter(l);\n          n.push(c.coefficient);\n        }\n        t.push(r.right.monoms[0].coefficient), e.push(n);\n      }\n      return [e, t];\n    });\n    return h(this, D, []), h(this, Pe, []), e.length > 0 && this.parse(...e), this;\n  }\n  static fromMatrix(e, t = \"xyz\") {\n    const i = e[0].length;\n    if (e.some((r) => r.length !== i))\n      throw new Error(\"All rows must have the same number of columns\");\n    const n = t.split(\"\").splice(0, i - 1);\n    return new Xe(\n      ...e.map((r) => {\n        const l = new O(n.join(\"\"), ...r);\n        return new H(l, 0);\n      })\n    );\n  }\n  add(e, t) {\n    if (e instanceof Xe) {\n      const i = e.equations.length;\n      if (i !== s(this, D).length)\n        throw new Error(\"The number of equations must be the same\");\n      for (let n = 0; n < i; n++)\n        s(this, D)[n].add(e.equations[n]);\n    } else {\n      if (t === void 0 || t < 0 || t >= s(this, D).length)\n        throw new Error(\"Index out of range\");\n      const i = new H(e);\n      s(this, D)[t].add(i);\n    }\n    return this;\n  }\n  degree(e) {\n    return f.max(...s(this, D).map((t) => t.degree(e)));\n  }\n  get display() {\n    return this.tex + \"as display\";\n  }\n  // ------------------------------------------\n  get equations() {\n    return s(this, D);\n  }\n  set equations(e) {\n    h(this, D, e);\n  }\n  evaluate(e, t) {\n    throw new Error(\"Method not implemented.\");\n  }\n  hasVariable(e) {\n    return s(this, Pe).includes(e);\n  }\n  isEqual(e) {\n    return this.equations.every((t, i) => t.isEqual(e.equations[i]));\n  }\n  get isSolvable() {\n    return this.variables.length === s(this, D).length;\n  }\n  get matrix() {\n    return s(this, jt).call(this);\n  }\n  multiply(e, t) {\n    if (Array.isArray(e)) {\n      if (e.length !== s(this, D).length)\n        throw new Error(\"The number of values must be the same as the number of equations\");\n      for (let i = 0; i < e.length; i++)\n        s(this, D)[i].multiply(e[i]);\n      return this;\n    }\n    if (t === void 0 || t < 0 || t >= s(this, D).length)\n      throw new Error(\"Index out of range\");\n    return s(this, D)[t].multiply(e), this;\n  }\n  reduce() {\n    throw new Error(\"Method not implemented.\");\n  }\n  solve() {\n    return [];\n  }\n  subtract(e, t) {\n    if (e instanceof Xe) {\n      const i = e.equations.length;\n      if (i !== s(this, D).length)\n        throw new Error(\"The number of equations must be the same\");\n      for (let n = 0; n < i; n++)\n        s(this, D)[n].subtract(e.equations[n]);\n    } else {\n      if (t === void 0 || t < 0 || t >= s(this, D).length)\n        throw new Error(\"Index out of range\");\n      const i = new H(e);\n      s(this, D)[t].subtract(i);\n    }\n    return this;\n  }\n  get tex() {\n    const e = this.clone().reorder();\n    return this.buildTex(e.equations);\n  }\n  get variables() {\n    return s(this, Pe);\n  }\n  set variables(e) {\n    const t = typeof e == \"string\" ? e.split(\"\") : [...e];\n    t.sort(), h(this, Pe, t);\n  }\n};\nD = new WeakMap(), Pe = new WeakMap(), Ft = new WeakMap(), jt = new WeakMap();\nlet ti = Xe;\nvar Oe, mt, ii;\nclass ss {\n  /**\n   *\n   * @param {string} value (optional) Default polynom to parse on class creation\n   */\n  constructor(e) {\n    m(this, mt);\n    m(this, Oe);\n    a(this, \"parse\", (e) => (h(this, Oe, new Kt(Ze.SET).parse(e).rpn), this));\n    return h(this, Oe, []), e !== void 0 && this.parse(e), this;\n  }\n  evaluate(e) {\n    this.variables.forEach((i) => {\n      Object.hasOwn(e, i) || (e[i] = !1);\n    });\n    const t = [];\n    for (const i of s(this, Oe))\n      if (console.log(i), i.tokenType === \"variable\")\n        t.push(e[i.token]);\n      else if (i.tokenType === \"operation\")\n        if (i.token === \"!\")\n          if (t.length >= 1) {\n            const n = t.pop();\n            t.push(!n);\n          } else\n            return !1;\n        else {\n          const n = t.pop(), r = t.pop();\n          if (n !== void 0 && r !== void 0)\n            switch (i.token) {\n              case \"&\":\n                t.push(n && r);\n                break;\n              case \"|\":\n                t.push(n || r);\n                break;\n              case \"-\":\n                return !1;\n            }\n          else\n            return !1;\n        }\n    return t.length === 1 && t[0];\n  }\n  get rpn() {\n    return s(this, Oe);\n  }\n  get tex() {\n    const e = [];\n    for (const t of s(this, Oe))\n      if (t.tokenType === \"variable\")\n        e.push(t);\n      else\n        switch (t.token) {\n          case \"&\":\n            if (e.length >= 2) {\n              const i = e.pop(), n = e.pop();\n              i && n && (n.tokenType === \"mix\" && (n.token = `( ${n.token} )`), i.tokenType === \"mix\" && (i.token = `( ${i.token} )`), e.push({ token: `${n.token} \\\\cap ${i.token}`, tokenType: \"mix\" }));\n            }\n            break;\n          case \"|\":\n            if (e.length >= 2) {\n              const i = e.pop(), n = e.pop();\n              i && n && (n.tokenType === \"mix\" && (n.token = `( ${n.token} )`), i.tokenType === \"mix\" && (i.token = `( ${i.token} )`), e.push({ token: `${n.token} \\\\cup ${i.token}`, tokenType: \"mix\" }));\n            }\n            break;\n          case \"-\":\n            if (e.length >= 2) {\n              const i = e.pop(), n = e.pop();\n              i && n && (n.tokenType === \"mix\" && (n.token = `( ${n.token} )`), i.tokenType === \"mix\" && (i.token = `( ${i.token} )`), e.push({ token: `${n.token} \\\\setminus ${i.token}`, tokenType: \"mix\" }));\n            }\n            break;\n          case \"!\":\n            if (e.length >= 1) {\n              const i = e.pop();\n              i && e.push({ token: `\\\\overline{ ${i.token} }`, tokenType: \"variable\" });\n            }\n            break;\n        }\n    return e[0].token;\n  }\n  get variables() {\n    return s(this, Oe).filter((e) => e.tokenType === \"variable\").map((e) => e.token);\n  }\n  vennAB() {\n    return A(this, mt, ii).call(this, {\n      A: [\"A\", \"AB\"],\n      B: [\"B\", \"AB\"]\n    }, [\"A\", \"B\", \"AB\", \"E\"]);\n  }\n  vennABC() {\n    return A(this, mt, ii).call(this, {\n      A: [\"A\", \"AB\", \"AC\", \"ABC\"],\n      B: [\"B\", \"AB\", \"BC\", \"ABC\"],\n      C: [\"C\", \"AC\", \"BC\", \"ABC\"]\n    }, [\"A\", \"B\", \"C\", \"AB\", \"AC\", \"BC\", \"ABC\", \"E\"]);\n  }\n}\nOe = new WeakMap(), mt = new WeakSet(), ii = function(e, t) {\n  const i = [];\n  let n;\n  if (t === void 0) {\n    n = /* @__PURE__ */ new Set();\n    for (const r in e)\n      n = /* @__PURE__ */ new Set([\n        ...n,\n        ...e[r] ?? []\n      ]);\n  } else\n    n = new Set(t);\n  for (const r of s(this, Oe))\n    if (r.tokenType === \"variable\")\n      e[r.token] === void 0 ? i.push(/* @__PURE__ */ new Set()) : i.push(new Set(e[r.token]));\n    else\n      switch (r.token) {\n        case \"&\":\n          if (i.length >= 2) {\n            const l = i.pop(), c = i.pop();\n            c && l && i.push(new Set([...c].filter((u) => l.has(u))));\n          }\n          break;\n        case \"|\":\n          if (i.length >= 2) {\n            const l = i.pop(), c = i.pop();\n            c && l && i.push(/* @__PURE__ */ new Set([...c, ...l]));\n          }\n          break;\n        case \"-\":\n          if (i.length >= 2) {\n            const l = i.pop(), c = i.pop();\n            c && l && i.push(new Set([...c].filter((u) => !l.has(u))));\n          }\n          break;\n        case \"!\":\n          if (i.length >= 1) {\n            const l = i.pop();\n            l && i.push(new Set([...n].filter((c) => !l.has(c))));\n          }\n          break;\n      }\n  return [...i[0]].sort();\n};\nvar it, N, We, ni, Mi, gt, ri;\nconst X = class X {\n  constructor(...e) {\n    m(this, gt);\n    m(this, it, lt.POWER);\n    m(this, N, []);\n    return this.parse(...e), this;\n  }\n  parse(...e) {\n    return h(this, N, []), e.length === 0 ? this : (e.forEach((t) => {\n      t instanceof X ? s(this, N).push(...t.factors.map((i) => i.clone())) : s(this, N).push(new se(t));\n    }), this);\n  }\n  clone() {\n    return new X(...s(this, N).map((e) => e.clone()));\n  }\n  get tex() {\n    const { num: e, den: t } = A(this, gt, ri).call(this);\n    if (t.length === 0)\n      return e.length === 1 ? e[0].asSingle.tex : e.map((r) => r.tex).join(\"\");\n    const i = e.length === 1 ? e[0].asSingle.tex : e.map((r) => r.tex).join(\"\"), n = t.length === 1 ? t[0].asSingle.tex : t.map((r) => r.tex).join(\"\");\n    return `\\\\frac{ ${i} }{ ${n} }`;\n  }\n  get display() {\n    const { num: e, den: t } = A(this, gt, ri).call(this);\n    if (t.length === 0)\n      return e.length === 1 ? e[0].asSingle.display : e.map(\n        (r, l) => l === 0 && r.polynom.monoms.length === 1 ? r.asSingle.display : r.display\n      ).join(\"\");\n    const i = e.length === 1 ? e[0].asSingle.display : e.map((r) => r.display).join(\"\"), n = t.length === 1 ? t[0].asSingle.display : t.map((r) => r.display).join(\"\");\n    return `(${i})/(${n})`;\n  }\n  static gcd(...e) {\n    var i;\n    if (e.length === 0)\n      return new X().one();\n    if (e.length === 1)\n      return e[0];\n    if (e.length === 2)\n      return A(i = X, We, ni).call(i, e[0], e[1]);\n    let t = e[0];\n    return e.shift(), e.forEach((n) => {\n      var r;\n      return t = A(r = X, We, ni).call(r, t, n);\n    }), t;\n  }\n  static lcm(...e) {\n    if (e.length === 0)\n      return new X().one();\n    if (e.length === 1)\n      return e[0];\n    let t = e[0];\n    return e.shift(), e.forEach((i) => {\n      var n;\n      return t = A(n = X, We, Mi).call(n, t, i);\n    }), t;\n  }\n  add(...e) {\n    const t = [this.numerator, ...e.map((c) => c.numerator)], i = [this.denominator, ...e.map((c) => c.denominator)];\n    let n;\n    if (i.some((c) => c.factors.length > 0)) {\n      const c = X.lcm(...i);\n      t.forEach((u, d) => {\n        u.multiply(c.clone().divide(i[d]));\n      }), n = c;\n    }\n    const r = X.gcd(...t), l = new O(0).add(\n      ...t.map((c) => c.divide(r).reduce().develop().factors[0].polynom)\n    ).reduce();\n    return h(this, N, [\n      ...r.factors,\n      new se(l)\n    ]), n && this.divide(n), h(this, N, s(this, N).filter((c) => !c.power.isZero())), this;\n  }\n  get asPower() {\n    return h(this, it, lt.POWER), this;\n  }\n  get asRoot() {\n    return h(this, it, lt.ROOT), this;\n  }\n  degree(e) {\n    return s(this, N).reduce((t, i) => t.add(i.degree(e)), new f(\"0\"));\n  }\n  get denominator() {\n    return new X(\n      ...s(this, N).filter((e) => e.power.isNegative()).map((e) => e.clone().inverse())\n    );\n  }\n  derivative() {\n    const e = [], t = s(this, N).length;\n    for (let n = 0; n < t; n++) {\n      const r = s(this, N).slice(), l = r.splice(n, 1)[0].derivative();\n      e.push(\n        new X(...r, ...l)\n      );\n    }\n    e.forEach((n) => n.reduce());\n    const i = e.shift();\n    return i !== void 0 && h(this, N, i.factors), this.add(...e);\n  }\n  develop() {\n    const e = new O(\"1\"), t = new O(\"1\");\n    return this.numerator.factors.forEach((i) => {\n      e.multiply(i.develop());\n    }), this.denominator.factors.forEach((i) => {\n      t.multiply(i.develop());\n    }), new X().fromPolynom(e, t);\n  }\n  divide(e) {\n    return h(this, N, s(this, N).concat(e.clone().factors.map((t) => t.inverse()))), this;\n  }\n  evaluate(e, t) {\n    return t ? s(this, N).reduce((i, n) => i * n.evaluate(e, t), 1) : s(this, N).reduce((i, n) => i.multiply(n.evaluate(e)), new f(\"1\"));\n  }\n  factorize(e) {\n    const t = [];\n    s(this, N).forEach((l) => {\n      const c = l.polynom.factorize(e);\n      if (c.length > 1) {\n        const u = l.power.clone();\n        t.push(...c.map((d) => new se(d, u)));\n      } else\n        t.push(l.clone());\n    });\n    const i = new X(...t), n = i.numerator.reduce(), r = i.denominator.reduce();\n    return n.divide(r);\n  }\n  get factors() {\n    return s(this, N);\n  }\n  set factors(e) {\n    h(this, N, e);\n  }\n  fromPolynom(e, t) {\n    if (h(this, N, [new se(new O(e))]), t) {\n      const i = new O(t);\n      if (i.isOne())\n        return this;\n      if (i.isZero())\n        throw new Error(\"Cannot divide by zero\");\n      s(this, N).push(new se(i, -1));\n    }\n    return this;\n  }\n  getZeroes() {\n    const e = [].concat(...s(this, N).map((t) => t.polynom.getZeroes()));\n    return e.sort((t, i) => t.value - i.value), e.filter(\n      (t, i, n) => i === n.findIndex(\n        (r) => r.value === t.value\n      )\n    );\n  }\n  hasVariable(e) {\n    return s(this, N).some((t) => t.hasVariable(e));\n  }\n  inverse() {\n    return h(this, N, s(this, N).map((e) => e.inverse())), this;\n  }\n  isEqual(e) {\n    const t = X.gcd(this, e), i = this.clone().divide(t).reduce(), n = e.clone().divide(t).reduce();\n    return i.isOne() && n.isOne();\n  }\n  isOne() {\n    return s(this, N).every((e) => e.isOne());\n  }\n  isZero() {\n    return s(this, N).every((e) => e.isZero());\n  }\n  multiply(...e) {\n    return e.forEach((t) => {\n      h(this, N, s(this, N).concat(t.clone().factors));\n    }), this;\n  }\n  get numerator() {\n    return new X(...s(this, N).filter((e) => e.power.isPositive()));\n  }\n  one() {\n    return h(this, N, [new se(\"1\", \"1\")]), this;\n  }\n  opposite() {\n    const e = s(this, N).findIndex((t) => t.display === \"(-1)\");\n    return e >= 0 ? s(this, N).splice(e, 1) : s(this, N).push(new se(\"-1\", \"1\")), this;\n  }\n  pow(e) {\n    return h(this, N, s(this, N).map((t) => t.pow(e))), this;\n  }\n  primitive() {\n    throw new Error(\"Method not implemented.\");\n  }\n  reduce() {\n    const e = ht(this);\n    return h(this, N, Object.values(e).map((t) => {\n      const i = t[0].polynom, n = t.reduce((r, l) => r.add(l.power), new f(\"0\"));\n      return new se(i, n.reduce());\n    }).filter((t) => !t.power.isZero())), this;\n  }\n  root(e) {\n    return h(this, N, s(this, N).map((t) => t.root(e))), this;\n  }\n  /**\n   * Reoarder the factors using :\n   * 1. number of monoms\n   * 2. degree of polynom\n   * 3. power of polyfactor\n   */\n  sort(e) {\n    return s(this, N).sort((t, i) => {\n      const n = t.power.value, r = i.power.value;\n      if (n * r < 0)\n        return -n;\n      const l = t.polynom.monoms.length, c = i.polynom.monoms.length;\n      if (l !== c)\n        return l - c;\n      const u = t.polynom.degree(e).value, d = i.polynom.degree(e).value;\n      return u !== d ? u - d : n !== r ? n - r : t.degree().isLeq(i.degree()) ? -1 : 1;\n    }), this;\n  }\n  sqrt() {\n    return h(this, N, s(this, N).map((e) => e.sqrt())), this;\n  }\n  subtract(...e) {\n    return this.add(...e.map((t) => t.opposite()));\n  }\n  tableOfSigns() {\n    const e = this.getZeroes(), t = e.map((r) => r.value), i = this.factors.map((r) => ({ factor: new se(r), ...r.tableOfSigns() }));\n    return i.forEach((r) => {\n      const l = new Array(2 * e.length + 1).fill(\"\");\n      let c = r.signs.shift(), u = r.roots.shift();\n      const d = l.map((p, w) => {\n        if (w % 2 === 0)\n          return c;\n        if (u === void 0 || u.value !== t[(w - 1) / 2])\n          return \"t\";\n        const V = r.signs.shift();\n        return c = r.signs.shift(), u = r.roots.shift(), V;\n      });\n      r.roots = e, r.signs = d;\n    }), { signs: i.map((r) => r.signs).reduce((r, l) => r.length === 0 ? l : (l.forEach((c, u) => {\n      switch (c) {\n        case \"d\":\n          r[u] = \"d\";\n          break;\n        case \"z\":\n          r[u] = r[u] === \"d\" ? \"d\" : \"z\";\n          break;\n        case \"h\":\n          r[u] = \"h\";\n          break;\n        case \"-\":\n          r[u] = r[u] === \"h\" ? \"h\" : r[u] === \"-\" ? \"+\" : \"-\";\n          break;\n      }\n    }), r), []), roots: e, factors: i };\n  }\n  get variables() {\n    return s(this, N).reduce((e, t) => e.concat(t.variables), []);\n  }\n  zero() {\n    return h(this, N, [new se(\"0\", \"1\")]), this;\n  }\n};\nit = new WeakMap(), N = new WeakMap(), We = new WeakSet(), ni = function(e, t) {\n  const i = ht(e), n = ht(t), l = Object.keys(i).filter((c) => Object.hasOwn(n, c)).map((c) => {\n    const u = i[c].reduce((p, w) => p.add(w.power), new f(\"0\")), d = n[c].reduce((p, w) => p.add(w.power), new f(\"0\"));\n    return new se(c, f.min(u, d));\n  });\n  return new X(...l);\n}, Mi = function(e, t) {\n  const i = ht(e), n = ht(t), l = [.../* @__PURE__ */ new Set([...Object.keys(i), ...Object.keys(n)])].map((c) => {\n    const u = Object.hasOwn(i, c) ? i[c].reduce((p, w) => p.add(w.power), new f(\"0\")) : new f(0), d = Object.hasOwn(n, c) ? n[c].reduce((p, w) => p.add(w.power), new f(\"0\")) : new f(0);\n    return new se(c, f.max(u, d));\n  });\n  return new X(...l);\n}, gt = new WeakSet(), ri = function() {\n  let e, t = [];\n  return s(this, it) === lt.ROOT ? (e = this.numerator.factors, t = this.denominator.factors) : e = s(this, N), e.length === 0 && (e = [new se(\"1\")]), { num: e, den: t };\n}, m(X, We);\nlet si = X;\nfunction ht(o) {\n  const e = new f().one(), t = new f().one(), i = o.factors.reduce((l, c) => {\n    if (c.polynom.degree().isZero())\n      return c.power.isPositive() ? e.multiply(c.polynom.monoms[0].coefficient) : t.multiply(c.polynom.monoms[0].coefficient), l;\n    const u = c.polynom.display;\n    return Object.hasOwn(l, u) ? l[u].push(c) : l[u] = [c], l;\n  }, {}), { numerator: n, denominator: r } = e.divide(t).reduce();\n  return n !== 1 && (i[n.toString()] = [new se(n, 1)]), r !== 1 && (i[r.toString()] = [new se(r, -1)]), i;\n}\nfunction ns(o, e) {\n  return o.dimension === e.dimension && o.array.every(\n    (t, i) => e.array[i].isEqual(t)\n  );\n}\nfunction rs(o, e) {\n  if (o.dimension !== e.dimension)\n    return !1;\n  const t = e.array[0].value / o.array[0].value;\n  return o.array.every(\n    (i, n) => e.array[n].value === i.value * t\n  );\n}\nfunction os(o, e) {\n  return o.dimension !== e.dimension ? new f().invalid() : o.array.reduce(\n    (t, i, n) => t.add(i.clone().multiply(e.array[n])),\n    new f(0)\n  );\n}\nfunction hs(...o) {\n  if (o.some((e) => e.dimension !== o[0].dimension))\n    throw new Error(\"All vectors must have the same dimension\");\n  if (o[0].dimension !== o.length)\n    throw new Error(`The determinant of dimension ${o[0].dimension} must have the same number of vectors (${o.length} given)`);\n  return o[0].dimension === 2 ? o[0].array[0].clone().multiply(o[1].array[1]).subtract(o[0].array[1].clone().multiply(o[1].array[0])) : o[0].array[0].clone().multiply(\n    o[1].array[1].clone().multiply(o[2].array[2]).subtract(o[1].array[2].clone().multiply(o[2].array[1]))\n  ).subtract(\n    o[0].array[1].clone().multiply(\n      o[1].array[0].clone().multiply(o[2].array[2]).subtract(o[1].array[2].clone().multiply(o[2].array[0]))\n    )\n  ).add(o[0].array[2].clone().multiply(o[1].array[0].clone().multiply(o[2].array[1]).subtract(o[1].array[1].clone().multiply(o[2].array[0]))));\n}\nvar F, Le;\nconst Be = class Be {\n  constructor(...e) {\n    m(this, F, []);\n    m(this, Le, !1);\n    a(this, \"zero\", () => (s(this, F).forEach((e) => e.zero()), this));\n    a(this, \"one\", () => (this.zero(), this.x.one(), this));\n    a(this, \"opposite\", () => (s(this, F).forEach((e) => e.opposite()), this));\n    a(this, \"add\", (e) => (s(this, F).forEach((t, i) => t.add(e.array[i])), this));\n    a(this, \"subtract\", (e) => this.add(e.clone().opposite()));\n    a(this, \"unit\", () => {\n      const e = this.norm;\n      return e === 0 ? this : this.divideByScalar(e);\n    });\n    a(this, \"dot\", (e) => os(this, e));\n    a(this, \"normal\", () => {\n      if (this.dimension >= 3)\n        throw new Error(\"Normal vector can only be determined in 2D\");\n      const e = this.x.clone().opposite(), t = this.y.clone();\n      return s(this, F)[0] = t, s(this, F)[1] = e, this;\n    });\n    a(this, \"isEqual\", (e) => ns(this, e));\n    a(this, \"isColinearTo\", (e) => rs(this, e));\n    a(this, \"isNormalTo\", (e) => this.dot(e).isZero());\n    a(this, \"multiplyByScalar\", (e) => {\n      const t = new f(e);\n      return this.array.forEach((i) => i.multiply(t)), this;\n    });\n    a(this, \"divideByScalar\", (e) => this.multiplyByScalar(new f(e).inverse()));\n    a(this, \"simplify\", () => this.multiplyByScalar(\n      U.lcm(...this.array.map((e) => e.denominator))\n    ).divideByScalar(\n      U.gcd(...this.array.map((e) => e.numerator))\n    ).multiplyByScalar(\n      this.x.isNegative() ? -1 : 1\n    ));\n    a(this, \"angle\", (e, t, i) => {\n      let n = this.dot(e).value;\n      return t && (n = Math.abs(n)), (i ? 1 : 180 / Math.PI) * Math.acos(n / (this.norm * e.norm));\n    });\n    a(this, \"fromString\", (e) => {\n      e.startsWith(\"(\") && (e = e.substring(1)), e.endsWith(\")\") && (e = e.substring(0, e.length - 1));\n      const t = e.split(/[,;\\s]/g).filter((i) => i.trim() !== \"\");\n      return t.length < 2 ? this : (h(this, F, t.map((i) => new f(i))), this);\n    });\n    e.length > 0 && this.parse(...e);\n  }\n  // ------------------------------------------\n  // Getter and setter\n  // ------------------------------------------\n  get array() {\n    return s(this, F);\n  }\n  set array(e) {\n    h(this, F, e);\n  }\n  get x() {\n    return s(this, F)[0];\n  }\n  set x(e) {\n    s(this, F)[0] = new f(e);\n  }\n  get y() {\n    return s(this, F)[1];\n  }\n  set y(e) {\n    s(this, F)[1] = new f(e);\n  }\n  get z() {\n    if (this.dimension < 3)\n      throw new Error(\"Vector is not 3D\");\n    return s(this, F)[2];\n  }\n  set z(e) {\n    if (this.dimension < 3)\n      throw new Error(\"Vector is not 3D\");\n    s(this, F)[2] = new f(e);\n  }\n  get asPoint() {\n    return s(this, Le);\n  }\n  set asPoint(e) {\n    h(this, Le, e);\n  }\n  get normSquare() {\n    return this.array.reduce((e, t) => e.add(t.clone().pow(2)), new f(0));\n  }\n  get norm() {\n    return Math.sqrt(this.normSquare.value);\n  }\n  get tex() {\n    return s(this, Le) ? `\\\\left(${this.array.map((e) => e.tex).join(\";\")}\\\\right)` : `\\\\begin{pmatrix} ${this.array.map((e) => e.tex).join(\" \\\\\\\\ \")} \\\\end{pmatrix}`;\n  }\n  get display() {\n    return s(this, Le) ? `(${this.array.map((e) => e.display).join(\";\")})` : `((${this.array.map((e) => e.display).join(\",\")}))`;\n  }\n  setDimension(e = 2) {\n    if (e < 2)\n      throw new Error(\"Dimension must be at least 2\");\n    if (e < this.dimension)\n      h(this, F, s(this, F).slice(0, e));\n    else if (e > this.dimension)\n      for (let t = this.dimension; t < e; t++)\n        s(this, F).push(new f(0));\n    return this;\n  }\n  get dimension() {\n    return this.array.length;\n  }\n  // ------------------------------------------\n  // Creation / parsing functions\n  // ------------------------------------------\n  get isNull() {\n    return this.array.every((e) => e.isZero());\n  }\n  static asTex(...e) {\n    return `\\\\begin{pmatrix} ${e.join(\" \\\\\\\\ \")} \\\\end{pmatrix}`;\n  }\n  static asDisplay(...e) {\n    return `((${e.join(\",\")}))`;\n  }\n  defineAsPoint(e) {\n    return h(this, Le, e !== !1), this;\n  }\n  parse(...e) {\n    if (e.length === 0)\n      throw new Error(\"Invalid value\");\n    if (e.length === 1) {\n      if (e[0] instanceof Be)\n        return e[0].clone();\n      if (typeof e[0] == \"string\")\n        return this.fromString(e[0]);\n      throw new Error(\"Invalid value\");\n    }\n    if (e.length === 2) {\n      const [t, i] = e;\n      if (t instanceof Be && i instanceof Be) {\n        if (t.dimension !== i.dimension)\n          throw new Error(\"Vectors must have the same dimension\");\n        return h(this, F, i.array.map((n, r) => n.clone().subtract(t.array[r]))), this;\n      }\n    }\n    return h(this, F, e.map((t) => new f(t))), this;\n  }\n  clone() {\n    const e = new Be();\n    return e.array = this.copy(), e.asPoint = this.asPoint, e;\n  }\n  copy() {\n    return s(this, F).map((e) => e.clone());\n  }\n  middleOf(e, t) {\n    if (e.dimension !== t.dimension)\n      throw new Error(\"Vectors must be the same dimension\");\n    return this.array = [], e.array.forEach((i, n) => {\n      this.array.push(i.clone().add(t.array[n]).divide(2));\n    }), this;\n  }\n  translate(...e) {\n    return this.array.forEach((t, i) => t.add(e[i])), this;\n  }\n  cross(e) {\n    if (this.dimension !== 3 || e.dimension !== 3)\n      throw new Error(\"Cross product can only be determined in 3D\");\n    return new Be(\n      this.y.clone().multiply(e.z).subtract(this.z.clone().multiply(e.y)),\n      this.z.clone().multiply(e.x).subtract(this.x.clone().multiply(e.z)),\n      this.x.clone().multiply(e.y).subtract(this.y.clone().multiply(e.x))\n    );\n  }\n  isZero() {\n    return this.array.every((e) => e.isZero());\n  }\n  isOne() {\n    return this.array.every((e, t) => t === 0 ? e.isOne() : e.isZero());\n  }\n  distanceTo(e) {\n    const t = new Be(this, e);\n    return {\n      value: t.norm,\n      fraction: t.normSquare,\n      tex: t.tex\n    };\n  }\n};\nF = new WeakMap(), Le = new WeakMap();\nlet E = Be;\nvar we = /* @__PURE__ */ ((o) => (o.None = \"none\", o.Parallel = \"parallel\", o.Perpendicular = \"perpendicular\", o.Tangent = \"tangent\", o))(we || {}), oi = /* @__PURE__ */ ((o) => (o.None = \"none\", o.Parallel = \"parallel\", o.Perpendicular = \"perpendicular\", o.Tangent = \"tangent\", o))(oi || {});\nfunction Ci(o = 0.5) {\n  return Math.random() < o;\n}\nfunction pe(o, e, t) {\n  if (e === void 0)\n    return o >= 0 ? pe(0, o) : pe(o, 0);\n  if (o === e)\n    return o;\n  if (t === void 0)\n    return Math.floor(Math.random() * (e - o + 1) + o);\n  if (Math.abs(e - o) <= t.length)\n    throw new Error(\"The number of excluded values is too high.\");\n  let i = pe(o, e);\n  for (; t.includes(i); )\n    i = pe(o, e);\n  return i;\n}\nfunction Q(o, e) {\n  return e === !1 ? Ci() ? pe(1, o) : -pe(1, o) : pe(-o, o);\n}\nfunction as(o) {\n  let e = U.primes();\n  return o !== void 0 && (e = e.filter((t) => t < o)), di(e);\n}\nfunction ls(o, e) {\n  return e === void 0 && (e = 1), o.length <= 0 ? Object.values(o) : Pi(o).slice(0, e);\n}\nfunction di(o) {\n  return o.length === 0 ? null : o[pe(0, o.length - 1)];\n}\nfunction Pi(o) {\n  const e = Object.values(o);\n  for (let t = e.length - 1; t > 0; t--) {\n    const i = Math.floor(Math.random() * (t + 1)), n = e[t];\n    e[t] = e[i], e[i] = n;\n  }\n  return e;\n}\nclass S extends E {\n  constructor(...e) {\n    super(), e.length > 0 && this.parse(...e);\n  }\n  parse(...e) {\n    if (this.asPoint = !0, e.length === 1) {\n      if (e[0] instanceof E)\n        return this.array = e[0].copy(), this;\n      if (typeof e[0] == \"string\")\n        return this.fromString(e[0]), this;\n    }\n    if (e.length > 1) {\n      if (e.some((i) => i instanceof E))\n        throw new Error(\"Creating a point with  multiple argument requires an input fraction\");\n      const t = e.map((i) => new f(i));\n      if (t.some((i) => i.isNaN()))\n        throw new Error(\"The value is not a valid point sting (a,b): \" + e.join(\",\"));\n      this.array = t;\n    }\n    return this;\n  }\n  clone() {\n    const e = new S();\n    return e.array = this.copy(), e.asPoint = !0, e;\n  }\n}\nvar $e, B, z, W, he, J, Ie, xe;\nconst De = class De {\n  /**\n   * Value can be a mix of:\n   *\n   * @param values\n   */\n  constructor(...e) {\n    m(this, $e);\n    // ax + by + c = 0\n    m(this, B);\n    m(this, z);\n    m(this, W);\n    m(this, he);\n    m(this, J);\n    m(this, Ie);\n    m(this, xe, \"canonical\");\n    a(this, \"randomPoint\", (e) => {\n      const t = s(this, J).clone().multiplyByScalar(Q(e === void 0 || e <= 1 ? 3 : e, !1)).add(s(this, he));\n      return t.asPoint = !0, t;\n    });\n    a(this, \"randomNearPoint\", (e) => {\n      const t = this.randomPoint(e);\n      let i = 10;\n      for (; this.isOnLine(t) && i > 0; )\n        t.x.add(Q(1, !1)), t.y.add(Q(1, !1)), i--;\n      return t;\n    });\n    // ------------------------------------------\n    // Creation / parsing functions\n    // ------------------------------------------\n    /**\n     * Parse data to a line\n     * @param {any} values\n     * @returns {Line}\n     */\n    a(this, \"parse\", (...e) => {\n      if (e.length === 0)\n        return this;\n      if (e.length === 1) {\n        if (e[0] instanceof De)\n          return this.fromCoefficient(e[0].a, e[0].b, e[0].c);\n        if (e[0] instanceof H)\n          return this.fromEquation(e[0]);\n        if (typeof e[0] == \"string\")\n          try {\n            const t = new H(e[0]);\n            return this.parse(t);\n          } catch {\n            return this;\n          }\n      }\n      if (e.length === 2 && e.every((t) => t instanceof E)) {\n        const t = e;\n        if (t[0].asPoint && t[1].asPoint)\n          return this.fromPointAndDirection(t[0], new E(t[0], t[1]));\n        if (t[0].asPoint && !t[1].asPoint)\n          return this.fromPointAndDirection(t[0], t[1]);\n      }\n      if (e.length === 3) {\n        if (e[0] instanceof E && e[1] instanceof E) {\n          if (e[2] === we.Perpendicular)\n            return this.fromPointAndNormal(e[0], e[1]);\n          if (e[2] === we.Parallel)\n            return this.fromPointAndDirection(e[0], e[1]);\n        }\n        return e[0] instanceof E && e[1] instanceof De ? e[2] === we.Parallel || e[2] === null ? this.fromPointAndLine(e[0], e[1], we.Parallel) : this.fromPointAndLine(e[0], e[1], we.Perpendicular) : this.fromCoefficient(\n          e[0],\n          e[1],\n          e[2]\n        );\n      }\n      return console.log(\"Something wrong happened while creating the line\"), console.log(e), this;\n    });\n    a(this, \"fromEquation\", (e) => {\n      e.reorder(!0);\n      const t = new Set(e.letters());\n      if (!(t.has(\"x\") || t.has(\"y\")))\n        return this;\n      for (const i of [\"x\", \"y\"])\n        t.has(i) && t.delete(i);\n      return t.size > 0 ? this : this.fromCoefficient(\n        e.left.monomByLetter(\"x\").coefficient,\n        e.left.monomByLetter(\"y\").coefficient,\n        e.left.monomByDegree(0).coefficient\n      );\n    });\n    a(this, \"fromCoefficient\", (e, t, i) => (h(this, B, new f(e)), h(this, z, new f(t)), h(this, W, new f(i)), h(this, J, new E(s(this, z).clone(), s(this, B).clone().opposite())), h(this, he, new E(new f().zero(), s(this, W).clone())), h(this, Ie, s(this, J).clone().normal()), this));\n    a(this, \"fromPointAndDirection\", (e, t) => (this.fromCoefficient(\n      t.y,\n      t.x.clone().opposite(),\n      e.x.clone().multiply(t.y).subtract(e.y.clone().multiply(t.x)).opposite()\n    ), h(this, he, e.clone()), h(this, J, t.clone()), h(this, Ie, s(this, J).clone().normal()), this));\n    a(this, \"fromPointAndNormal\", (e, t) => this.fromCoefficient(\n      t.x,\n      t.y,\n      e.x.clone().multiply(t.x).add(e.y.clone().multiply(t.y)).opposite()\n    ));\n    a(this, \"fromPointAndLine\", (e, t, i) => (i === void 0 && (i = we.Parallel), i === we.Parallel ? this.fromPointAndNormal(e, t.normal) : i === we.Perpendicular ? this.fromPointAndNormal(e, t.director) : this));\n    a(this, \"clone\", () => (h(this, B, s(this, B).clone()), h(this, z, s(this, z).clone()), h(this, W, s(this, W).clone()), h(this, J, s(this, J).clone()), h(this, he, s(this, he).clone()), h(this, Ie, s(this, Ie).clone()), this));\n    // ------------------------------------------\n    // Mathematical operations\n    // ------------------------------------------\n    a(this, \"isOnLine\", (e) => s(this, B).clone().multiply(e.x).add(\n      s(this, z).clone().multiply(e.y)\n    ).add(s(this, W)).isZero());\n    a(this, \"isParallelTo\", (e) => this.slope.isEqual(e.slope) && this.height.isNotEqual(e.height));\n    a(this, \"isSameAs\", (e) => this.slope.isEqual(e.slope) && this.height.isEqual(e.height));\n    a(this, \"isPerpendicularTo\", (e) => this.d.isNormalTo(e.d));\n    a(this, \"isVertical\", () => this.slope.isInfinity());\n    a(this, \"simplify\", () => {\n      const e = U.lcm(s(this, B).denominator, s(this, z).denominator, s(this, W).denominator), t = U.gcd(s(this, B).numerator, s(this, z).numerator, s(this, W).numerator);\n      return this.fromCoefficient(\n        s(this, B).clone().multiply(e).divide(t),\n        s(this, z).clone().multiply(e).divide(t),\n        s(this, W).clone().multiply(e).divide(t)\n      ), this;\n    });\n    a(this, \"simplifyDirection\", () => (s(this, J).simplify(), this));\n    a(this, \"intersection\", (e) => {\n      const t = new S();\n      let i = !1, n = !1;\n      return s(this, z).isZero() || e.b.isZero(), this.isParallelTo(e) ? (t.x = new f().invalid(), t.y = new f().invalid(), i = !0) : this.isSameAs(e) ? (t.x = new f().invalid(), t.y = new f().invalid(), n = !0) : (t.x = s(this, z).clone().multiply(e.c).subtract(s(this, W).clone().multiply(e.b)).divide(s(this, B).clone().multiply(e.b).subtract(s(this, z).clone().multiply(e.a))), t.y = s(this, B).clone().multiply(e.c).subtract(s(this, W).clone().multiply(e.a)).divide(s(this, z).clone().multiply(e.a).subtract(s(this, B).clone().multiply(e.b)))), {\n        point: t,\n        hasIntersection: !(i || n),\n        isParallel: i,\n        isSame: n\n      };\n    });\n    a(this, \"getValueAtX\", (e) => {\n      const t = this.getEquation().isolate(\"y\"), i = new f(e);\n      return t instanceof H ? t.right.evaluate({ x: i }) : new f().invalid();\n    });\n    a(this, \"getValueAtY\", (e) => {\n      const t = this.getEquation().isolate(\"x\"), i = new f(e);\n      return t instanceof H ? t.right.evaluate({ y: i }) : new f().invalid();\n    });\n    return h(this, B, new f().zero()), h(this, z, new f().zero()), h(this, W, new f().zero()), h(this, he, new E()), h(this, J, new E()), h(this, Ie, new E()), h(this, $e, !0), e.length > 0 && this.parse(...e), this;\n  }\n  get a() {\n    return s(this, B);\n  }\n  // ------------------------------------------\n  // Getter and setter\n  set a(e) {\n    h(this, B, e);\n  }\n  get b() {\n    return s(this, z);\n  }\n  set b(e) {\n    h(this, z, e);\n  }\n  get c() {\n    return s(this, W);\n  }\n  set c(e) {\n    h(this, W, e);\n  }\n  get OA() {\n    return s(this, he);\n  }\n  set OA(e) {\n    h(this, he, e);\n  }\n  get d() {\n    return s(this, J);\n  }\n  set d(e) {\n    h(this, J, e);\n  }\n  get n() {\n    return s(this, Ie);\n  }\n  // ------------------------------------------\n  getEquation() {\n    const e = new H(new O().parse(\"xy\", s(this, B), s(this, z), s(this, W)), new O(\"0\"));\n    return s(this, $e) ? e.simplify() : e;\n  }\n  // get system(): { x: Equation, y: Equation } {\n  //     const e1 = new Equation(\n  //         new Polynom('x'),\n  //         new Polynom(this.#OA.x)\n  //             .add(new Monom('k').multiply(this.#d.x))\n  //     ),\n  //         e2 = new Equation(\n  //             new Polynom('y'),\n  //             new Polynom(this.#OA.y)\n  //                 .add(new Monom('k').multiply(this.#d.y))\n  //         )\n  //     return { x: e1, y: e2 }\n  // }\n  get canonical() {\n    return h(this, xe, \"canonical\"), this;\n  }\n  get equation() {\n    return h(this, xe, \"equation\"), this;\n  }\n  get mxh() {\n    return h(this, xe, \"mxh\"), this;\n  }\n  get parametric() {\n    return h(this, xe, \"parametric\"), this;\n  }\n  get system() {\n    return h(this, xe, \"system\"), this;\n  }\n  get tex() {\n    const e = s(this, xe);\n    switch (h(this, xe, \"canonical\"), e) {\n      case \"equation\":\n        return this.getEquation().reorder().tex;\n      case \"mxh\":\n        return this.slope.isInfinity() ? \"x=\" + this.OA.x.tex : \"y=\" + new O().parse(\"x\", this.slope, this.height).tex;\n      case \"parametric\":\n      case \"system\": {\n        const t = s(this, J).clone();\n        return s(this, $e) && t.simplify(), e === \"parametric\" ? `${E.asTex(\"x\", \"y\")} = ${E.asTex(s(this, he).x.tex, s(this, he).y.tex)} + k\\\\cdot ${E.asTex(t.x.tex, t.y.tex)}` : `\\\\left\\\\{\\\\begin{aligned}\n            x &= ${new O(s(this, he).x).add(new M(s(this, J).x).multiply(new M(\"k\"))).reorder(\"k\", !0).tex}\\\\\\\\ \n            y &= ${new O(s(this, he).y).add(new M(s(this, J).y).multiply(new M(\"k\"))).reorder(\"k\", !0).tex}\n            \\\\end{aligned}\\\\right.`;\n      }\n      default: {\n        const t = this.getEquation();\n        return s(this, B).isNegative() && t.multiply(-1), t.tex;\n      }\n    }\n  }\n  get reduceBeforeDisplay() {\n    return s(this, $e);\n  }\n  set reduceBeforeDisplay(e) {\n    h(this, $e, e);\n  }\n  get display() {\n    const e = s(this, xe);\n    switch (h(this, xe, \"canonical\"), e) {\n      case \"equation\":\n        return this.getEquation().reorder().display;\n      case \"mxh\":\n        return this.slope.isInfinity() ? \"x=\" + this.OA.x.display : \"y=\" + new O().parse(\"x\", this.slope, this.height).display;\n      case \"parametric\": {\n        const t = s(this, J).clone();\n        return s(this, $e) && t.simplify(), `((x,y))=((${s(this, he).x.display},${s(this, he).y.display}))+k((${t.x.display},${t.y.display}))`;\n      }\n      default: {\n        const t = this.getEquation();\n        return s(this, B).isNegative() && t.multiply(-1), t.display;\n      }\n    }\n  }\n  get normal() {\n    return new E(s(this, B), s(this, z));\n  }\n  get director() {\n    return s(this, J).clone();\n  }\n  get slope() {\n    return s(this, B).clone().opposite().divide(s(this, z));\n  }\n  get height() {\n    return s(this, W).clone().opposite().divide(s(this, z));\n  }\n  fromPoints(e, t) {\n    return this.fromPointAndDirection(e, new E(e, t));\n  }\n  distanceTo(e) {\n    const t = e.x.clone().multiply(s(this, B)).add(e.y.clone().multiply(s(this, z))).add(s(this, W)).abs(), i = this.normal.normSquare;\n    if (i.isZero())\n      return {\n        value: NaN,\n        tex: \"Not a line\",\n        fraction: new f().infinite()\n      };\n    const n = t.value / Math.sqrt(i.value), r = t.clone().divide(i.clone().sqrt());\n    return i.isSquare() ? {\n      value: n,\n      tex: r.tex,\n      fraction: r\n    } : {\n      value: n,\n      tex: `\\\\frac{${t.tex}}{\\\\sqrt{${i.tex}}}`,\n      fraction: r\n    };\n  }\n  hitSegment(e, t) {\n    const i = this.intersection(\n      new De().fromPoints(e, t)\n    );\n    return i.hasIntersection ? i.point.x.value >= Math.min(e.x.value, t.x.value) && i.point.x.value <= Math.max(e.x.value, t.x.value) && i.point.y.value >= Math.min(e.y.value, t.y.value) && i.point.y.value <= Math.max(e.y.value, t.y.value) : !1;\n  }\n  // ------------------------------------------\n  // Special functions\n  // ------------------------------------------\n  canonicalAsFloatCoefficient(e) {\n    e === void 0 && (e = 2);\n    let t = \"\";\n    return s(this, B).isZero() || (s(this, B).isOne() ? t = \"x\" : s(this, B).clone().opposite().isOne() ? t = \"-x\" : t = s(this, B).value.toFixed(e) + \"x\"), s(this, z).isZero() || (s(this, z).isPositive() && (t += \"+\"), t += s(this, z).value.toFixed(e) + \"y\"), s(this, W).isZero() || (s(this, W).isPositive() && (t += \"+\"), t += s(this, W).value.toFixed(e)), t + \"=0\";\n  }\n};\n$e = new WeakMap(), B = new WeakMap(), z = new WeakMap(), W = new WeakMap(), he = new WeakMap(), J = new WeakMap(), Ie = new WeakMap(), xe = new WeakMap(), // A line is defined as the canonical form\na(De, \"PERPENDICULAR\", we.Perpendicular), a(De, \"PARALLEL\", we.Parallel);\nlet R = De;\nvar ae, j, qe, Ut, Wt, Gt, le, $i, Nt, Ii, Si, Bi, hi;\nconst Ht = class Ht {\n  constructor(...e) {\n    m(this, le);\n    m(this, ae);\n    m(this, j);\n    m(this, qe);\n    /**\n     * Get the relative position between circle and line. It corresponds to the number of intersection.\n     * @param {Line} L\n     * @returns {number}\n     */\n    a(this, \"relativePosition\", (e) => {\n      if (s(this, ae) === void 0 || s(this, j) === void 0)\n        throw new Error(\"Circle not defined\");\n      const t = e.distanceTo(s(this, ae)), i = Math.sqrt(s(this, j).value);\n      return t.value - i > 1e-10 ? 0 : Math.abs(t.value - i) < 1e-10 ? 1 : 2;\n    });\n    a(this, \"lineIntersection\", (e) => {\n      const t = [];\n      if (s(this, qe) === void 0)\n        return [];\n      const i = s(this, qe).clone(), n = e.getEquation().clone().isolate(\"x\"), r = e.getEquation().clone().isolate(\"y\");\n      return n instanceof H && r instanceof H && (i.replaceBy(\"y\", r.right).simplify(), i.solve()), t;\n    });\n    a(this, \"tangents\", (e) => e instanceof f ? s(this, Gt).call(this, e) : this.isPointOnCircle(e) ? s(this, Ut).call(this, e) : s(this, ae) !== void 0 && s(this, ae).distanceTo(e).value > this.radius.value ? s(this, Wt).call(this, e) : (console.log(\"No tangents as the point is inside !\"), []));\n    a(this, \"isPointOnCircle\", (e) => {\n      var t;\n      return ((t = s(this, qe)) == null ? void 0 : t.test({ x: e.x, y: e.y })) ?? !1;\n    });\n    a(this, \"getPointsOnCircle\", (e) => {\n      const t = U.pythagoreanTripletsWithTarget(this.squareRadius.value, !0), i = [];\n      return t.forEach((n) => {\n        for (const r of [[1, 1], [-1, 1], [-1, -1], [1, -1]])\n          i.push(\n            new S(\n              this.center.x.clone().add(r[0] * n[0]),\n              this.center.y.clone().add(r[1] * n[1])\n            )\n          );\n      }), i;\n    });\n    m(this, Ut, (e) => {\n      const t = new E(this.center, e);\n      return [new R(e, t, we.Perpendicular)];\n    });\n    m(this, Wt, (e) => {\n      const t = this.center.x.clone().subtract(e.x), i = this.center.y.clone().subtract(e.y), n = new O(\"x\"), r = new O(\"x^2+1\");\n      return n.multiply(t).subtract(i).pow(2), r.multiply(this.squareRadius), new H(n, r).solve().map((u) => {\n        let d;\n        const p = new H(\"y\", \"x\");\n        return u.exact instanceof f ? (d = e.x.clone().opposite().multiply(u.exact).add(e.y), p.right.multiply(u.exact).add(d)) : (d = e.x.clone().opposite().multiply(u.value).add(e.y), p.right.multiply(u.value).add(d)), new R(p);\n      });\n    });\n    m(this, Gt, (e) => {\n      const t = e.numerator, i = -e.denominator, n = this.center.x.clone(), r = this.center.y.clone(), l = this.squareRadius.clone().multiply(e.numerator ** 2 + e.denominator ** 2), c = n.clone().multiply(t).opposite().subtract(r.clone().multiply(i)).add(l.clone().sqrt()), u = n.clone().multiply(t).opposite().subtract(r.clone().multiply(i)).subtract(l.clone().sqrt());\n      return [new R(t, i, c), new R(t, i, u)];\n    });\n    e.length > 0 && this.parse(...e);\n  }\n  get center() {\n    return s(this, ae) ?? new S();\n  }\n  get squareRadius() {\n    return s(this, j) ?? new f(0);\n  }\n  get cartesian() {\n    if (s(this, qe) === void 0)\n      throw new Error(\"Cartesian equation not defined\");\n    return s(this, qe);\n  }\n  get radius() {\n    return s(this, j) === void 0 ? { tex: \"\", display: \"\", value: 0 } : s(this, j).isSquare() ? {\n      tex: s(this, j).clone().sqrt().tex,\n      display: s(this, j).clone().sqrt().display,\n      value: s(this, j).clone().sqrt().value\n    } : {\n      tex: `\\\\sqrt{${s(this, j).tex}}`,\n      display: `sqrt(${s(this, j).display})`,\n      value: s(this, j).clone().sqrt().value\n    };\n  }\n  get tex() {\n    let e, t;\n    return this.center.x.isZero() ? e = \"x^2\" : e = `\\\\left(x${this.center.x.isNegative() ? \"+\" : \"-\"}${this.center.x.clone().abs().tex}\\\\right)^2`, this.center.y.isZero() ? t = \"y^2\" : t = `\\\\left(y${this.center.y.isNegative() ? \"+\" : \"-\"}${this.center.y.clone().abs().tex}\\\\right)^2`, `${e}+${t}=${this.squareRadius.tex}`;\n  }\n  get developed() {\n    return this.cartesian.tex;\n  }\n  get display() {\n    let e, t;\n    return this.center.x.isZero() ? e = \"x^2\" : e = `(x${this.center.x.isNegative() ? \"+\" : \"-\"}${this.center.x.clone().abs().tex})^2`, this.center.y.isZero() ? t = \"y^2\" : t = `(y${this.center.y.isNegative() ? \"+\" : \"-\"}${this.center.y.clone().abs().tex})^2`, `${e}+${t}=${this.squareRadius.display}`;\n  }\n  clone() {\n    return new Ht(\n      this.center.clone(),\n      this.squareRadius.clone(),\n      !0\n    );\n  }\n  setRadius(e, t) {\n    return t ? h(this, j, new f(e)) : h(this, j, new f(e).pow(2)), A(this, le, Nt).call(this), this;\n  }\n  parse(...e) {\n    return A(this, le, $i).call(this), typeof e[0] == \"string\" ? A(this, le, hi).call(this, new H(e[0])) : e[0] instanceof H ? A(this, le, hi).call(this, e[0]) : e[0] instanceof Ht ? A(this, le, Ii).call(this, e[0]) : e[0] instanceof S && e.length > 1 && (e[1] instanceof S ? e[2] instanceof S || A(this, le, Bi).call(this, e[0], e[1]) : (e[1] instanceof f || typeof e[1] == \"number\") && A(this, le, Si).call(this, e[0], e[1], typeof e[2] == \"boolean\" ? e[2] : !1)), A(this, le, Nt).call(this), this;\n  }\n  // private _parseThroughtThreePoints(A: Point, B: Point, C: Point): this {\n  //     const T = new Triangle(A, B, C), mAB = T.remarquables.mediators.AB.clone(),\n  //         mAC = T.remarquables.mediators.AC.clone()\n  //     this.parse(mAB.intersection(mAC).point, A)\n  //     return this\n  // }\n};\nae = new WeakMap(), j = new WeakMap(), qe = new WeakMap(), Ut = new WeakMap(), Wt = new WeakMap(), Gt = new WeakMap(), le = new WeakSet(), $i = function() {\n  return h(this, ae, void 0), h(this, j, void 0), h(this, qe, void 0), this;\n}, Nt = function() {\n  h(this, qe, new H(\n    new O(`(x-(${this.center.x.display}))^2+(y-(${this.center.y.display}))^2`),\n    new O(this.squareRadius.display)\n  ).moveLeft());\n}, Ii = function(e) {\n  return h(this, ae, e.center.clone()), h(this, j, e.squareRadius.clone()), A(this, le, Nt).call(this), this;\n}, Si = function(e, t, i) {\n  return h(this, ae, e.clone()), i ? h(this, j, new f(t)) : h(this, j, new f(t).pow(2)), this;\n}, Bi = function(e, t) {\n  return h(this, ae, e.clone()), h(this, j, new E(s(this, ae), t).normSquare), this;\n}, hi = function(e) {\n  if (e.moveLeft(), e.degree(\"x\").value === 2 && e.degree(\"y\").value === 2) {\n    const t = e.left.monomByDegree(2, \"x\"), i = e.left.monomByDegree(2, \"y\");\n    let n, r, l;\n    t.coefficient.isEqual(i.coefficient) ? (e.divide(t.coefficient), n = e.left.monomByDegree(1, \"x\"), r = e.left.monomByDegree(1, \"y\"), l = e.left.monomByDegree(0), h(this, ae, new S(n.coefficient.clone().divide(2).opposite(), r.coefficient.clone().divide(2).opposite())), h(this, j, l.coefficient.clone().opposite().add(s(this, ae).x.clone().pow(2)).add(s(this, ae).y.clone().pow(2)))) : (h(this, ae, void 0), h(this, j, void 0));\n  }\n  return this;\n};\nlet Tt = Ht;\nvar L, G;\nconst ct = class ct {\n  constructor(e, t) {\n    // ax + by + c = 0\n    m(this, L, new S());\n    m(this, G, new E());\n    a(this, \"clone\", () => (h(this, G, s(this, G).clone()), h(this, L, s(this, L).clone()), this));\n    // ------------------------------------------\n    // Mathematical operations\n    // ------------------------------------------\n    a(this, \"isOnLine\", (e) => !1);\n    a(this, \"isParallelTo\", (e) => {\n      throw new Error(\"Method not implemented.\");\n    });\n    a(this, \"isSameAs\", (e) => {\n      throw new Error(\"Method not implemented.\");\n    });\n    a(this, \"isPerpendicularTo\", (e) => {\n      throw new Error(\"Method not implemented.\");\n    });\n    a(this, \"isVertical\", () => {\n      throw new Error(\"Method not implemented.\");\n    });\n    a(this, \"simplify\", () => {\n      throw new Error(\"Method not implemented.\");\n    });\n    a(this, \"intersection\", (e) => {\n      throw new Error(\"Method not implemented.\");\n    });\n    // getValueAtX = (value: Fraction | number): Fraction => {\n    //     const equ = this.equation.clone().isolate('y'),\n    //         F = new Fraction(value)\n    //     if (equ instanceof Equation) {\n    //         return equ.right.evaluate({ x: F }) as Fraction\n    //     }\n    //     return new Fraction().invalid()\n    // }\n    // getValueAtY = (value: Fraction | number): Fraction => {\n    //     const equ = this.equation.clone().isolate('x'),\n    //         F = new Fraction(value)\n    //     if (equ instanceof Equation) {\n    //         return equ.right.evaluate({ y: F }) as Fraction\n    //     }\n    //     return new Fraction().invalid()\n    // }\n    a(this, \"randomPoint\", (e = 5) => {\n      const t = s(this, L).clone(), i = new f(Q(e, !1));\n      return new S(\n        t.x.clone().add(s(this, G).x.clone().multiply(i)),\n        t.y.clone().add(s(this, G).y.clone().multiply(i)),\n        t.z.clone().add(s(this, G).z.clone().multiply(i))\n      );\n    });\n    return h(this, L, e.clone()), h(this, G, t.asPoint ? new E(e, t) : t.clone()), this;\n  }\n  get OA() {\n    return s(this, L);\n  }\n  set OA(e) {\n    h(this, L, e);\n  }\n  get point() {\n    return s(this, L).clone();\n  }\n  get d() {\n    return s(this, G);\n  }\n  set d(e) {\n    h(this, G, e);\n  }\n  get tex() {\n    return {\n      parametric: `${E.asTex(\"x\", \"y\", \"z\")} = ${E.asTex(s(this, L).x.tex, s(this, L).y.tex, s(this, L).z.tex)} + k\\\\cdot ${E.asTex(s(this, G).x.tex, s(this, G).y.tex, s(this, G).z.tex)}`,\n      system: `\\\\left\\\\{\\\\begin{aligned}\n    x &= ${new O(s(this, L).x).add(new M(s(this, G).x).multiply(new M(\"k\"))).reorder(\"k\", !0).tex}\\\\\\\\ \n    y &= ${new O(s(this, L).y).add(new M(s(this, G).y).multiply(new M(\"k\"))).reorder(\"k\", !0).tex}\\\\\\\\\n    z &= ${new O(s(this, L).z).add(new M(s(this, G).z).multiply(new M(\"k\"))).reorder(\"k\", !0).tex}\n\\\\end{aligned}\\\\right.`,\n      cartesian: `\\\\frac{ ${new O(\"x\", 1, s(this, L).x.clone().opposite()).tex} }{ ${this.direction.x.tex} } = \\\\frac{ ${new O(\"y\", 1, s(this, L).y.clone().opposite()).tex} }{ ${this.direction.y.tex} } = \\\\frac{ ${new O(\"z\", 1, s(this, L).z.clone().opposite()).tex} }{ ${this.direction.z.tex} }`\n    };\n  }\n  get display() {\n    const e = s(this, L).x.display, t = s(this, L).y.display, i = s(this, L).z.display, n = this.direction.simplify(), r = n.x.display, l = n.y.display, c = n.z.display;\n    return {\n      parametric: `${E.asDisplay(\"x\", \"y\", \"z\")} = ${E.asDisplay(s(this, L).x.display, s(this, L).y.display, s(this, L).z.display)} + k\\\\cdot ${E.asDisplay(s(this, G).x.display, s(this, G).y.display, s(this, G).z.display)}`,\n      system: \"\",\n      cartesian: `(x-${e})/${r} = (y-${t})/${l} = (z-${i})/${c}`\n    };\n  }\n  get direction() {\n    return s(this, G).clone();\n  }\n  distanceTo(e) {\n    const t = new E(s(this, L), e), i = this.direction, n = this.direction.normSquare, r = t.cross(i).normSquare, l = r.clone().divide(n), c = l.clone().sqrt();\n    return console.log(\"CROSS\", t.cross(i).display), {\n      value: Math.sqrt(l.value),\n      fraction: l.clone().sqrt(),\n      tex: c.isExact() ? c.tex : `\\\\sqrt{${l.tex}}`\n    };\n  }\n  hitSegment(e, t) {\n    const i = this.intersection(\n      new ct(e, t)\n    );\n    return i.hasIntersection ? i.point.x.value >= Math.min(e.x.value, t.x.value) && i.point.x.value <= Math.max(e.x.value, t.x.value) && i.point.y.value >= Math.min(e.y.value, t.y.value) && i.point.y.value <= Math.max(e.y.value, t.y.value) && i.point.z.value >= Math.min(e.z.value, t.z.value) && i.point.z.value <= Math.max(e.z.value, t.z.value) : !1;\n  }\n};\nL = new WeakMap(), G = new WeakMap(), // A line is defined as the canonical form\na(ct, \"PERPENDICULAR\", oi.Perpendicular), a(ct, \"PARALLEL\", oi.Parallel);\nlet Ot = ct;\nvar ke;\nclass cs {\n  constructor(...e) {\n    m(this, ke, []);\n    return h(this, ke, e), this;\n  }\n  get values() {\n    return s(this, ke);\n  }\n  get array() {\n    return s(this, ke).map((e) => e.array);\n  }\n  get dimension() {\n    return [s(this, ke).length, s(this, ke)[0].dimension];\n  }\n  isSquare() {\n    return s(this, ke).length === s(this, ke)[0].dimension;\n  }\n  determinant() {\n    if (!this.isSquare())\n      throw new Error(\"Matrix is not square\");\n    return hs(...this.values);\n  }\n}\nke = new WeakMap();\nvar Me, Ue;\nconst mi = class mi {\n  constructor(e) {\n    m(this, Me, new E(0, 0, 1));\n    m(this, Ue, new S(0, 0, 0));\n    return e && this.parse(e), this;\n  }\n  get normal() {\n    return s(this, Me);\n  }\n  set normal(e) {\n    h(this, Me, e), s(this, Me).asPoint = !1;\n  }\n  get point() {\n    return s(this, Ue);\n  }\n  set point(e) {\n    h(this, Ue, e), s(this, Ue).asPoint = !0;\n  }\n  get a() {\n    return s(this, Me).x;\n  }\n  get b() {\n    return s(this, Me).y;\n  }\n  get c() {\n    return s(this, Me).z;\n  }\n  get d() {\n    return s(this, Me).dot(s(this, Ue)).opposite();\n  }\n  get tex() {\n    return new H(\n      new O(\"xyz\", this.a, this.b, this.c, this.d),\n      new O(0)\n    ).reduce().tex;\n  }\n  parse(e) {\n    var t, i, n;\n    if (e.point && e.normal) {\n      this.point = e.point, this.normal = e.normal;\n      return;\n    }\n    if (e.point && ((t = e.directions) == null ? void 0 : t.length) === 2) {\n      this.point = e.point;\n      const [r, l] = e.directions;\n      this.normal = r.cross(l);\n      return;\n    }\n    if (e.equation) {\n      const r = e.equation.moveLeft().reduce().left, l = r.monomByLetter(\"x\").coefficient, c = r.monomByLetter(\"y\").coefficient, u = r.monomByLetter(\"z\").coefficient, d = r.monomByDegree(0).coefficient;\n      this.normal = new E(l, c, u), l.isNotZero() ? this.point = new S(d.clone().divide(l).opposite(), 0, 0) : c.isNotZero() ? this.point = new S(0, d.clone().divide(c).opposite(), 0) : this.point = new S(0, 0, d.clone().divide(u).opposite());\n      return;\n    }\n    if (((i = e.points) == null ? void 0 : i.length) === 3 && e.points.every((r) => r instanceof E)) {\n      const r = e.points[0], l = e.points[1], c = e.points[2], u = new E(r, l), d = new E(r, c);\n      this.normal = u.cross(d), this.point = r;\n      return;\n    }\n    if (((n = e.coefficients) == null ? void 0 : n.length) === 4) {\n      const [r, l, c, u] = e.coefficients;\n      this.normal = new E(r, l, c), this.point = new S(0, 0, -u);\n      return;\n    }\n  }\n  angle(e, t, i) {\n    if (e instanceof mi)\n      return this.normal.angle(e.normal, t, i);\n    let n;\n    if (e instanceof E) {\n      if (e.dimension !== 3)\n        throw new Error(\"Vector is not 3D\");\n      n = e;\n    } else\n      n = e.direction;\n    return (i ? Math.PI / 2 : 90) - this.normal.angle(n, !0, i);\n  }\n  distanceTo(e) {\n    return this.normal.dot(e).add(this.d).abs().value / this.normal.norm;\n  }\n  intersectWithLine(e) {\n    const { point: t, direction: i } = e, n = this.normal.dot(t).add(this.d).divide(this.normal.dot(i).opposite());\n    return t.clone().add(i.clone().multiplyByScalar(n));\n  }\n  intersectWithPlane(e) {\n    throw this.normal.cross(e.normal), new S(0, 0, 0), new Error(\"Intersection with plane  not yet implemented !\");\n  }\n  isPointOnPlane(e) {\n    return this.normal.dot(e).add(this.d).isZero();\n  }\n};\nMe = new WeakMap(), Ue = new WeakMap();\nlet ai = mi;\nvar Y, _, ee, st, Ce, yt, Xt, wt, Se, Yt, nt;\nconst Qt = class Qt {\n  constructor(...e) {\n    m(this, Y, new S());\n    m(this, _, new S());\n    m(this, ee, new S());\n    m(this, st, {\n      AB: new R(),\n      AC: new R(),\n      BC: new R()\n    });\n    m(this, Ce, {\n      AB: new S(),\n      AC: new S(),\n      BC: new S()\n    });\n    m(this, yt, null);\n    // ------------------------------------------\n    // Creation / parsing functions\n    // ------------------------------------------\n    /**\n     * Parse values to a triangle. Supported formats:\n     * Vector2D, Vector2D, Vector2D\n     * x1, y1, x2, y2, x3, y3\n     * @param values\n     */\n    a(this, \"parse\", (...e) => {\n      if (e.length === 6) {\n        const t = e.map((i) => new f(i));\n        if (t.some((i) => i.isNaN()))\n          throw new Error(\"One of the values is not a valid number\");\n        return this.parse(\n          new E(t[0], t[1]),\n          new E(t[2], t[3]),\n          new E(t[4], t[5])\n        );\n      } else if (e.length === 3) {\n        if (e.every((t) => typeof t == \"string\"))\n          return this.parse(\n            ...e.map((t) => new R(t))\n          );\n        if (e.every((t) => t instanceof R)) {\n          const t = e[0].clone(), i = e[1].clone(), n = e[2].clone();\n          h(this, st, { AB: t, BC: i, AC: n });\n          let r = t.intersection(i);\n          if (r.hasIntersection)\n            h(this, _, r.point.clone());\n          else\n            throw new Error(\"Lines do not intersect !\");\n          if (r = i.intersection(n), r.hasIntersection)\n            h(this, ee, r.point.clone());\n          else\n            throw new Error(\"Lines do not intersect !\");\n          if (r = n.intersection(t), r.hasIntersection)\n            h(this, Y, r.point.clone());\n          else\n            throw new Error(\"Lines do not intersect !\");\n        } else e.every((t) => t instanceof S) && (h(this, Y, e[0].clone()), h(this, _, e[1].clone()), h(this, ee, e[2].clone()), h(this, st, {\n          AB: new R(s(this, Y), s(this, _)),\n          BC: new R(s(this, _), s(this, ee)),\n          AC: new R(s(this, Y), s(this, ee))\n        }));\n      } else if (e.length === 1 && e[0] instanceof Qt)\n        return e[0].clone();\n      return s(this, Xt).call(this), this;\n    });\n    /**\n     * Clone the Triangle class\n     */\n    a(this, \"clone\", () => new Qt(\n      s(this, Y).clone(),\n      s(this, _).clone(),\n      s(this, ee).clone()\n    ));\n    // ------------------------------------------\n    // Triangle operations and properties\n    // ------------------------------------------\n    /**\n     * Generate the Line object for the three segments of the triangle\n     */\n    m(this, Xt, () => {\n      s(this, Y).asPoint = !0, s(this, _).asPoint = !0, s(this, ee).asPoint = !0, h(this, Ce, {\n        AB: new S().middleOf(s(this, Y), s(this, _)),\n        AC: new S().middleOf(s(this, Y), s(this, ee)),\n        BC: new S().middleOf(s(this, _), s(this, ee))\n      }), h(this, yt, s(this, Yt).call(this));\n    });\n    /**\n     * Get the Vector2D class for the given name\n     * @param ptName\n     */\n    m(this, wt, (e) => {\n      switch (e.toUpperCase()) {\n        case \"A\":\n          return s(this, Y);\n        case \"B\":\n          return s(this, _);\n        case \"C\":\n          return s(this, ee);\n      }\n      return s(this, Y);\n    });\n    /**\n     * Get the vector for the segment given by name.\n     * @param ptName1\n     * @param ptName2\n     */\n    m(this, Se, (e, t) => new E(\n      s(this, wt).call(this, e),\n      s(this, wt).call(this, t)\n    ));\n    m(this, Yt, () => {\n      const e = {\n        A: new R().fromPoints(s(this, Y), s(this, Ce).BC),\n        B: new R().fromPoints(s(this, _), s(this, Ce).AC),\n        C: new R().fromPoints(s(this, ee), s(this, Ce).AB),\n        intersection: null\n      }, t = {\n        AB: new R().fromPointAndNormal(s(this, Ce).AB, new E(s(this, Y), s(this, _)).normal()),\n        AC: new R().fromPointAndNormal(s(this, Ce).AC, new E(s(this, Y), s(this, ee)).normal()),\n        BC: new R().fromPointAndNormal(s(this, Ce).BC, new E(s(this, _), s(this, ee)).normal()),\n        intersection: null\n      }, i = {\n        A: new R().fromPointAndNormal(s(this, Y), new E(s(this, _), s(this, ee)).normal()),\n        B: new R().fromPointAndNormal(s(this, _), new E(s(this, Y), s(this, ee)).normal()),\n        C: new R().fromPointAndNormal(s(this, ee), new E(s(this, Y), s(this, _)).normal()),\n        intersection: null\n      }, n = s(this, nt).call(this, \"A\"), r = s(this, nt).call(this, \"B\"), l = s(this, nt).call(this, \"C\"), c = {\n        A: n.internal,\n        B: r.internal,\n        C: r.internal,\n        intersection: null\n      }, u = {\n        A: n.external,\n        B: r.external,\n        C: l.external,\n        intersection: null\n      }, d = {\n        medians: e,\n        mediators: t,\n        heights: i,\n        bisectors: c,\n        externalBisectors: u\n      };\n      return d.medians.intersection = d.medians.A.intersection(d.medians.B).point, d.mediators.intersection = d.mediators.AB.intersection(d.mediators.BC).point, d.heights.intersection = d.heights.A.intersection(d.heights.B).point, d.bisectors.intersection = d.bisectors.A.intersection(d.bisectors.B).point, d;\n    });\n    m(this, nt, (e) => {\n      const t = this.lines;\n      let i, n;\n      if (e === \"A\" ? (i = t.AB, n = t.AC) : e === \"B\" ? (i = t.AB, n = t.BC) : e === \"C\" && (i = t.BC, n = t.AC), i === void 0 || n === void 0)\n        throw new Error(`The point ${e} does not exist`);\n      const r = i.n.simplify().norm, l = n.n.simplify().norm, c = i.getEquation().multiply(l), u = n.getEquation().multiply(r), d = new R(c.clone().subtract(u).simplify()), p = new R(u.clone().subtract(c).simplify());\n      return e === \"A\" ? d.hitSegment(this.B, this.C) ? { internal: d, external: p } : { internal: p, external: d } : e === \"B\" ? d.hitSegment(this.A, this.C) ? { internal: d, external: p } : { internal: p, external: d } : e === \"C\" ? d.hitSegment(this.B, this.A) ? { internal: d, external: p } : { internal: p, external: d } : { internal: d, external: p };\n    });\n    return e.length > 0 && this.parse(...e), this;\n  }\n  // ------------------------------------------\n  // Getter and setters\n  // ------------------------------------------\n  get A() {\n    return s(this, Y);\n  }\n  get B() {\n    return s(this, _);\n  }\n  get C() {\n    return s(this, ee);\n  }\n  get AB() {\n    return s(this, Se).call(this, \"A\", \"B\");\n  }\n  get BA() {\n    return s(this, Se).call(this, \"B\", \"A\");\n  }\n  get BC() {\n    return s(this, Se).call(this, \"B\", \"C\");\n  }\n  get CB() {\n    return s(this, Se).call(this, \"C\", \"B\");\n  }\n  get AC() {\n    return s(this, Se).call(this, \"A\", \"C\");\n  }\n  get CA() {\n    return s(this, Se).call(this, \"C\", \"A\");\n  }\n  get isRectangle() {\n    return !!(this.AB.isNormalTo(this.BC) || this.AB.isNormalTo(this.AC) || this.BC.isNormalTo(this.AC));\n  }\n  get isEquilateral() {\n    return this.AB.normSquare.isEqual(this.BC.normSquare) && this.AB.normSquare.isEqual(this.AC.normSquare);\n  }\n  get isIsocele() {\n    return this.AB.normSquare.isEqual(this.BC.normSquare) || this.AB.normSquare.isEqual(this.AC.normSquare) || this.BC.normSquare.isEqual(this.AC.normSquare);\n  }\n  get lines() {\n    return s(this, st);\n  }\n  get remarquables() {\n    return s(this, yt);\n  }\n};\nY = new WeakMap(), _ = new WeakMap(), ee = new WeakMap(), st = new WeakMap(), Ce = new WeakMap(), yt = new WeakMap(), Xt = new WeakMap(), wt = new WeakMap(), Se = new WeakMap(), Yt = new WeakMap(), nt = new WeakMap();\nlet li = Qt;\nfunction qt(o) {\n  const e = Object.assign(\n    {\n      negative: !0,\n      max: 10,\n      reduced: !0,\n      zero: !0,\n      natural: !1\n    },\n    o\n  ), t = new f();\n  if (e.negative ? t.numerator = Q(e.max, e.zero) : t.numerator = pe(e.zero ? 0 : 1, e.max), e.natural)\n    t.denominator = 1;\n  else {\n    let i = 0;\n    for (; t.isRelative() && i < 10; )\n      t.denominator = pe(1, e.max), i++;\n  }\n  return e.reduced ? t.reduce() : t;\n}\nfunction Ri(o) {\n  const e = Object.assign(\n    {\n      letters: \"x\",\n      degree: 2,\n      fraction: !0,\n      zero: !1\n    },\n    o\n  ), t = new M();\n  if (t.coefficient = qt({\n    zero: e.zero,\n    reduced: !0,\n    natural: !e.fraction\n  }), e.letters.length > 1) {\n    for (const i of e.letters.split(\"\"))\n      t.setLetter(i, 0);\n    for (let i = 0; i < e.degree; i++) {\n      const n = di(e.letters.split(\"\"));\n      t.setLetter(n, t.degree(n).clone().add(1));\n    }\n  } else\n    t.setLetter(e.letters, e.degree);\n  return t;\n}\nconst us = {\n  letters: \"x\",\n  degree: 2,\n  fraction: !1,\n  zero: !1,\n  unit: !1,\n  factorable: !1,\n  allowNullMonom: !0,\n  numberOfMonoms: 0,\n  positive: !0\n};\nfunction zi(o) {\n  const e = Object.assign(\n    us,\n    o\n  ), t = new O().empty();\n  let i;\n  for (let n = e.degree; n >= 0; n--)\n    i = Ri({\n      letters: e.letters,\n      degree: n,\n      fraction: e.fraction,\n      zero: n === e.degree ? !1 : e.allowNullMonom\n    }), e.unit && e.degree === n && i.coefficient.one(), t.add(i);\n  if (e.positive && t.monomByDegree().coefficient.isNegative() && t.monomByDegree().coefficient.opposite(), e.numberOfMonoms && e.numberOfMonoms > 0 && e.numberOfMonoms < t.length)\n    for (; t.length > e.numberOfMonoms; ) {\n      const n = pe(1, t.length - 1);\n      t.monoms.splice(n, 1);\n    }\n  return t.reduce();\n}\nfunction fs(o) {\n  const e = Object.assign(\n    {\n      letters: \"x\",\n      degree: 1,\n      fraction: !1,\n      zero: !1,\n      unit: !1,\n      factorable: !1,\n      allowNullMonom: !0,\n      numberOfMonoms: 0,\n      positive: !0,\n      solution: {\n        allowZero: !0,\n        fraction: !1,\n        nothing: !1,\n        everything: !1\n      }\n    },\n    o\n  ), t = new O().one();\n  for (let i = 0; i < e.degree; i++) {\n    const n = zi({\n      degree: 1,\n      unit: e.unit,\n      fraction: e.fraction,\n      letters: e.letters,\n      zero: e.zero\n    });\n    t.multiply(n);\n  }\n  return new H(t, 0);\n}\nfunction ci(o) {\n  const e = Object.assign(\n    {\n      axis: !0,\n      fraction: !1,\n      max: 10,\n      quadrant: null\n    },\n    o\n  ), t = e.axis === \"x\", i = e.axis === \"y\", n = e.fraction ? qt({ max: e.max, zero: t }) : new f(Q(e.max, t)), r = e.fraction ? qt({ max: e.max, zero: i }) : new f(Q(e.max, i));\n  return Number(e.quadrant) === 1 && (n.abs(), r.abs()), Number(e.quadrant) === 2 && (n.isPositive() && n.opposite(), r.isNegative() && r.opposite()), Number(e.quadrant) === 3 && (n.isPositive() && n.opposite(), r.isPositive() && r.opposite()), Number(e.quadrant) === 4 && (n.isNegative() && n.opposite(), r.isPositive() && r.opposite()), new S(n, r);\n}\nfunction ds(o) {\n  const e = Object.assign(\n    {\n      center: {\n        x: { min: -10, max: 10 },\n        y: { min: -10, max: 10 }\n      },\n      pointsOnCircle: 8\n    },\n    o\n  ), t = ci(e.center);\n  let i, n;\n  return e.pointsOnCircle === 8 ? (i = pe(1, 3), n = i ** 2 + (i + 1) ** 2) : n = pe(1, 20), new Tt(t, n, !0);\n}\nfunction ps(o) {\n  const e = Object.assign(\n    {\n      A: {\n        x: Q(10),\n        y: Q(10)\n      }\n    },\n    o\n  ), t = new E(\n    Q(10),\n    Q(10)\n  );\n  for (; t.isNull; )\n    t.x = Q(10), t.y = Q(10);\n  return e.slope === 1 ? t.x.sign() !== t.y.sign() && t.y.opposite() : e.slope === -1 && t.x.sign() !== t.y.sign() && t.y.opposite(), new R().fromPointAndDirection(new E(e.A.x, e.A.y), t);\n}\nfunction ms(o) {\n  const e = Object.assign(\n    {\n      A: {\n        x: Q(10),\n        y: Q(10),\n        z: Q(10)\n      },\n      direction: {\n        x: Q(10),\n        y: Q(10),\n        z: Q(10)\n      }\n    },\n    o\n  ), t = new S(e.A.x, e.A.y, e.A.z), i = new E(e.direction.x, e.direction.y, e.direction.z);\n  return new Ot(t, i);\n}\nconst gs = {\n  equation: (o) => fs(o),\n  polynom: (o) => zi(o),\n  monom: (o) => Ri(o),\n  fraction: (o) => qt(o),\n  number: (o, e, t) => pe(o, e, t),\n  numberSym: (o, e) => Q(o, e),\n  prime: (o) => as(o),\n  bool: (o) => Ci(o),\n  array: (o, e) => ls(o, e),\n  item: (o) => di(o),\n  shuffle: (o) => Pi(o),\n  line: (o) => ps(o),\n  line3: (o) => ms(o),\n  vector: (o) => ci(o),\n  point: (o) => {\n    const e = ci(o);\n    return e.asPoint = !0, e;\n  },\n  circle: (o) => ds(o)\n}, ws = {\n  Numeric: U,\n  Fraction: f,\n  Root: vt,\n  Monom: M,\n  Polynom: O,\n  Equation: H,\n  Matrix: cs,\n  LinearSystem: ti,\n  Factor: se,\n  PolyFactor: si,\n  LogicalSet: ss,\n  Random: gs,\n  Geometry: {\n    Vector: E,\n    Point: S,\n    Line: R,\n    Triangle: li,\n    Circle: Tt,\n    Line3: Ot,\n    Plane3: ai\n  },\n  NumExp: is\n};\nexport {\n  Tt as Circle,\n  H as Equation,\n  At as EquationSolver,\n  lt as FACTOR_DISPLAY,\n  se as Factor,\n  f as Fraction,\n  R as Line,\n  Ot as Line3,\n  ti as LinearSystem,\n  ss as LogicalSet,\n  cs as Matrix,\n  M as Monom,\n  vt as NthRoot,\n  is as NumExp,\n  U as Numeric,\n  ai as Plane3,\n  S as Point,\n  si as PolyFactor,\n  O as Polynom,\n  gs as Random,\n  li as Triangle,\n  E as Vector,\n  rs as areVectorsColinears,\n  ns as areVectorsEquals,\n  ws as default,\n  hs as determinant,\n  os as dotProduct\n};\n//# sourceMappingURL=pimath.js.map\n","import {type CheckerResult, CHECKERS} from \"./checker.config\"\r\n\r\nexport abstract class CheckerAbstract {\r\n    protected constructor(config?: string[] | string) {\r\n        this._description = \"\"\r\n        this._answer = \"\"\r\n\r\n        if (config === undefined) {\r\n            this._config = []\r\n        } else if (typeof config === \"string\") {\r\n            this._config = config.split(',')\r\n        } else {\r\n            this._config = [...config]\r\n        }\r\n\r\n        this._secondaryChecker = null\r\n    }\r\n\r\n    protected _secondaryChecker: CheckerAbstract | null\r\n\r\n    get secondaryChecker(): CheckerAbstract | null {\r\n        return this._secondaryChecker\r\n    }\r\n\r\n    set secondaryChecker(value: CheckerAbstract | null) {\r\n        this._secondaryChecker = value\r\n    }\r\n\r\n    protected _config: string[]\r\n\r\n    get config(): string[] {\r\n        return this._config\r\n    }\r\n\r\n    set config(value: string[]) {\r\n        this._config = value\r\n    }\r\n\r\n    protected _type: CHECKERS | undefined\r\n\r\n    get type(): CHECKERS | undefined {\r\n        return this._type\r\n    }\r\n\r\n    set type(value: CHECKERS) {\r\n        this._type = value\r\n    }\r\n\r\n    protected _description: string\r\n\r\n    get description(): string {\r\n        return this._description\r\n    }\r\n\r\n    set description(value: string) {\r\n        this._description = value\r\n    }\r\n\r\n    protected _answer: string\r\n\r\n    get answer(): string {\r\n        return this._answer\r\n    }\r\n\r\n    set answer(value: string) {\r\n        this._answer = value\r\n    }\r\n\r\n    abstract get format(): string\r\n\r\n    check(expected: string, given: string): CheckerResult {\r\n        // Define the answer\r\n        this.answer = expected\r\n\r\n        // No value given\r\n        if (given === \"\") {\r\n            return {\r\n                result: false,\r\n                message: \"Veuillez entrer une valeur\"\r\n            }\r\n        }\r\n\r\n        // The result is exactly what is expected\r\n        let message = \"\"\r\n        if (expected === given) {\r\n            return {\r\n                result: true,\r\n                message\r\n            }\r\n        }\r\n\r\n        // The format is wrong\r\n        message = this.checkFormat(given)\r\n        if (message !== \"\") {\r\n            return {\r\n                result: false,\r\n                message,\r\n            }\r\n        }\r\n\r\n        // The value is not correct\r\n        message = this.checkValue(given)\r\n        if (message !== \"\") {\r\n            return {\r\n                result: false,\r\n                message,\r\n            }\r\n        }\r\n\r\n        // All tests passed => answer is correct\r\n        return {\r\n            result: true,\r\n            message: \"\",\r\n        }\r\n    }\r\n\r\n    checkFormat(value: string): string {\r\n        return value ? \"\" : \"Veuillez entrer une réponse\"\r\n    }\r\n\r\n    checkValue(value: string): string {\r\n        return \"La réponse n'est pas correcte\"\r\n    }\r\n}\r\n\r\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {Polynom} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"polynom\"\nconst description = `polynom,[paramètres]\n\n**paramètres**\n- f=factorisé\n- F=entièrement factorisé \\\\((2x+4)(x-3)\\\\) ne passe pas.\n- d=développé\n- s=forme du sommet \\\\(a(x-b)^2+c\\\\)\n`\nexport class PolynomChecker extends CheckerAbstract {\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.POLYNOMIAL\n\t\tthis.description = description\n\t}\n\n\tget format(): string {\n\t\tconst opts = []\n\n\t\tif (this.config.includes(\"f\") || this.config.includes(\"factors\")) {\n\t\t\topts.push(\"factorisé\")\n\t\t} else if (\n\t\t\tthis.config.includes(\"F\") ||\n\t\t\tthis.config.includes(\"FACTORS\")\n\t\t) {\n\t\t\topts.push(\"entièrement factorisé\")\n\t\t} else if (\n\t\t\tthis.config.includes(\"d\") ||\n\t\t\tthis.config.includes(\"develop\")\n\t\t) {\n\t\t\topts.push(\"développé\")\n\t\t}\n\n\t\treturn `polynôme ${opts.join(\", \")}`\n\t}\n\n\toverride checkFormat(value: string): string {\n\t\ttry {\n\t\t\tnew Polynom(value)\n\t\t\treturn \"\"\n\t\t} catch{\n\t\t\treturn \"Le polynôme n'est pas formé correctement.\"\n\t\t}\n\t}\n\n\toverride checkValue(value: string): string {\n\t\t// Make sur the polynom is constructable\n\t\tconst A = new Polynom(value)\n\t\tconst Q = new Polynom(this.answer)\n\n\t\t// Polynom must be equals.\n\t\tif (!Q.isEqual(A)) {\n\t\t\treturn \"Le polynôme n'est pas le même.\"\n\t\t}\n\n\t\t/** Polynom checker config */\n\t\t// Factorized\n\t\tif (\n\t\t\tthis.config.includes(\"f\") ||\n\t\t\tthis.config.includes(\"factor\") ||\n\t\t\tthis.config.includes(\"F\") ||\n\t\t\tthis.config.includes(\"FACTORS\")\n\t\t) {\n\t\t\ttry {\n\t\t\t\t// TODO: Check if the polynom is fully factorized\n\t\t\t\t// if (\n\t\t\t\t// \t!A.isFactorized(\n\t\t\t\t// \t\tvalue,\n\t\t\t\t// \t\tthis.config.includes(\"f\") ||\n\t\t\t\t// \t\tthis.config.includes(\"factor\"),\n\t\t\t\t// \t)\n\t\t\t\t// ) {\n\t\t\t\t// \treturn \"Le polynôme n'est pas (entièrement) factorisé.\"\n\t\t\t\t// }\n\t\t\t\treturn \"\"\n\t\t\t} catch {\n\t\t\t\treturn \"Le polynôme n'est pas (entièrement) factorisé.\"\n\t\t\t}\n\t\t}\n\n\t\t// Developed\n\t\tif (this.config.includes(\"d\") || this.config.includes(\"develop\")) {\n\t\t\tif (!A.isDeveloped(value)) {\n\t\t\t\treturn \"Le polynôme n'est pas (entièrement) développé.\"\n\t\t\t}\n\t\t}\n\n\t\t// Forme du sommet\n\t\tif (this.config.includes(\"s\") || this.config.includes(\"sommet\")) {\n\t\t\tif (\n\t\t\t\tvalue.match(\n\t\t\t\t\t/(-?[\\d]+(\\/\\d+)?)?\\(x([+-](\\d+(\\/\\d+)?)?)?\\)\\^2([+-]\\d+(\\/\\d+)?)?/,\n\t\t\t\t) ||\n\t\t\t\tvalue.match(/(-?[\\d]+(\\/\\d+)?)?x\\^2([+-]\\d+(\\/\\d+)?)?/)\n\t\t\t) {\n\t\t\t\treturn \"\"\n\t\t\t} else {\n\t\t\t\treturn \"L'équation n'est pas dans le bon format.\"\n\t\t\t}\n\t\t}\n\n\t\t// If all tests passes, it is correct !\n\t\treturn \"\"\n\n\t}\n\n}\n","import {Equation, Numeric} from \"pimath\"\nimport {CheckerAbstract} from \"../CheckerAbstract\";\nimport {PolynomChecker} from \"./PolynomChecker\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"equation\"\nconst description = `equation,[paramètres]\n\n**paramètres**\n- r=réduit\n- circle=forme centre rayon\n- 2d=équation de la droite en 2D (ax+by+c=0)\n- mx+h=droite du plan, sous la forme y=mx+h\n- sommet=forme du sommet\n- 3d=équation du plan en 3D (ax+by+cz+d=0)\n`\n\nexport class CartesianChecker extends CheckerAbstract {\n\t#reduced = false\n\t#circle = false\n\t#line2d = false\n\t#slope = false\n\t#minmax = false\n\t#line3d = false\n\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.CARTESIAN\n\t\tthis.description = description\n\n\t\tthis.#reduced =\n\t\t\tthis.config.includes(\"r\") ||\n\t\t\tthis.config.includes(\"reduced\") ||\n\t\t\tthis.config.includes(\"re\")\n\t\tthis.#circle =\n\t\t\tthis.config.includes(\"circle\")\n\t\tthis.#line2d =\n\t\t\tthis.config.includes(\"2d\")\n\t\tthis.#slope =\n\t\t\tthis.config.includes(\"mx+h\")\n\t\tthis.#minmax =\n\t\t\tthis.config.includes(\"minmax\")\n\t\tthis.#line3d =\n\t\t\tthis.config.includes(\"3d\")\n\n\t\tthis.secondaryChecker = new PolynomChecker(['s'])\n\t}\n\n\tget format(): string {\n\t\tconst opts = []\n\n\t\tif (this.#circle) {\n\t\t\topts.push(\"du cercle, forme centre - rayon\")\n\t\t}\n\n\t\tif (this.#line2d) {\n\t\t\topts.push(\"de la droite du plan, forme ax+by+c=0\")\n\t\t}\n\t\tif (this.#slope) {\n\t\t\topts.push(\"de la droite du plan, forme y=mx+h\")\n\t\t}\n\t\tif (this.#minmax) {\n\t\t\topts.push(\"de la droite du plan, forme du sommet\")\n\t\t}\n\t\tif (this.#line3d) {\n\t\t\topts.push(\"de l'équation du plan, forme ax+by+cz+d=0\")\n\t\t}\n\n\t\tif (this.#reduced) {\n\t\t\topts.push(\"réduite\")\n\t\t}\n\n\t\treturn `équation ${opts.join(\", \")}`\n\t}\n\n\n\toverride checkFormat(value: string): string {\n\t\tif (!value.includes(\"=\")) {\n\t\t\treturn \"il manque un signe d'égalité.\"\n\t\t}\n\n\t\ttry {\n\t\t\tnew Equation(value)\n\t\t} catch {\n\t\t\treturn \"l'équation n'est pas correctement formée.\"\n\t\t}\n\n\t\treturn \"\"\n\t}\n\n\toverride checkValue(value: string): string {\n\n\t\t// Contrôle des données\n\t\tconst A = new Equation(value)\n\t\tconst Q = new Equation(this.answer)\n\n\t\t// Must be the same equation.\n\t\tconst A2 = A.clone().moveLeft(),\n\t\t\tQ2 = Q.clone().moveLeft()\n\t\tA2.simplify()\n\t\tQ2.simplify()\n\n\t\t// L'expression de gauche est soit égale, soit opposée.\n\t\tif (!A2.isLinearTo(Q2)) {\n\t\t\treturn \"l'équation n'est pas juste.\"\n\t\t}\n\n\n\n\t\tif (this.#line2d || this.#line3d) {\n\t\t\t// Must be:\n\t\t\t// ax+by+c=0\n\t\t\t// ax+c=0\n\t\t\t// by+c=0\n\t\t\t// ax+by=0\n\t\t\t// Allows x=c, y=c\n\t\t\tif (A.right.variables.length > 0) {\n\t\t\t\treturn  \"Toutes les variables doivent être à gauche.\"\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tA.left.variables.length >= 2 &&\n\t\t\t\t!A.right.isZero()\n\t\t\t) {\n\t\t\t\t// There are two variables : everything must be right\n\t\t\t\treturn  \"l'équation n'est pas correctement formée.\"\n\t\t\t}\n\t\t}\n\n\t\tif (this.#slope) {\n\t\t\t// Must be:\n\t\t\t// y=mx+h\n\t\t\t// y=h\n\t\t\t// y=mx\n\t\t\t// Allows x=h, y=h\n\t\t\tif (\n\t\t\t\t(A.left.variables.length === 2) ||\n\t\t\t\t(A.left.variables.length === 1 && !A.left.monoms[0].coefficient.isOne())\n\t\t\t) {\n\t\t\t\t// There are two variables : everything must be right\n\t\t\t\treturn \"Il faut isoler la variable y à gauche.\"\n\t\t\t}\n\t\t}\n\n\t\tif (this.#minmax) {\n\t\t\t// Come from Polynom checker.\n\t\t\t// Left or right part must be correctly formed.\n\t\t\t// y = [a](x-b)^2[ + c]\n\t\t\t// y = [a]x^2[ + c]\n\t\t\tconst [left, right] = value.split(\"=\"),\n\t\t\t\t[eLeft, eRight] = this.answer.split(\"=\")\n\n\t\t\tconst polynomY = left === \"y\" ? left : right,\n\t\t\t\tpolynomSommet = left === \"y\" ? right : left,\n\t\t\t\texpectedSommet = eLeft === \"y\" ? eRight : eLeft\n\n\t\t\tif (polynomY !== \"y\") {\n\t\t\t\treturn \"Un côté de l'équation doit juste être (y)\"\n\t\t\t}\n\n\t\t\treturn this.secondaryChecker?.check(expectedSommet, polynomSommet).message ?? \"\"\n\t\t}\n\n\t\tif (this.#circle) {\n\t\t\t// TODO: Check que c'est l'équation sous la forme centre - rayon.\n\t\t\t// x^2  + (y-b)^2 = r^2\n\t\t\t// (x-a)^2 + y^2 = r^2\n\t\t\t// x^2+y^2 = r^2\n\t\t\t// (x-a)^2 + (y-b)^2 = r^2\n\n\t\t\t// Must be a polynom of degree 2 in x and y.\n\t\t\tif (A.degree(\"x\").value !== 2 || A.degree(\"y\").value !== 2) {\n\t\t\t\treturn \"L'équation n'a pas les bons degrés.\"\n\t\t\t}\n\n\t\t\t// One part of the equation must be of degree zero.\n\t\t\tlet center = \"\"\n\n\t\t\tif (\n\t\t\t\tA.left.degree(\"x\").value === 2 &&\n\t\t\t\tA.right.degree(\"x\").isZero() &&\n\t\t\t\tA.left.degree(\"y\").value === 2 &&\n\t\t\t\tA.right.degree(\"y\").isZero()\n\t\t\t) {\n\t\t\t\tcenter = value.split(\"=\")[0]\n\t\t\t} else if (\n\t\t\t\tA.right.degree(\"x\").value === 2 &&\n\t\t\t\tA.left.degree(\"x\").isZero() &&\n\t\t\t\tA.right.degree(\"y\").value === 2 &&\n\t\t\t\tA.left.degree(\"y\").isZero()\n\t\t\t) {\n\t\t\t\tcenter = value.split(\"=\")[1]\n\t\t\t} else {\n\t\t\t\treturn \"L'équation n'est pas correctement formée pour la forme centre - rayon.\"\n\t\t\t}\n\n\t\t\t// radius should be ok and does not need more checks\n\t\t\t// center must be correctly formed.\n\t\t\t// Transform ^(2) into ^2\n\t\t\tcenter = center.replaceAll(\"^(2)\", \"^2\")\n\n\t\t\tif (\n\t\t\t\tcenter.match(/\\(x[+-][0-9/]+\\)\\^2\\+\\(y[+-][0-9/]+\\)\\^2/) ||\n\t\t\t\tcenter.match(/x\\^2\\+\\(y[+-][0-9/]+\\)\\^2/) ||\n\t\t\t\tcenter.match(/\\(x[+-][0-9/]+\\)\\^2\\+y\\^2/) ||\n\t\t\t\tcenter === \"x^2+y^2\" ||\n\t\t\t\tcenter === \"y^2+x^2\"\n\t\t\t) {\n\t\t\t\treturn \"\"\n\t\t\t} else {\n\t\t\t\treturn \"L'équation n'est pas dans le bon format.\"\n\t\t\t}\n\t\t}\n\n\t\tif (this.#reduced) {\n\t\t\tconst lcmL = A.left.commonMonom().coefficient.value,\n\t\t\t\tlcmR = A.right.commonMonom().coefficient.value,\n\t\t\t\tlcm = Numeric.lcm(lcmL, lcmR)\n\n\t\t\tif (lcm !== 1) {\n\t\t\t\treturn \"l'équation n'est pas réduite.\"\n\t\t\t}\n\t\t}\n\n\t\t// If all tests passes, it is correct !\n\t\treturn \"\"\n\t}\n}\n","export function splitIfOutsideParentheses(\n\tvalue: string,\n\tsplitCharacter: string,\n): string[] {\n\tlet isInside = 0,\n\t\tlastIndex = 0\n\tconst arr = []\n\n\tfor (let i = 0; i < value.length; i++) {\n\t\tif (value[i] === \"(\") isInside++\n\t\tif (value[i] === \")\") isInside--\n\n\t\tif (value[i] === splitCharacter && isInside === 0) {\n\t\t\tarr.push(value.substring(lastIndex, i))\n\t\t\tlastIndex = i + 1\n\t\t}\n\t}\n\n\t// Add the last item.\n\tarr.push(value.substring(lastIndex))\n\treturn arr\n}\n\nexport function splitAtSigns(value: string): string[] {\n\treturn splitIfOutsideParentheses(value, \"-\")\n\t\t.map((element, index) => (index > 0 ? \"-\" + element : element))\n\t\t.map((element) => splitIfOutsideParentheses(element, \"+\"))\n\t\t.flat()\n\t\t.map((x) => x.trim())\n\t\t.filter((x) => x !== \"\")\n}\n\nexport function braceSorter(value: string): string {\n\treturn (\n\t\tvalue.split(\"{\")[0] +\n\t\t\"{\" +\n\t\tvalue.split(\"{\")[1].split(\"}\")[0].split(\";\").sort().join(\";\") +\n\t\t\"}\" +\n\t\t(value.split(\"}\")[1] ?? \"\")\n\t)\n}\n\nexport function stripFirstCharacter(value: string): string {\n\treturn value.substring(1)\n}\n\nexport function stripLastCharacter(value: string): string {\n\treturn value.substring(0, value.length - 1)\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {NumExp} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"exact\"\nconst description = `exact\n\n**paramètres**\nsoft = valeur numérique juste, mais pas sous la forme attendue\n`\n\nexport class ExactChecker extends CheckerAbstract {\n\tprivate isSoft: boolean\n\n\tconstructor(config?: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.EXACT\n\t\tthis.description = description\n\n\t\tthis.isSoft = this.config.includes(\"soft\")\n\t}\n\n\treadonly format = \"réponse sous forme exacte, réduite\"\n\n\toverride checkValue(value: string): string {\n\t\t// Le résultat est exactement ce qui est demandé\n\t\tconst stringAnswer = value.toString(),\n\t\t\tasciiAnswer = stringAnswer.startsWith(\"#\")\n\t\t\t\t? stringAnswer.substring(1)\n\t\t\t\t: stringAnswer\n\n\t\t// Parse the expected answer as a number\n\t\t// Replace \"sqrt\" by \"sqrt(\" and \")\" by \")\", then evaluate\n\t\tconst expectedExpression = this.answer.replace(/sqrt([0-9]+)/g, \"sqrt($1)\")\n\t\tconst givenExpression = asciiAnswer.replace(/sqrt([0-9]+)/g, \"sqrt($1)\")\n\n\t\t// Maybe with the reformating, the answers is exactly the same.\n\t\tif (expectedExpression === givenExpression) {\n\t\t\treturn  \"\"\n\t\t}\n\n\t\t// Parse the formated answers as a number\n\t\tconst expectedNumber = new NumExp(expectedExpression)\n\t\tconst givenNumber = new NumExp(givenExpression)\n\n\t\tif (expectedNumber.isValid && givenNumber.isValid) {\n\t\t\tif (\n\t\t\t\texpectedNumber.evaluate().toFixed(10) ===\n\t\t\t\tgivenNumber.evaluate().toFixed(10)\n\t\t\t) {\n\t\t\t\tif (this.isSoft) {\n\t\t\t\t\treturn  \"\"\n\t\t\t\t}\n\n\t\t\t\tconst message: string[] = [\n\t\t\t\t\t\"La réponse donnée est juste, mais pas sous la forme attendue.\",\n\t\t\t\t]\n\n\t\t\t\tif (value.includes(\"/sqrt\")) {\n\t\t\t\t\tmessage.push(\"Il y a encore une racine au dénominateur\")\n\t\t\t\t}\n\t\t\t\treturn message.join(\"<br/>\")\n\t\t\t}\n\t\t}\n\n\t\treturn  \"La réponse donnée n'est pas juste.\"\n\t}\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\r\nimport {stripFirstCharacter, stripLastCharacter} from \"../helperFunctions\";\r\nimport {ExactChecker} from \"./ExactChecker\";\r\nimport {CHECKERS} from \"../checker.config\";\r\n\r\nconst name = \"coord\"\r\nconst description = `coord,[paramètres]\r\n\r\n**paramètres**\r\n- nb= les coordonnées sont des nombres\r\n- frac= les coordonnées sont des fractions\r\n`\r\n\r\nexport class CoordChecker extends CheckerAbstract {\r\n\r\n    constructor(config?: string[] | string) {\r\n        super(config)\r\n        this.type = CHECKERS.COORDINATES\r\n        this.description = description\r\n\r\n        this.secondaryChecker = new ExactChecker()\r\n    }\r\n\r\n    readonly format = \"Coordonnées d'un point sous la forme \\\\((a;b)\\\\)\"\r\n\r\n    override checkFormat(value: string): string {\r\n        // Manque les parenthèses\r\n        if (value[0] !== \"(\" || value[value.length - 1] !== \")\") {\r\n            return \"des coordonnées commencent et se terminent par des parenthèses\"\r\n        }\r\n\r\n        return \"\"\r\n    }\r\n\r\n    override checkValue(value: string): string {\r\n\r\n        // On récupère les valeurs\r\n        const values = value.split(\";\"),\r\n            expectedValues = this.answer.split(\";\")\r\n\r\n        if (values.length === 1) {\r\n            return \"des coordonnées ont au moins deux valeurs, séparées par un \\\\(;\\\\)\"\r\n        }\r\n\r\n        if (values.length !== expectedValues.length) {\r\n            return \"la dimension de la coordonnées ne correspond pas\"\r\n        }\r\n\r\n        // remove the parentese from the first and last value.\r\n        values[0] = stripFirstCharacter(values[0])\r\n        values[values.length - 1] = stripLastCharacter(values[values.length - 1])\r\n\r\n        if (expectedValues[0].startsWith(\"(\")) {\r\n            expectedValues[0] = stripFirstCharacter(expectedValues[0])\r\n        }\r\n\r\n        if (expectedValues[expectedValues.length - 1].endsWith(\")\")) {\r\n            expectedValues[expectedValues.length - 1] = stripLastCharacter(expectedValues[expectedValues.length - 1])\r\n        }\r\n\r\n\r\n        // let eChecker = ExactChecker(config)\r\n        for (let i = 0; i < values.length; i++) {\r\n            const result = this.secondaryChecker?.check(expectedValues[i], values[i]) ?? {result: false, message: \"\"}\r\n            if (!result.result) {\r\n                return `la ${i === 0 ? \"1ère\" : (i + 1) + \"ème\"} coordonnée n'est pas juste.<br>${result.message}`\r\n            }\r\n        }\r\n\r\n        // tous les tests sont passés ! La réponse est donc juste\r\n        return \"\"\r\n    }\r\n\r\n}\r\n","\n// TODO: EquationChecker and CartesianChecker overlaps !!!!\n\nimport {CheckerAbstract} from \"../CheckerAbstract\";\nimport {Equation, Numeric} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"equation\"\nconst description = `equation,[paramètres]\n\n**paramètres**\n- r=réduit\n- c=canonique\n- sommet=forme du sommet\n- circle=forme centre rayon\n`\n\nexport class EquationChecker extends CheckerAbstract {\n\tprivate isCentreRayon: boolean\n\tprivate isReduced: boolean\n\tprivate isCanonical: boolean\n\tprivate isSommet: boolean\n\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.EQUATION\n\t\tthis.description = description\n\n\t\tthis.isReduced =\n\t\t\tthis.config.includes(\"r\") ||\n\t\t\tthis.config.includes(\"reduced\") ||\n\t\t\tthis.config.includes(\"re\")\n\t\tthis.isCanonical =\n\t\t\tthis.config.includes(\"c\") ||\n\t\t\tthis.config.includes(\"canonical\") ||\n\t\t\tthis.config.includes(\"ca\")\n\t\tthis.isSommet =\n\t\t\tthis.config.includes(\"s\") || this.config.includes(\"sommet\")\n\t\tthis.isCentreRayon =\n\t\t\tthis.config.includes(\"cercle\") || this.config.includes(\"circle\")\n\t}\n\n\tget format(): string {\n\t\tconst opts = []\n\n\t\tif (this.isCanonical) {\n\t\t\topts.push(\"canonique\")\n\t\t} else if (this.isCentreRayon) {\n\t\t\topts.push(\" (forme centre - rayon)\")\n\t\t} else if (this.isSommet) {\n\t\t\topts.push(\" (forme du sommet)\")\n\t\t}\n\n\t\tif (this.isReduced) {\n\t\t\topts.push(\"réduite\")\n\t\t}\n\n\t\treturn `équation ${opts.join(\", \")}`\n\t}\n\n\toverride checkFormat(value: string): string {\n\t\tif (!value.includes(\"=\")) {\n\t\t\treturn \"il manque un signe d'égalité.\"\n\t\t}\n\n\t\ttry {\n\t\t\tnew Equation(value)\n\n\t\t\treturn \"\"\n\t\t} catch {\n\t\t\treturn \"l'équation n'est pas correctement formée.\"\n\t\t}\n\n\t}\n\n\toverride checkValue(value: string): string {\n\n\t\tconst A = new Equation(value)\n\t\tconst Q = new Equation(this.answer)\n\n\t\t// Must be the same equation.\n\t\tconst A2 = A.clone().moveLeft(),\n\t\t\tQ2 = Q.clone().moveLeft()\n\t\tA2.simplify()\n\t\tQ2.simplify()\n\n\t\t// L'expression de gauche est soit égale, soit opposée.\n\t\tif (!A2.isLinearTo(Q2)) {\n\t\t\treturn \"l'équation n'est pas juste.\"\n\t\t}\n\n\t\tif (this.isCanonical) {\n\t\t\tif (!A.right.isZero() && !A.left.isZero()) {\n\t\t\t\treturn  \"l'équation n'est pas sous sa forme canonique.\"\n\t\t\t}\n\t\t}\n\n\t\tif (this.isCentreRayon) {\n\t\t\t// TODO: Check que c'est l'équation sous la forme centre - rayon.\n\t\t\t// x^2  + (y-b)^2 = r^2\n\t\t\t// (x-a)^2 + y^2 = r^2\n\t\t\t// x^2+y^2 = r^2\n\t\t\t// (x-a)^2 + (y-b)^2 = r^2\n\n\t\t\t// Must be a polynom of degree 2 in x and y.\n\t\t\tif (A.degree(\"x\").value !== 2 || A.degree(\"y\").value !== 2) {\n\t\t\t\treturn \"L'équation n'a pas les bons degrés.\"\n\t\t\t}\n\n\t\t\t// One part of the equation must be of degree zero.\n\t\t\tlet center = \"\"\n\n\t\t\tif (\n\t\t\t\tA.left.degree(\"x\").value === 2 &&\n\t\t\t\tA.right.degree(\"x\").isZero() &&\n\t\t\t\tA.left.degree(\"y\").value === 2 &&\n\t\t\t\tA.right.degree(\"y\").isZero()\n\t\t\t) {\n\t\t\t\tcenter = value.split(\"=\")[0]\n\t\t\t} else if (\n\t\t\t\tA.right.degree(\"x\").value === 2 &&\n\t\t\t\tA.left.degree(\"x\").isZero() &&\n\t\t\t\tA.right.degree(\"y\").value === 2 &&\n\t\t\t\tA.left.degree(\"y\").isZero()\n\t\t\t) {\n\t\t\t\tcenter = value.split(\"=\")[1]\n\t\t\t} else {\n\t\t\t\treturn \"L'équation n'est pas correctement formée pour la forme centre - rayon.\"\n\t\t\t}\n\n\t\t\t// radius should be ok and does not need more checks\n\t\t\t// center must be correctly formed.\n\t\t\t// Transform ^(2) into ^2\n\t\t\tcenter = center.replaceAll(\"^(2)\", \"^2\")\n\n\t\t\tif (\n\t\t\t\tcenter.match(/\\(x[+-][0-9/]+\\)\\^2\\+\\(y[+-][0-9/]+\\)\\^2/) ||\n\t\t\t\tcenter.match(/x\\^2\\+\\(y[+-][0-9/]+\\)\\^2/) ||\n\t\t\t\tcenter.match(/\\(x[+-][0-9/]+\\)\\^2\\+y\\^2/) ||\n\t\t\t\tcenter === \"x^2+y^2\" ||\n\t\t\t\tcenter === \"y^2+x^2\"\n\t\t\t) {\n\t\t\t\treturn \"\"\n\t\t\t} else {\n\t\t\t\treturn \"L'équation n'est pas dans le bon format.\"\n\t\t\t}\n\t\t}\n\n\t\tif (this.isSommet) {\n\t\t\t// Come from Polynom checker.\n\t\t\t// Left or right part must be correctly formed.\n\t\t\t// y = [a](x-b)^2[ + c]\n\t\t\t// y = [a]x^2[ + c]\n\t\t\tconst [left, right] = value.split(\"=\"),\n\t\t\t\t[eLeft, eRight] = this.answer.split(\"=\")\n\n\t\t\tconst polynomY = left === \"y\" ? left : right,\n\t\t\t\tpolynomSommet = left === \"y\" ? right : left,\n\t\t\t\texpectedSommet = eLeft === \"y\" ? eRight : eLeft\n\n\t\t\tif (polynomY !== \"y\") {\n\t\t\t\treturn \"Un côté de l'équation doit juste être (y)\"\n\t\t\t}\n\n\t\t\treturn this.secondaryChecker?.check(expectedSommet, polynomSommet).message ?? \"\"\n\t\t}\n\n\t\tif (this.isReduced) {\n\t\t\tconst lcmL = A.left.commonMonom().coefficient.value,\n\t\t\t\tlcmR = A.right.commonMonom().coefficient.value,\n\t\t\t\tlcm = Numeric.lcm(lcmL, lcmR)\n\n\t\t\tif (lcm !== 1) {\n\t\t\t\treturn \"l'équation n'est pas réduite.\"\n\t\t\t}\n\t\t}\n\n\t\t// If all tests passes, it is correct !\n\t\treturn \"\"\n\t}\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {splitAtSigns, splitIfOutsideParentheses} from \"../helperFunctions\";\nimport {Polynom} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"exp\"\nconst description = `exp,[paramètres]\n\n**paramètres**\naucun\n`\n\nexport class ExpChecker extends CheckerAbstract {\n    constructor(config?: string[] | string) {\n        super(config)\n        this.type = CHECKERS.EXPONENTIAL\n        this.description = description\n    }\n\n    readonly format = \"polynôme avec des exponentielles <br/>\\\\((x-3)e^{x^2-3}\\\\)\"\n\n    override checkValue(value: string): string {\n        // plusieurs possible:\n        // ae^(polynom)\n        // ae^(polynom) + be^(polynom)\n        // ae^(polynom) + be^(polynom) / ae^(polynom) + be^(polynom)\n\n        // on coupe en numérateur / dénominateur\n        // on recherche un endroit qui n'est pas entre parenthèse.\n        const [N, D] = splitIfOutsideParentheses(value, \"/\"),\n            [eN, eD] = splitIfOutsideParentheses(this.answer, \"/\")\n\n        if (D === undefined && eD !== undefined) {\n            return \"Un dénominateur est attendu...\"\n        }\n\n        if (D !== undefined && eD === undefined) {\n            return \"Aucun dénominateur n'est prévu dans cette réponse.\"\n        }\n\n        const resultatNumerateur = expCompare(eN, N)\n\n        if (resultatNumerateur !== \"\") return resultatNumerateur\n\n        // On contrôle les dénominateurs\n        if (D !== undefined && eD !== undefined) {\n            return expCompare(eD, D)\n        }\n\n        return \"\"\n    }\n\n}\n\n\nfunction expCompare(eValue: string, value: string): string {\n    if (eValue === value) {\n        return \"\"\n    }\n\n    // On contrôle maintenant les numérateurs\n    const elements = splitAtSigns(value),\n        expectedElements = splitAtSigns(eValue)\n\n    if (expectedElements.length !== elements.length) {\n        return \"Il n'y a pas le bon nombre d'éléments au numérateur\"\n    }\n\n    // Chaque élément est maintenant de la forme\n    // (polynom)e^(polynom)\n\n    // Préparation de tous les éléments sous la forme d'un tableau:\n    // [ {polynom, exponent} ]\n    const elementsArr: {\n        polynom: string,\n        exponent: string,\n        sort: string\n    }[] = elements.map(element => {\n        return displayPolynomForSorting(element)\n    }).sort((a, b) => {\n        return a.sort < b.sort ? 1 : -1\n    })\n\n    const expectedElementsArr: {\n        polynom: string,\n        exponent: string,\n        sort: string\n    }[] = expectedElements.map(element => {\n        return displayPolynomForSorting(element)\n    }).sort((a, b) => {\n        return a.sort < b.sort ? 1 : -1\n    })\n\n    // Tous les éléments sont \"alignés\"\n    let errors = 0\n    for (let i = 0; i < expectedElementsArr.length; i++) {\n        if (expectedElementsArr[i].sort !== elementsArr[i].sort) {\n            errors++\n        }\n    }\n    if (errors > 0) {\n        return `Il y a ${errors} élément${errors === 1 ? \"\" : \"s\"} qui ${errors === 1 ? \"est\" : \"sont\"} faux.`\n    }\n\n    return \"\"\n}\n\nfunction displayPolynomForSorting(element: string): { polynom: string, exponent: string, sort: string } {\n    const match = element.match(/^(\\S+)?(e\\^(\\S+))$/)\n\n    let poly1, poly2\n    if (match) {\n        try {\n            poly1 = new Polynom(match[1]).reorder().display\n        } catch {\n            poly1 = match[1] ? match[1] : \"\"\n        }\n        try {\n            poly2 = new Polynom(match[3]).reorder().display\n        } catch {\n            poly2 = match[3] ? match[3] : \"\"\n        }\n\n        return {\n            polynom: match[1],\n            exponent: match[3],\n            sort: poly1 + poly2,\n        }\n    }\n\n    let poly3\n    try {\n        poly3 = new Polynom(element).reorder().display\n    } catch {\n        poly3 = element\n    }\n    return {\n        polynom: element,\n        exponent: \"\",\n        sort: poly3\n    }\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {Fraction} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name=\"fraction\"\n\nconst description = `fraction,[paramètres]\n\n**paramètres**\n- r=réduit\n`\n\nexport class FractionChecker extends CheckerAbstract {\n    private expectReduced: boolean\n    constructor(config?:string[]|string) {\n        super(config)\n        this.type = CHECKERS.FRACTION\n        this.description = description\n\n        this.expectReduced = this.config.includes(\"r\") || this.config.includes(\"reduced\")\n    }\n\n    get format(): string {\n        const opts = []\n        if (this.expectReduced) {\n            opts.push(\"réduite\")\n        }\n\n        return `réponse sous forme de fraction ${opts.join(\",\")}`\n    }\n\n\toverride checkFormat(value: string): string {\n\t\ttry {\n\t\t\tnew Fraction(value)\n\t\t\treturn \"\"\n\t\t}catch {\n\t\t\treturn \"La fraction n'est pas formatée correctement.\"\n\t\t}\n\t}\n\n\toverride checkValue(value: string): string {\n\n\t\tconst FAnswer = new Fraction(value)\n\t\tconst FExpected = new Fraction(this.answer)\n\n\t\tif(FAnswer.isNotEqual(FExpected)){\n\t\t\treturn  \"La réponse donnée n'est pas juste.\"\n\t\t}\n\n\t\tif(FAnswer.denominator<0){\n\t\t\treturn  \"Le dénominateur doit être positif.\"\n\t\t}\n\n\t\tif(!FAnswer.isReduced() && this.expectReduced){\n\t\t\treturn  \"La fraction n'est pas réduite.\"\n\t\t}\n\n\t\treturn \"\"\n\t}\n\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\r\nimport {Polynom} from \"pimath\";\r\nimport {CHECKERS} from \"../checker.config\";\r\n\r\nconst name = \"function\"\r\nconst description = `function|fn,[paramètres]\r\n\r\n**paramètres**\r\n- d=développé\r\n`\r\n\r\nexport class FunctionChecker extends CheckerAbstract {\r\n    private isDevelopped: boolean\r\n    constructor(config:string[]|string) {\r\n        super(config)\r\n        this.type = CHECKERS.FUNCTION\r\n        this.description = description\r\n\r\n        this.isDevelopped = (this.config.includes(\"d\") || this.config.includes(\"developped\") || this.config.includes(\"dev\"))\r\n    }\r\n\r\n    get format(): string {\r\n        const opts = []\r\n\r\n        if (this.isDevelopped) {\r\n            // TODO: develop function does not work for now...\r\n            opts.push(\"développée\")\r\n        }\r\n\r\n        return `fonction ${opts.join(\", \")}`\r\n    }\r\n\r\n    override checkValue(value: string): string {\r\n\t\tconst A = new Polynom(value),\r\n\t\t\tQ = new Polynom(this.answer)\r\n\r\n\t\t// Must be the same equation.\r\n\t\tif(!A.isEqual(Q)){\r\n\t\t\treturn  \"la fonction n'est pas juste.\"\r\n\t\t}\r\n\r\n\t\treturn \"\"\r\n\t}\r\n\r\n}\r\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"input\"\nconst description = `input,[paramètres]\n\n**paramètres**\n- checker\n`\n\nexport class InputChecker extends CheckerAbstract {\n\tconstructor(config?: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.INPUT\n\t\tthis.description = description\n\t}\n\n\n\treadonly format = \"Réponse textuelle\"\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {NumExp} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"log\"\nconst description = `log,[paramètres]\n\n**paramètres**\n`\n\nexport class LogChecker extends CheckerAbstract {\n    constructor(config?: string[] | string) {\n        super(config)\n        this.type = CHECKERS.LOGARITHM\n        this.description = description\n    }\n\n    readonly format = \"réponse sous la forme \\\\(\\\\log(a)-3/5\\\\)\"\n\n    override checkFormat(value: string): string {\n        // Il ne peut pas y avoir de point.\n        if (value.includes(\".\")) {\n            return \"La réponse n'est pas sous forme exact (nombres entiers)\"\n        }\n\n        const ND: string[] = value.split(\"/\")\n        if (ND.length > 2) {\n            // TODO: on devrait autoriser les fractions dans le log - ne pas les compter si c'est entre deux parenthèses...\n\n            return \"La réponse ne peut contenir qu'une seule barre de fraction.\"\n        }\n\n        return \"\"\n    }\n\n    override checkValue(value: string): string {\n\n        // TODO: asciiAnswer = stringAnswer.startsWith(\"#\") ? stringAnswer.substring(1) : stringAnswer\n\n        const ND: string[] = value.split(\"/\")\n        // Il ne doit y avoir qu'une fraction.\n        let userN, userD\n        try {\n            userN = new NumExp(ND[0]).evaluate()\n        } catch {\n            return `${ND.length === 1 ? \"La réponse\" : \"Le numérateur\"} n'est pas correctement formé.`\n        }\n        if (ND.length === 2) {\n            try {\n                userD = new NumExp(ND[1]).evaluate()\n            } catch {\n                return \"Le dénominateur n'est pas correctement formé.\"\n            }\n        } else {\n            userD = 1\n        }\n\n\n        const [expN, expD] = this.answer.split(\"/\")\n        let expNValue: number, expDValue: number\n\n        try {\n            expNValue = new NumExp(expN).evaluate()\n        } catch {\n            // Do nothing\n            expNValue = 1\n        }\n        if (expD === undefined) {\n            expDValue = 1\n        } else {\n            try {\n                expDValue = new NumExp(expD).evaluate()\n            } catch {\n                // Do nothing\n                expDValue = 1\n            }\n        }\n\n\n        const answerDecimal = userN / userD,\n            expectedDecimal = expNValue / expDValue\n\n        if (answerDecimal.toFixed(8) !== expectedDecimal.toFixed(8)) {\n            return \"La réponse sous forme exacte ne donne pas la bonne valeur.\"\n        }\n\n        return \"\"\n    }\n\n\n}\n\n\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"number\",\n\tdescription = `number|nb,[paramètres]\n\n**paramètres**\n- [1,2,3,4,...]: nombre de chiffres après la virgule\n- s (strict): significatif (donc 2.3 ne passe pas pour 2.30)\n`\n\nexport class NumberChecker extends CheckerAbstract {\n\tprivate readonly _isStrict: boolean\n\n\tconstructor(config?: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.NUMBER\n\t\tthis.description = description\n\n\t\tif (isNaN(+this.config[0])) {\n\t\t\tthis.config = [\"0\", ...this.config]\n\t\t}\n\n\t\tthis._isStrict = this.config.includes(\"s\")\n\t}\n\n\tget format(): string {\n\t\treturn +this.config[0] === 0\n\t\t\t? \"réponse numérique\"\n\t\t\t: `réponse avec ${this.config[0]} chiffre(s) après la virgule`\n\t}\n\n\toverride checkFormat(value: string): string {\n\t\tif (isNaN(+value)) {\n\t\t\treturn \"Veuillez entrer un nombre\"\n\t\t}\n\n\t\treturn \"\"\n\t}\n\n\toverride checkValue(value: string): string {\n\t\tconst nbDigits = +this.config[0],\n\t\t\tnbExpectedDigits = (this.answer.split(\".\")[1] || []).length\n\n\t\tif (nbExpectedDigits !== nbDigits && this._isStrict) {\n\t\t\treturn \"Problème dans la configuration du checker ou de la réponse\"\n\t\t}\n\n\t\tif (!this._isStrict) {\n\t\t\tif (+value === +this.answer) {\n\t\t\t\treturn \"\"\n\t\t\t}\n\t\t}\n\n\t\t// Nombre de décimales de la réponse\n\t\tconst crtDigits: string = value.split(\".\")[1] || \"\"\n\n\t\t// Le nombre de chiffres après la virgule n'est pas juste\n\t\tif (crtDigits.length !== nbDigits) {\n\t\t\treturn `Il faut ${nbDigits} chiffre(s) après la virgule.`\n\t\t}\n\n\t\t// Le dernier chiffre n'est pas juste - il s'agit peut être d'un problème d'arrondi ?\n\t\tconst lastDigit = +crtDigits[crtDigits.length - 1],\n\t\t\tlastExpectedDigit = +this.answer[this.answer.length - 1]\n\t\tif (Math.abs(lastDigit - lastExpectedDigit) === 1) {\n\t\t\treturn \"Peut être un problème d'arrondi ?\"\n\t\t}\n\n\t\treturn\t\"La réponse n'est pas juste.\"\n\t}\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {ExpChecker} from \"./ExpChecker\";\nimport {LogChecker} from \"./LogChecker\";\nimport {PolynomChecker} from \"./PolynomChecker\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"primitive\"\nconst description = `primitive,[paramètres]\n\n**paramètres**\naucun\n`\n\nexport class PrimitiveChecker extends CheckerAbstract {\n\tconstructor(config?: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.PRIMITIVE\n\t\tthis.description = description\n\t}\n\n\treadonly format = \"primitive d'une fonction\"\n\n\n\toverride checkValue(value: string): string {\n\t\tlet subchk\n\t\tif (value.includes(\"e\")) {\n\t\t\tsubchk = new ExpChecker(this._config)\n\t\t} else if (value.includes('ln')) {\n\t\t\tsubchk = new LogChecker(this._config)\n\t\t} else {\n\t\t\tsubchk = new PolynomChecker(this._config)\n\t\t}\n\n\t\t// On vérifie sans la constante !\n\t\tconst result = subchk.check(\n\t\t\tthis.answer.replaceAll('+c', ''),\n\t\t\tvalue.replaceAll('+c', '')\n\t\t)\n\n\t\tif (!result.result) {\n\t\t\treturn result.message\n\t\t}\n\n\t\tconst s = value.split('+c').length\n\t\tif (s !== 2) {\n\t\t\treturn s === 1 ? \"il manque la constante.\" : `il y a ${s - 1} constantes...`\n\t\t}\n\n\t\treturn result.message\n\t}\n}\n","// TODO : Rational checker is not working - convert ot Polyfactors !\nimport {CheckerAbstract} from \"../CheckerAbstract\";\nimport {PolyFactor} from \"pimath\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"rational\"\nconst description = `rational,[paramètres]\n\n**paramètres**\n- f=factorisée\n- d=développée\n- r=réduite\n`\n\nexport class RationalChecker extends CheckerAbstract {\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.RATIONAL\n\t\tthis.description = description\n\t}\n\n\tget format(): string {\n\t\tconst opts = []\n\n\t\tif (this.config.includes(\"f\") || this.config.includes(\"factors\")) {\n\t\t\topts.push(\"factorisée\")\n\t\t} else if (this.config.includes(\"d\") || this.config.includes(\"develop\")) {\n\t\t\topts.push(\"développée\")\n\t\t}\n\t\tif (this.config.includes(\"r\") || this.config.includes(\"reduced\")) {\n\t\t\topts.push(\"réduite\")\n\t\t}\n\n\t\treturn `fraction rationnelle ${opts.join(\", \")}`\n\t}\n\n\n\toverride checkValue(value: string): string {\n\t\tif (this.answer === '!!' || value === '!!') {\n\t\t\treturn \"Il semble qu'il y ait une erreur quelque part...\"\n\t\t}\n\n\n\t\tlet [num, den] = value.split(\"/\")\n\t\tif (den === undefined) den = \"1\"\n\t\tlet [expectedNum, expectedDen] = this.answer.split(\"/\")\n\t\tif (expectedDen === undefined) expectedDen = \"1\"\n\n\t\tconst givenRationnal = new PolyFactor().fromPolynom(num, den),\n\t\t\tgivenRationnalReduced = new PolyFactor().fromPolynom(num, den).reduce(),\n\t\t\texpectedRationnal = new PolyFactor().fromPolynom(expectedNum, expectedDen).reduce()\n\n\t\t// Check if the reduced version of numerator and denominator are the same.\n\t\tif (!givenRationnalReduced.numerator.isEqual(expectedRationnal.numerator)) {\n\t\t\treturn \"le numérateur ne correspond pas à la réponse\"\n\t\t}\n\t\tif (!givenRationnalReduced.denominator.isEqual(expectedRationnal.denominator)) {\n\t\t\treturn \"le dénominateur ne correspond pas à la réponse\"\n\t\t}\n\n\t\t// TODO: RationalCheck must detect if it's factorized, developped or reduced !\n\t\t// if (this.config.includes(\"f\") || this.config.includes(\"factors\")) {\n\t\t//     if (!givenRationnal.numerator.isFactorized(num)) {\n\t\t//         return {\n\t\t//             result: false,\n\t\t//             message: \"le numérateur n'est pas factorisé\"\n\t\t//         }\n\t\t//     }\n\t\t//     if (!givenRationnal.denominator.isFactorized(den)) {\n\t\t//         return {\n\t\t//             result: false,\n\t\t//             message: \"le dénominateur n'est pas factorisé\"\n\t\t//         }\n\t\t//     }\n\t\t// }\n\t\t//\n\n\t\tif (this.config.includes(\"d\") || this.config.includes(\"develop\")) {\n\t\t\tconst num = givenRationnal.numerator\n\t\t\tif (num.factors.length > 1 || !num.factors[1].power.isOne()) {\n\t\t\t\treturn \"le numérateur n'est pas développé\"\n\t\t\t}\n\n\t\t\tconst den = givenRationnal.denominator\n\t\t\tif (den.factors.length > 1 || !den.factors[1].power.isOne()) {\n\t\t\t\treturn \"le dénominateur n'est pas développé\"\n\t\t\t}\n\t\t}\n\n\t\t// Check if it is reduced.\n\t\tif (this.config.includes(\"r\") || this.config.includes(\"reduced\")) {\n\t\t\tif (!givenRationnal.numerator.isEqual(givenRationnalReduced.numerator)) {\n\t\t\t\treturn \"la fraction rationnelle n'est pas réduite !\"\n\t\t\t}\n\t\t}\n\n\t\t// If all tests passes, it is correct !\n\t\treturn \"\"\n\n\t}\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {NumberChecker} from \"./NumberChecker\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"scientific\"\nconst description = `scientific|scn,[paramètres]\n\n//TODO: scn: mode stricte\n**paramètres**\n- [1,2,3,4,...]: nombre de chiffre après la virgule\n- s: strict (1.2 ne passe pas pour 1.20)\n`\n\nexport class ScientificChecker extends CheckerAbstract {\n    private digits: number\n    constructor(config:string[]|string) {\n        super(config)\n        this.type = CHECKERS.SCIENTIFIC\n        this.description = description\n        this.digits = isNaN(+this.config[0])?0:+this.config[0]\n\n\t\tthis.secondaryChecker = new NumberChecker([this.digits.toString()])\n    }\n\n\n    get format(): string {\n        return this.digits ?\n            \"réponse en notation scientifique\" :\n            `réponse en notation scientifique à ${this.digits} chiffre(s) significatif(s)`\n    }\n\n\n\toverride checkValue(value: string): string {\n\t\t// On vérifie que le format est bien de type scientifique.\n\t\tconst PS = +(value.split(\"*\")[0]),\n\t\t\tOG = +(value.split(\"10^\")[1] || 0),\n\t\t\tePS = +(this.answer.split(\"*\")[0]),\n\t\t\teOG = +(this.answer.split(\"10^\")[1] || 0)\n\n\t\t// On vérifie la partie significative\n\t\tif (Math.abs(PS) < 1 || Math.abs(PS) >= 10) {\n\t\t\treturn \"la partie significative n'est pas entre 1 et 10 (non compris)\"\n\t\t}\n\n\t\tif (PS !== ePS) {\n\t\t\treturn \"erreur dans la partie significative: \" +\n\t\t\t\tthis.secondaryChecker?.check(ePS.toString(), PS.toString()).message\n\t\t}\n\n\t\tif (!value.includes(\"*10^\")) {\n\t\t\treturn \"le format de réponse n'est pas une notation scientifique.\"\n\t\t}\n\n\t\t// On vérifie l'ordre de grandeur.\n\t\tif (OG !== eOG) {\n\t\t\treturn \"l'ordre de grandeur n'est pas juste...\"\n\t\t}\n\n\t\treturn \"\"\n\t}\n\n}\n","// @ts-nocheck\nexport default class AsciiMathParser {\n\tconstructor() {\n\t\tthis.decimalsign = '\\\\.'\n\n\t\tthis.setup_symbols()\n\t\tthis.sort_symbols()\n\t}\n\n\tsetup_symbols() {\n\t\tthis.greek_letters = ['alpha', 'beta', 'gamma', 'Gamma', 'delta', 'Delta', 'epsilon', 'varepsilon', 'zeta', 'eta', 'theta', 'Theta', 'vartheta', 'iota', 'kappa', 'lambda', 'Lambda', 'mu', 'nu', 'xi', 'Xi', 'pi', 'Pi', 'rho', 'sigma', 'Sigma', 'tau', 'upsilon', 'phi', 'Phi', 'varphi', 'chi', 'psi', 'Psi', 'omega', 'Omega']\n\n\t\tthis.relations = [\n\t\t\t{\"asciimath\":\":=\",\"tex\":\":=\"},\n\t\t\t{\"asciimath\":\":|:\",\"tex\":\"\\\\mid\"},\n\t\t\t{\"asciimath\":\"=>\",\"tex\":\"\\\\Rightarrow\"},\n\t\t\t{\"asciimath\":\"approx\",\"tex\":\"\\\\approx\"},\n\t\t\t{\"asciimath\":\"~~\",\"tex\":\"\\\\approx\"},\n\t\t\t{\"asciimath\":\"cong\",\"tex\":\"\\\\cong\"},\n\t\t\t{\"asciimath\":\"~=\",\"tex\":\"\\\\cong\"},\n\t\t\t{\"asciimath\":\"equiv\",\"tex\":\"\\\\equiv\"},\n\t\t\t{\"asciimath\":\"-=\",\"tex\":\"\\\\equiv\"},\n\t\t\t{\"asciimath\":\"exists\",\"tex\":\"\\\\exists\"},\n\t\t\t{\"asciimath\":\"EE\",\"tex\":\"\\\\exists\"},\n\t\t\t{\"asciimath\":\"forall\",\"tex\":\"\\\\forall\"},\n\t\t\t{\"asciimath\":\"AA\",\"tex\":\"\\\\forall\"},\n\t\t\t{\"asciimath\":\">=\",\"tex\":\"\\\\ge\"},\n\t\t\t{\"asciimath\":\"ge\",\"tex\":\"\\\\ge\"},\n\t\t\t{\"asciimath\":\"gt=\",\"tex\":\"\\\\geq\"},\n\t\t\t{\"asciimath\":\"geq\",\"tex\":\"\\\\geq\"},\n\t\t\t{\"asciimath\":\"gt\",\"tex\":\"\\\\gt\"},\n\t\t\t{\"asciimath\":\"in\",\"tex\":\"\\\\in\"},\n\t\t\t{\"asciimath\":\"<=\",\"tex\":\"\\\\le\"},\n\t\t\t{\"asciimath\":\"le\",\"tex\":\"\\\\le\"},\n\t\t\t{\"asciimath\":\"lt=\",\"tex\":\"\\\\leq\"},\n\t\t\t{\"asciimath\":\"leq\",\"tex\":\"\\\\leq\"},\n\t\t\t{\"asciimath\":\"lt\",\"tex\":\"\\\\lt\"},\n\t\t\t{\"asciimath\":\"models\",\"tex\":\"\\\\models\"},\n\t\t\t{\"asciimath\":\"|==\",\"tex\":\"\\\\models\"},\n\t\t\t{\"asciimath\":\"!=\",\"tex\":\"\\\\ne\"},\n\t\t\t{\"asciimath\":\"ne\",\"tex\":\"\\\\ne\"},\n\t\t\t{\"asciimath\":\"notin\",\"tex\":\"\\\\notin\"},\n\t\t\t{\"asciimath\":\"!in\",\"tex\":\"\\\\notin\"},\n\t\t\t{\"asciimath\":\"prec\",\"tex\":\"\\\\prec\"},\n\t\t\t{\"asciimath\":\"-lt\",\"tex\":\"\\\\prec\"},\n\t\t\t{\"asciimath\":\"-<\",\"tex\":\"\\\\prec\"},\n\t\t\t{\"asciimath\":\"preceq\",\"tex\":\"\\\\preceq\"},\n\t\t\t{\"asciimath\":\"-<=\",\"tex\":\"\\\\preceq\"},\n\t\t\t{\"asciimath\":\"propto\",\"tex\":\"\\\\propto\"},\n\t\t\t{\"asciimath\":\"prop\",\"tex\":\"\\\\propto\"},\n\t\t\t{\"asciimath\":\"subset\",\"tex\":\"\\\\subset\"},\n\t\t\t{\"asciimath\":\"sub\",\"tex\":\"\\\\subset\"},\n\t\t\t{\"asciimath\":\"subseteq\",\"tex\":\"\\\\subseteq\"},\n\t\t\t{\"asciimath\":\"sube\",\"tex\":\"\\\\subseteq\"},\n\t\t\t{\"asciimath\":\"succ\",\"tex\":\"\\\\succ\"},\n\t\t\t{\"asciimath\":\">-\",\"tex\":\"\\\\succ\"},\n\t\t\t{\"asciimath\":\"succeq\",\"tex\":\"\\\\succeq\"},\n\t\t\t{\"asciimath\":\">-=\",\"tex\":\"\\\\succeq\"},\n\t\t\t{\"asciimath\":\"supset\",\"tex\":\"\\\\supset\"},\n\t\t\t{\"asciimath\":\"sup\",\"tex\":\"\\\\supset\"},\n\t\t\t{\"asciimath\":\"supseteq\",\"tex\":\"\\\\supseteq\"},\n\t\t\t{\"asciimath\":\"supe\",\"tex\":\"\\\\supseteq\"},\n\t\t\t{\"asciimath\":\"vdash\",\"tex\":\"\\\\vdash\"},\n\t\t\t{\"asciimath\":\"|--\",\"tex\":\"\\\\vdash\"},\n\t\t]\n\n\t\tthis.constants = [\n\t\t\t{\"asciimath\":\"dt\",\"tex\":\"dt\"},\n\t\t\t{\"asciimath\":\"dx\",\"tex\":\"dx\"},\n\t\t\t{\"asciimath\":\"dy\",\"tex\":\"dy\"},\n\t\t\t{\"asciimath\":\"dz\",\"tex\":\"dz\"},\n\t\t\t{\"asciimath\":\"prime\",\"tex\":\"'\"},\n\t\t\t{\"asciimath\":\"implies\",\"tex\":\"\\\\implies\"},\n\t\t\t{\"asciimath\":\"epsi\",\"tex\":\"\\\\epsilon\"},\n\t\t\t{\"asciimath\":\"leftrightarrow\",\"tex\":\"\\\\leftrightarrow\"},\n\t\t\t{\"asciimath\":\"Leftrightarrow\",\"tex\":\"\\\\Leftrightarrow\"},\n\t\t\t{\"asciimath\":\"rightarrow\",\"tex\":\"\\\\rightarrow\"},\n\t\t\t{\"asciimath\":\"Rightarrow\",\"tex\":\"\\\\Rightarrow\"},\n\t\t\t{\"asciimath\":\"backslash\",\"tex\":\"\\\\backslash\"},\n\t\t\t{\"asciimath\":\"leftarrow\",\"tex\":\"\\\\leftarrow\"},\n\t\t\t{\"asciimath\":\"Leftarrow\",\"tex\":\"\\\\Leftarrow\"},\n\t\t\t{\"asciimath\":\"setminus\",\"tex\":\"\\\\setminus\"},\n\t\t\t{\"asciimath\":\"bigwedge\",\"tex\":\"\\\\bigwedge\"},\n\t\t\t{\"asciimath\":\"diamond\",\"tex\":\"\\\\diamond\"},\n\t\t\t{\"asciimath\":\"bowtie\",\"tex\":\"\\\\bowtie\"},\n\t\t\t{\"asciimath\":\"bigvee\",\"tex\":\"\\\\bigvee\"},\n\t\t\t{\"asciimath\":\"bigcap\",\"tex\":\"\\\\bigcap\"},\n\t\t\t{\"asciimath\":\"bigcup\",\"tex\":\"\\\\bigcup\"},\n\t\t\t{\"asciimath\":\"square\",\"tex\":\"\\\\square\"},\n\t\t\t{\"asciimath\":\"lamda\",\"tex\":\"\\\\lambda\"},\n\t\t\t{\"asciimath\":\"Lamda\",\"tex\":\"\\\\Lambda\"},\n\t\t\t{\"asciimath\":\"aleph\",\"tex\":\"\\\\aleph\"},\n\t\t\t{\"asciimath\":\"angle\",\"tex\":\"\\\\angle\"},\n\t\t\t{\"asciimath\":\"frown\",\"tex\":\"\\\\frown\"},\n\t\t\t{\"asciimath\":\"qquad\",\"tex\":\"\\\\qquad\"},\n\t\t\t{\"asciimath\":\"cdots\",\"tex\":\"\\\\cdots\"},\n\t\t\t{\"asciimath\":\"vdots\",\"tex\":\"\\\\vdots\"},\n\t\t\t{\"asciimath\":\"ddots\",\"tex\":\"\\\\ddots\"},\n\t\t\t{\"asciimath\":\"cdot\",\"tex\":\"\\\\cdot\"},\n\t\t\t{\"asciimath\":\"star\",\"tex\":\"\\\\star\"},\n\t\t\t{\"asciimath\":\"|><|\",\"tex\":\"\\\\bowtie\"},\n\t\t\t{\"asciimath\":\"circ\",\"tex\":\"\\\\circ\"},\n\t\t\t{\"asciimath\":\"oint\",\"tex\":\"\\\\oint\"},\n\t\t\t{\"asciimath\":\"grad\",\"tex\":\"\\\\nabla\"},\n\t\t\t{\"asciimath\":\"quad\",\"tex\":\"\\\\quad\"},\n\t\t\t{\"asciimath\":\"uarr\",\"tex\":\"\\\\uparrow\"},\n\t\t\t{\"asciimath\":\"darr\",\"tex\":\"\\\\downarrow\"},\n\t\t\t{\"asciimath\":\"downarrow\",\"tex\":\"\\\\downarrow\"},\n\t\t\t{\"asciimath\":\"rarr\",\"tex\":\"\\\\rightarrow\"},\n\t\t\t{\"asciimath\":\">->>\",\"tex\":\"\\\\twoheadrightarrowtail\"},\n\t\t\t{\"asciimath\":\"larr\",\"tex\":\"\\\\leftarrow\"},\n\t\t\t{\"asciimath\":\"harr\",\"tex\":\"\\\\leftrightarrow\"},\n\t\t\t{\"asciimath\":\"rArr\",\"tex\":\"\\\\Rightarrow\"},\n\t\t\t{\"asciimath\":\"lArr\",\"tex\":\"\\\\Leftarrow\"},\n\t\t\t{\"asciimath\":\"hArr\",\"tex\":\"\\\\Leftrightarrow\"},\n\t\t\t{\"asciimath\":\"ast\",\"tex\":\"\\\\ast\"},\n\t\t\t{\"asciimath\":\"***\",\"tex\":\"\\\\star\"},\n\t\t\t{\"asciimath\":\"|><\",\"tex\":\"\\\\ltimes\"},\n\t\t\t{\"asciimath\":\"><|\",\"tex\":\"\\\\rtimes\"},\n\t\t\t{\"asciimath\":\"^^^\",\"tex\":\"\\\\bigwedge\"},\n\t\t\t{\"asciimath\":\"vvv\",\"tex\":\"\\\\bigvee\"},\n\t\t\t{\"asciimath\":\"cap\",\"tex\":\"\\\\cap\"},\n\t\t\t{\"asciimath\":\"nnn\",\"tex\":\"\\\\bigcap\"},\n\t\t\t{\"asciimath\":\"cup\",\"tex\":\"\\\\cup\"},\n\t\t\t{\"asciimath\":\"uuu\",\"tex\":\"\\\\bigcup\"},\n\t\t\t{\"asciimath\":\"not\",\"tex\":\"\\\\neg\"},\n\t\t\t{\"asciimath\":\"<=>\",\"tex\":\"\\\\Leftrightarrow\"},\n\t\t\t{\"asciimath\":\"_|_\",\"tex\":\"\\\\bot\"},\n\t\t\t{\"asciimath\":\"bot\",\"tex\":\"\\\\bot\"},\n\t\t\t{\"asciimath\":\"int\",\"tex\":\"\\\\int\"},\n\t\t\t{\"asciimath\":\"del\",\"tex\":\"\\\\partial\"},\n\t\t\t{\"asciimath\":\"...\",\"tex\":\"\\\\ldots\"},\n\t\t\t{\"asciimath\":\"/_\\\\\",\"tex\":\"\\\\triangle\"},\n\t\t\t{\"asciimath\":\"|__\",\"tex\":\"\\\\lfloor\"},\n\t\t\t{\"asciimath\":\"__|\",\"tex\":\"\\\\rfloor\"},\n\t\t\t{\"asciimath\":\"dim\",\"tex\":\"\\\\dim\"},\n\t\t\t{\"asciimath\":\"mod\",\"tex\":\"\\\\operatorname{mod}\"},\n\t\t\t{\"asciimath\":\"lub\",\"tex\":\"\\\\operatorname{lub}\"},\n\t\t\t{\"asciimath\":\"glb\",\"tex\":\"\\\\operatorname{glb}\"},\n\t\t\t{\"asciimath\":\">->\",\"tex\":\"\\\\rightarrowtail\"},\n\t\t\t{\"asciimath\":\"->>\",\"tex\":\"\\\\twoheadrightarrow\"},\n\t\t\t{\"asciimath\":\"|->\",\"tex\":\"\\\\mapsto\"},\n\t\t\t{\"asciimath\":\"lim\",\"tex\":\"\\\\lim\"},\n\t\t\t{\"asciimath\":\"Lim\",\"tex\":\"\\\\operatorname{Lim}\"},\n\t\t\t{\"asciimath\":\"and\",\"tex\":\"\\\\quad\\\\text{and}\\\\quad\"},\n\t\t\t{\"asciimath\":\"**\",\"tex\":\"\\\\ast\"},\n\t\t\t{\"asciimath\":\"//\",\"tex\":\"/\"},\n\t\t\t{\"asciimath\":\"\\\\\",\"tex\":\"\\\\,\"},\n\t\t\t{\"asciimath\":\"\\\\\\\\\",\"tex\":\"\\\\backslash\"},\n\t\t\t{\"asciimath\":\"xx\",\"tex\":\"\\\\times\"},\n\t\t\t{\"asciimath\":\"-:\",\"tex\":\"\\\\div\"},\n\t\t\t{\"asciimath\":\"o+\",\"tex\":\"\\\\oplus\"},\n\t\t\t{\"asciimath\":\"ox\",\"tex\":\"\\\\otimes\"},\n\t\t\t{\"asciimath\":\"o.\",\"tex\":\"\\\\odot\"},\n\t\t\t{\"asciimath\":\"^\",\"tex\":\"\\\\hat{}\"},\n\t\t\t{\"asciimath\":\"_\",\"tex\":\"\\\\_\"},\n\t\t\t{\"asciimath\":\"^^\",\"tex\":\"\\\\wedge\"},\n\t\t\t{\"asciimath\":\"vv\",\"tex\":\"\\\\vee\"},\n\t\t\t{\"asciimath\":\"nn\",\"tex\":\"\\\\cap\"},\n\t\t\t{\"asciimath\":\"uu\",\"tex\":\"\\\\cup\"},\n\t\t\t{\"asciimath\":\"TT\",\"tex\":\"\\\\top\"},\n\t\t\t{\"asciimath\":\"+-\",\"tex\":\"\\\\pm\"},\n\t\t\t{\"asciimath\":\"O/\",\"tex\":\"\\\\emptyset\"},\n\t\t\t{\"asciimath\":\"oo\",\"tex\":\"\\\\infty\"},\n\t\t\t{\"asciimath\":\":.\",\"tex\":\"\\\\therefore\"},\n\t\t\t{\"asciimath\":\":'\",\"tex\":\"\\\\because\"},\n\t\t\t{\"asciimath\":\"/_\",\"tex\":\"\\\\angle\"},\n\t\t\t{\"asciimath\":\"|~\",\"tex\":\"\\\\lceil\"},\n\t\t\t{\"asciimath\":\"~|\",\"tex\":\"\\\\rceil\"},\n\t\t\t{\"asciimath\":\"CC\",\"tex\":\"\\\\mathbb{C}\"},\n\t\t\t{\"asciimath\":\"NN\",\"tex\":\"\\\\mathbb{N}\"},\n\t\t\t{\"asciimath\":\"QQ\",\"tex\":\"\\\\mathbb{Q}\"},\n\t\t\t{\"asciimath\":\"RR\",\"tex\":\"\\\\mathbb{R}\"},\n\t\t\t{\"asciimath\":\"ZZ\",\"tex\":\"\\\\mathbb{Z}\"},\n\t\t\t{\"asciimath\":\"->\",\"tex\":\"\\\\to\"},\n\t\t\t{\"asciimath\":\"or\",\"tex\":\"\\\\quad\\\\text{or}\\\\quad\"},\n\t\t\t{\"asciimath\":\"if\",\"tex\":\"\\\\quad\\\\text{if}\\\\quad\"},\n\t\t\t{\"asciimath\":\"iff\", \"tex\":\"\\\\iff\"},\n\t\t\t{\"asciimath\":\"*\",\"tex\":\"\\\\cdot\"},\n\t\t\t{\"asciimath\":\"@\",\"tex\":\"\\\\circ\"},\n\t\t\t{\"asciimath\":\"%\",\"tex\":\"\\\\%\"},\n\t\t\t{\"asciimath\":\"boxempty\",\"tex\":\"\\\\square\"},\n\t\t\t{\"asciimath\":\"lambda\",\"tex\":\"\\\\lambda\"},\n\t\t\t{\"asciimath\":\"Lambda\",\"tex\":\"\\\\Lambda\"},\n\t\t\t{\"asciimath\":\"nabla\",\"tex\":\"\\\\nabla\"},\n\t\t\t{\"asciimath\":\"uparrow\",\"tex\":\"\\\\uparrow\"},\n\t\t\t{\"asciimath\":\"downarrow\",\"tex\":\"\\\\downarrow\"},\n\t\t\t{\"asciimath\":\"twoheadrightarrowtail\",\"tex\":\"\\\\twoheadrightarrowtail\"},\n\t\t\t{\"asciimath\":\"ltimes\",\"tex\":\"\\\\ltimes\"},\n\t\t\t{\"asciimath\":\"rtimes\",\"tex\":\"\\\\rtimes\"},\n\t\t\t{\"asciimath\":\"neg\",\"tex\":\"\\\\neg\"},\n\t\t\t{\"asciimath\":\"partial\",\"tex\":\"\\\\partial\"},\n\t\t\t{\"asciimath\":\"ldots\",\"tex\":\"\\\\ldots\"},\n\t\t\t{\"asciimath\":\"triangle\",\"tex\":\"\\\\triangle\"},\n\t\t\t{\"asciimath\":\"lfloor\",\"tex\":\"\\\\lfloor\"},\n\t\t\t{\"asciimath\":\"rfloor\",\"tex\":\"\\\\rfloor\"},\n\t\t\t{\"asciimath\":\"rightarrowtail\",\"tex\":\"\\\\rightarrowtail\"},\n\t\t\t{\"asciimath\":\"twoheadrightarrow\",\"tex\":\"\\\\twoheadrightarrow\"},\n\t\t\t{\"asciimath\":\"mapsto\",\"tex\":\"\\\\mapsto\"},\n\t\t\t{\"asciimath\":\"times\",\"tex\":\"\\\\times\"},\n\t\t\t{\"asciimath\":\"div\",\"tex\":\"\\\\div\"},\n\t\t\t{\"asciimath\":\"divide\",\"tex\":\"\\\\div\"},\n\t\t\t{\"asciimath\":\"oplus\",\"tex\":\"\\\\oplus\"},\n\t\t\t{\"asciimath\":\"otimes\",\"tex\":\"\\\\otimes\"},\n\t\t\t{\"asciimath\":\"odot\",\"tex\":\"\\\\odot\"},\n\t\t\t{\"asciimath\":\"wedge\",\"tex\":\"\\\\wedge\"},\n\t\t\t{\"asciimath\":\"vee\",\"tex\":\"\\\\vee\"},\n\t\t\t{\"asciimath\":\"top\",\"tex\":\"\\\\top\"},\n\t\t\t{\"asciimath\":\"pm\",\"tex\":\"\\\\pm\"},\n\t\t\t{\"asciimath\":\"emptyset\",\"tex\":\"\\\\emptyset\"},\n\t\t\t{\"asciimath\":\"infty\",\"tex\":\"\\\\infty\"},\n\t\t\t{\"asciimath\":\"therefore\",\"tex\":\"\\\\therefore\"},\n\t\t\t{\"asciimath\":\"because\",\"tex\":\"\\\\because\"},\n\t\t\t{\"asciimath\":\"lceil\",\"tex\":\"\\\\lceil\"},\n\t\t\t{\"asciimath\":\"rceil\",\"tex\":\"\\\\rceil\"},\n\t\t\t{\"asciimath\":\"to\",\"tex\":\"\\\\to\"},\n\t\t\t{\"asciimath\":\"langle\",\"tex\":\"\\\\langle\"},\n\t\t\t{\"asciimath\":\"lceiling\",\"tex\":\"\\\\lceil\"},\n\t\t\t{\"asciimath\":\"rceiling\",\"tex\":\"\\\\rceil\"},\n\t\t\t{\"asciimath\":\"max\",\"tex\":\"\\\\max\"},\n\t\t\t{\"asciimath\":\"min\",\"tex\":\"\\\\min\"},\n\t\t\t{\"asciimath\":\"prod\",\"tex\":\"\\\\prod\"},\n\t\t\t{\"asciimath\":\"sum\",\"tex\":\"\\\\sum\"},\n\t\t]\n\t\tthis.constants = this.constants.concat(this.relations)\n\n\t\tthis.left_brackets = [\n\t\t\t{asciimath: 'langle', tex: '\\\\langle'},\n\t\t\t{asciimath: '(:', tex: '\\\\langle'},\n\t\t\t{asciimath: '<<', tex: '\\\\langle'},\n\t\t\t{asciimath: '{:', tex: '.'},\n\t\t\t{asciimath: '(', tex: '('},\n\t\t\t{asciimath: '[', tex: '['},\n\t\t\t{asciimath: '|:', tex: '\\\\lvert'},\n\t\t\t{asciimath: '{', tex: '\\\\lbrace'},\n\t\t\t{asciimath: 'lbrace', tex: '\\\\lbrace'},\n\t\t]\n\t\tthis.right_brackets = [\n\t\t\t{asciimath: 'rangle', tex: '\\\\rangle'},\n\t\t\t{asciimath: ':)', tex: '\\\\rangle'},\n\t\t\t{asciimath: '>>', tex: '\\\\rangle'},\n\t\t\t{asciimath: ':}', tex: '.', free_tex: ':\\\\}'},\n\t\t\t{asciimath: ')', tex: ')'},\n\t\t\t{asciimath: ']', tex: ']'},\n\t\t\t{asciimath: ':|', tex: '\\\\rvert'},\n\t\t\t{asciimath: '}', tex: '\\\\rbrace'},\n\t\t\t{asciimath: 'rbrace', tex: '\\\\rbrace'},\n\t\t]\n\t\tthis.leftright_brackets = [\n\t\t\t{asciimath: '|', left_tex: '\\\\lvert', right_tex: '\\\\rvert', free_tex: '|', mid_tex: '\\\\mid'},\n\t\t]\n\n\t\tthis.unary_symbols = [\n\t\t\t{asciimath: \"sqrt\", tex: \"\\\\sqrt\"},\n\t\t\t{asciimath: \"f\", tex:\"f\", func:true},\n\t\t\t{asciimath: \"g\", tex:\"g\", func:true},\n\t\t\t{asciimath: \"sin\", tex:\"\\\\sin\", func:true},\n\t\t\t{asciimath: \"cos\", tex:\"\\\\cos\", func:true},\n\t\t\t{asciimath: \"tan\", tex:\"\\\\tan\", func:true},\n\t\t\t{asciimath: \"arcsin\", tex:\"\\\\arcsin\", func:true},\n\t\t\t{asciimath: \"arccos\", tex:\"\\\\arccos\", func:true},\n\t\t\t{asciimath: \"arctan\", tex:\"\\\\arctan\", func:true},\n\t\t\t{asciimath: \"sinh\", tex:\"\\\\sinh\", func:true},\n\t\t\t{asciimath: \"cosh\", tex:\"\\\\cosh\", func:true},\n\t\t\t{asciimath: \"tanh\", tex:\"\\\\tanh\", func:true},\n\t\t\t{asciimath: \"cot\", tex:\"\\\\cot\", func:true},\n\t\t\t{asciimath: \"coth\", tex:\"\\\\coth\", func:true},\n\t\t\t{asciimath: \"sech\", tex:\"\\\\operatorname{sech}\", func:true},\n\t\t\t{asciimath: \"csch\", tex:\"\\\\operatorname{csch}\", func:true},\n\t\t\t{asciimath: \"sec\", tex:\"\\\\sec\", func:true},\n\t\t\t{asciimath: \"csc\", tex:\"\\\\csc\", func:true},\n\t\t\t{asciimath: \"log\", tex:\"\\\\log\", func:true},\n\t\t\t{asciimath: \"ln\", tex:\"\\\\ln\", func:true},\n\t\t\t{asciimath: \"abs\", rewriteleftright:[\"|\",\"|\"]},\n\t\t\t{asciimath: \"norm\", rewriteleftright:[\"\\\\|\",\"\\\\|\"]},\n\t\t\t{asciimath: \"floor\", rewriteleftright:[\"\\\\lfloor\",\"\\\\rfloor\"]},\n\t\t\t{asciimath: \"ceil\", rewriteleftright:[\"\\\\lceil\",\"\\\\rceil\"]},\n\t\t\t{asciimath: \"Sin\", tex:\"\\\\Sin\", func:true},\n\t\t\t{asciimath: \"Cos\", tex:\"\\\\Cos\", func:true},\n\t\t\t{asciimath: \"Tan\", tex:\"\\\\Tan\", func:true},\n\t\t\t{asciimath: \"Arcsin\", tex:\"\\\\Arcsin\", func:true},\n\t\t\t{asciimath: \"Arccos\", tex:\"\\\\Arccos\", func:true},\n\t\t\t{asciimath: \"Arctan\", tex:\"\\\\Arctan\", func:true},\n\t\t\t{asciimath: \"Sinh\", tex:\"\\\\Sinh\", func:true},\n\t\t\t{asciimath: \"Cosh\", tex:\"\\\\Cosh\", func:true},\n\t\t\t{asciimath: \"Tanh\", tex:\"\\\\Tanh\", func:true},\n\t\t\t{asciimath: \"Cot\", tex:\"\\\\Cot\", func:true},\n\t\t\t{asciimath: \"Sec\", tex:\"\\\\Sec\", func:true},\n\t\t\t{asciimath: \"Csc\", tex:\"\\\\Csc\", func:true},\n\t\t\t{asciimath: \"Log\", tex:\"\\\\Log\", func:true},\n\t\t\t{asciimath: \"Ln\", tex:\"\\\\Ln\", func:true},\n\t\t\t{asciimath: \"Abs\", tex:\"\\\\Abs\", rewriteleftright:[\"|\",\"|\"]},\n\t\t\t{asciimath: \"det\", tex:\"\\\\det\", func:true},\n\t\t\t{asciimath: \"exp\", tex:\"\\\\exp\", func:true},\n\t\t\t{asciimath: \"gcd\", tex:\"\\\\gcd\", func:true},\n\t\t\t{asciimath:\"lcm\", tex:\"\\\\operatorname{lcm}\", func:true},\n\t\t\t{asciimath: \"cancel\", tex:\"\\\\cancel\"},\n\t\t\t{asciimath: \"Sqrt\", tex:\"\\\\Sqrt\"},\n\t\t\t{asciimath: \"hat\", tex:\"\\\\hat\", acc:true},\n\t\t\t{asciimath:\"bar\", tex:\"\\\\overline\", acc:true},\n\t\t\t{asciimath:\"overline\", tex:\"\\\\overline\", acc:true},\n\t\t\t{asciimath: \"vec\", tex:\"\\\\vec\", acc:true},\n\t\t\t{asciimath: \"tilde\", tex:\"\\\\tilde\", acc:true},\n\t\t\t{asciimath: \"dot\", tex:\"\\\\dot\", acc:true},\n\t\t\t{asciimath: \"ddot\", tex:\"\\\\ddot\", acc:true},\n\t\t\t{asciimath:\"ul\", tex:\"\\\\underline\", acc:true},\n\t\t\t{asciimath:\"underline\", tex:\"\\\\underline\", acc:true},\n\t\t\t{asciimath:\"ubrace\", tex:\"\\\\underbrace\", acc:true},\n\t\t\t{asciimath:\"underbrace\", tex:\"\\\\underbrace\", acc:true},\n\t\t\t{asciimath:\"obrace\", tex:\"\\\\overbrace\", acc:true},\n\t\t\t{asciimath:\"overbrace\", tex:\"\\\\overbrace\", acc:true},\n\t\t\t{asciimath:\"bb\", atname:\"mathvariant\", atval:\"bold\", tex:\"\\\\mathbf\"},\n\t\t\t{asciimath: \"mathbf\", atname:\"mathvariant\", atval:\"bold\", tex:\"mathbf\"},\n\t\t\t{asciimath:\"sf\", atname:\"mathvariant\", atval:\"sans-serif\", tex:\"\\\\mathsf\"},\n\t\t\t{asciimath: \"mathsf\", atname:\"mathvariant\", atval:\"sans-serif\", tex:\"mathsf\"},\n\t\t\t{asciimath:\"bbb\", atname:\"mathvariant\", atval:\"double-struck\", tex:\"\\\\mathbb\"},\n\t\t\t{asciimath: \"mathbb\", atname:\"mathvariant\", atval:\"double-struck\", tex:\"\\\\mathbb\"},\n\t\t\t{asciimath:\"cc\", atname:\"mathvariant\", atval:\"script\", tex:\"\\\\mathcal\"},\n\t\t\t{asciimath: \"mathcal\", atname:\"mathvariant\", atval:\"script\", tex:\"\\\\mathcal\"},\n\t\t\t{asciimath:\"tt\", atname:\"mathvariant\", atval:\"monospace\", tex:\"\\\\mathtt\"},\n\t\t\t{asciimath: \"mathtt\", atname:\"mathvariant\", atval:\"monospace\", tex:\"\\\\mathtt\"},\n\t\t\t{asciimath:\"fr\", atname:\"mathvariant\", atval:\"fraktur\", tex:\"\\\\mathfrak\"},\n\t\t\t{asciimath: \"mathfrak\", atname:\"mathvariant\", atval:\"fraktur\", tex:\"\\\\mathfrak\"},\n\t\t]\n\n\t\tthis.binary_symbols = [\n\t\t\t{asciimath: \"root\", tex:\"\\\\sqrt\", option: true},\n\t\t\t{asciimath: \"frac\",    tex:\"\\\\frac\"},\n\t\t\t{asciimath: \"stackrel\", tex:\"\\\\stackrel\"},\n\t\t\t{asciimath: \"overset\", tex:\"\\\\overset\"},\n\t\t\t{asciimath: \"underset\", tex:\"\\\\underset\"},\n\t\t\t{asciimath:\"color\", tex: \"\\\\color\", rawfirst: true},\n\t\t]\n\n\t\tthis.non_constant_symbols = ['_','^','/']\n\n\t}\n\n\tsort_symbols() {\n\t\tconst by_asciimath = (a,b)=>{a=a.asciimath.length,b=b.asciimath.length; return a>b ? -1 : a<b ? 1 : 0}\n\t\tthis.constants.sort(by_asciimath)\n\t\tthis.relations.sort(by_asciimath)\n\t\tthis.left_brackets.sort(by_asciimath)\n\t\tthis.right_brackets.sort(by_asciimath)\n\t\tthis.leftright_brackets.sort(by_asciimath)\n\t\tthis.unary_symbols.sort(by_asciimath)\n\t\tthis.binary_symbols.sort(by_asciimath)\n\t}\n\n\terror(message, pos) {\n\t\tconst neighbourhood = this.source(pos).slice(0,5)\n\t\tthrow(new Error(`Error at character ${pos} near \"${neighbourhood}\": ${message}`))\n\t}\n\n\tliteral(token) {\n\t\tif(token) {\n\t\t\treturn {tex: token.token, pos: token.pos, end: token.end, ttype: 'literal'}\n\t\t}\n\t}\n\n\tlongest(matches) {\n\t\tmatches = matches.filter(x=>!!x)\n\t\tmatches.sort((x,y)=>{\n\t\t\tx=x.end\n\t\t\ty=y.end\n\t\t\treturn x>y ? -1 : x<y ? 1 : 0\n\t\t})\n\t\treturn matches[0]\n\t}\n\n\tescape_text(str) {\n\t\treturn str\n\t\t\t.replace(/\\{/g,'\\\\{')\n\t\t\t.replace(/\\}/g,'\\\\}')\n\n\t}\n\n\tinput(str) {\n\t\tthis._source = str\n\t\tthis.brackets = []\n\t}\n\n\tsource(pos = 0,end?) {\n\t\tif(arguments.length>1) {\n\t\t\treturn this._source.slice(pos,end)\n\t\t} else {\n\t\t\treturn this._source.slice(pos)\n\t\t}\n\t}\n\n\teof(pos = 0) {\n\t\tpos = this.strip_space(pos)\n\t\treturn pos == this._source.length\n\t}\n\n\tunbracket(tok) {\n\t\tif(!tok) {\n\t\t\treturn\n\t\t}\n\t\tif(!tok.bracket) {\n\t\t\treturn tok\n\t\t}\n\n\t\tconst skip_brackets = ['(',')','[',']','{','}']\n\t\tconst skipleft = skip_brackets.includes(tok.left.asciimath)\n\t\tconst skipright = skip_brackets.includes(tok.right.asciimath)\n\t\tconst pos = skipleft ? tok.left.end : tok.pos\n\t\tconst end = skipright ? tok.right.pos : tok.end\n\t\tlet left = skipleft ? '' : tok.left.tex\n\t\tlet right = skipright ? '' : tok.right.tex\n\t\tconst middle = tok.middle ? tok.middle.tex : ''\n\t\tif(left || right) {\n\t\t\tleft = left || '.'\n\t\t\tright = right || '.'\n\t\t\treturn {tex: `\\\\left ${left} ${middle} \\\\right ${right}`, pos: tok.pos, end: tok.end}\n\t\t} else {\n\t\t\treturn {tex: middle, pos: tok.pos, end: tok.end, middle_asciimath: this.source(pos,end)}\n\t\t}\n\t}\n\n\tparse(str) {\n\t\tthis.input(str)\n\t\tconst result = this.consume()\n\t\treturn result.tex\n\t}\n\n\tconsume(pos = 0) {\n\t\tlet tex = ''\n\t\tconst exprs = []\n\t\twhile(!this.eof(pos)) {\n\t\t\tlet expr = this.expression_list(pos)\n\t\t\tif(!expr) {\n\t\t\t\tconst rb = this.right_bracket(pos)\n\t\t\t\tif(rb) {\n\t\t\t\t\tif(rb.def.free_tex) {\n\t\t\t\t\t\trb.tex = rb.def.free_tex\n\t\t\t\t\t}\n\t\t\t\t\texpr = rb\n\n\t\t\t\t}\n\t\t\t\tconst lr = this.leftright_bracket(pos)\n\t\t\t\tif(lr) {\n\t\t\t\t\texpr = lr\n\t\t\t\t\tconst ss = this.subsup(lr.end)\n\t\t\t\t\tif(ss) {\n\t\t\t\t\t\texpr = {tex: `${expr.tex}${ss.tex}`, pos: pos, end: ss.end, ttype: 'expression'}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(expr) {\n\t\t\t\tif(tex) {\n\t\t\t\t\ttex += ' '\n\t\t\t\t}\n\t\t\t\ttex += expr.tex\n\t\t\t\tpos = expr.end\n\t\t\t\texprs.push(expr)\n\t\t\t} else if(!this.eof(pos)) {\n\t\t\t\tconst chr = this.source(pos,pos+1)\n\t\t\t\texprs.push({tex: chr, pos: pos, ttype: 'character'})\n\t\t\t\ttex += chr\n\t\t\t\tpos += 1\n\t\t\t}\n\t\t}\n\t\treturn {tex: tex, exprs: exprs}\n\t}\n\n\tstrip_space(pos = 0) {\n\t\tconst osource = this.source(pos)\n\t\tconst reduced = osource.replace(/^(\\s|\\\\(?![\\\\ ]))*/,'')\n\t\treturn pos + osource.length - reduced.length\n\t}\n\n\t/* Does the given regex match next?\n\t */\n\tmatch(re, pos) {\n\t\tpos = this.strip_space(pos)\n\t\tconst m = re.exec(this.source(pos))\n\t\tif(m) {\n\t\t\tconst token = m[0]\n\t\t\treturn {token: token, pos: pos, match: m, end: pos+token.length, ttype: 'regex'}\n\t\t}\n\t}\n\n\t/* Does the exact given string occur next?\n\t */\n\texact(str, pos) {\n\t\tpos = this.strip_space(pos)\n\t\tif(this.source(pos).slice(0, str.length) == str) {\n\t\t\treturn {token: str, pos: pos, end: pos+str.length, ttype: 'exact'}\n\t\t}\n\t}\n\n\texpression_list(pos = 0) {\n\t\tlet expr = this.expression(pos)\n\t\tif(!expr) {\n\t\t\treturn\n\t\t}\n\t\tlet end = expr.end\n\t\tlet tex = expr.tex\n\t\tconst exprs = [expr]\n\t\twhile(!this.eof(end)) {\n\t\t\tconst comma = this.exact(\",\",end)\n\t\t\tif(!comma) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\ttex += ' ,'\n\t\t\tend = comma.end\n\t\t\texpr = this.expression(end)\n\t\t\tif(!expr) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\ttex += ' '+expr.tex\n\t\t\texprs.push(expr)\n\t\t\tend = expr.end\n\t\t}\n\t\treturn {tex: tex, pos: pos, end: end, exprs: exprs, ttype: 'expression_list'}\n\t}\n\n\t// E ::= IE | I/I                       Expression\n\texpression(pos = 0) {\n\t\tconst negative = this.negative_expression(pos)\n\t\tif(negative) {\n\t\t\treturn negative\n\t\t}\n\t\tconst first = this.intermediate_or_fraction(pos)\n\t\tif(!first) {\n\t\t\tfor(const c of this.non_constant_symbols) {\n\t\t\t\tconst m = this.exact(c,pos)\n\t\t\t\tif(m) {\n\t\t\t\t\treturn {tex: c, pos: pos, end: m.end, ttype: 'constant'}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif(this.eof(first.end)) {\n\t\t\treturn first\n\t\t}\n\t\tconst second = this.expression(first.end)\n\t\tif(second) {\n\t\t\treturn {tex: first.tex+' '+second.tex, pos: first.pos, end: second.end, ttype: 'expression', exprs: [first,second]}\n\t\t} else {\n\t\t\treturn first\n\t\t}\n\t}\n\n\tnegative_expression(pos = 0) {\n\t\tconst dash = this.exact(\"-\",pos)\n\t\tif(dash && !this.other_constant(pos)) {\n\t\t\tconst expr = this.expression(dash.end)\n\t\t\tif(expr) {\n\t\t\t\treturn {tex: `- ${expr.tex}`, pos: pos, end: expr.end, ttype: 'negative_expression', dash: dash, expression: expr}\n\t\t\t} else {\n\t\t\t\treturn {tex: '-', pos: pos, end: dash.end, ttype: 'constant'}\n\t\t\t}\n\t\t}\n\t}\n\n\tintermediate_or_fraction(pos = 0) {\n\t\tconst first = this.intermediate(pos)\n\t\tif(!first) {\n\t\t\treturn\n\t\t}\n\t\tconst frac = this.match(/^\\/(?!\\/)/,first.end)\n\t\tif(frac) {\n\t\t\tconst second = this.intermediate(frac.end)\n\t\t\tif(second) {\n\t\t\t\tconst ufirst = this.unbracket(first)\n\t\t\t\tconst usecond = this.unbracket(second)\n\t\t\t\treturn {tex: `\\\\frac{${ufirst.tex}}{${usecond.tex}}`, pos: first.pos, end: second.end, ttype: 'fraction', numerator: ufirst, denominator: usecond, raw_numerator: first, raw_denominator: second}\n\t\t\t} else {\n\t\t\t\tconst ufirst = this.unbracket(first)\n\t\t\t\treturn {tex: `\\\\frac{${ufirst.tex}}{}`, pos: first.pos, end: frac.end, ttype: 'fraction', numerator: ufirst, denominator: null, raw_numerator: first, raw_denominator: null}\n\t\t\t}\n\t\t} else {\n\t\t\treturn first\n\t\t}\n\t}\n\n\t// I ::= S_S | S^S | S_S^S | S          Intermediate expression\n\tintermediate(pos = 0) {\n\t\tconst first = this.simple(pos)\n\t\tif(!first) {\n\t\t\treturn\n\t\t}\n\t\tconst ss = this.subsup(first.end)\n\t\tif(ss) {\n\t\t\treturn {tex: `${first.tex}${ss.tex}`, pos:pos, end:ss.end, ttype: 'intermediate', expression: first, subsup: ss}\n\t\t} else {\n\t\t\treturn first\n\t\t}\n\t}\n\n\tsubsup(pos = 0) {\n\t\tlet tex = ''\n\t\tlet end = pos\n\t\tconst sub = this.exact('_',pos)\n\t\tlet sub_expr, sup_expr\n\t\tif(sub) {\n\t\t\tsub_expr = this.unbracket(this.simple(sub.end))\n\t\t\tif(sub_expr) {\n\t\t\t\ttex = `${tex}_{${sub_expr.tex}}`\n\t\t\t\tend = sub_expr.end\n\t\t\t} else {\n\t\t\t\ttex = `${tex}_{}`\n\t\t\t\tend = sub.end\n\t\t\t}\n\t\t}\n\t\tconst sup = this.match(/^\\^(?!\\^)/,end)\n\t\tif(sup) {\n\t\t\tsup_expr = this.unbracket(this.simple(sup.end))\n\t\t\tif(sup_expr) {\n\t\t\t\ttex = `${tex}^{${sup_expr.tex}}`\n\t\t\t\tend = sup_expr.end\n\t\t\t} else {\n\t\t\t\ttex = `${tex}^{}`\n\t\t\t\tend = sup.end\n\t\t\t}\n\t\t}\n\t\tif(sub || sup) {\n\t\t\treturn {tex: tex, pos: pos, end: end, ttype: 'subsup', sub: sub_expr, sup: sup_expr}\n\t\t}\n\t}\n\n\t// S ::= v | lEr | uS | bSS             Simple expression\n\tsimple(pos = 0) {\n\t\treturn this.longest([this.matrix(pos), this.bracketed_expression(pos), this.binary(pos), this.constant(pos), this.text(pos), this.unary(pos), this.negative_simple(pos)])\n\t}\n\n\tnegative_simple(pos = 0) {\n\t\tconst dash = this.exact(\"-\",pos)\n\t\tif(dash && !this.other_constant(pos)) {\n\t\t\tconst expr = this.simple(dash.end)\n\t\t\tif(expr) {\n\t\t\t\treturn {tex: `- ${expr.tex}`, pos: pos, end: expr.end, ttype: 'negative_simple', dash: dash, expr: expr}\n\t\t\t} else {\n\t\t\t\treturn {tex: '-', pos: pos, end: dash.end, ttype: 'constant'}\n\t\t\t}\n\t\t}\n\t}\n\n\t// matrix: leftbracket \"(\" expr \")\" (\",\" \"(\" expr \")\")* rightbracket\n\t// each row must have the same number of elements\n\tmatrix(pos = 0) {\n\t\tlet left = this.left_bracket(pos)\n\t\tlet lr = false\n\t\tif(!left) {\n\t\t\tleft = this.leftright_bracket(pos,'left')\n\t\t\tif(!left) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlr = true\n\t\t}\n\t\tconst contents = this.matrix_contents(left.end, lr)\n\t\tif(!contents) {\n\t\t\treturn\n\t\t}\n\t\tconst right = lr ? this.leftright_bracket(contents.end, 'right') : this.right_bracket(contents.end)\n\t\tif(!right) {\n\t\t\treturn\n\t\t}\n\t\tconst contents_tex = contents.rows.map(r=>r.tex).join(' \\\\\\\\ ')\n\t\tconst matrix_tex = contents.is_array ? `\\\\begin{array}{${contents.column_desc}} ${contents_tex} \\\\end{array}` : `\\\\begin{matrix} ${contents_tex} \\\\end{matrix}`\n\t\treturn {tex: `\\\\left ${left.tex} ${matrix_tex} \\\\right ${right.tex}`, pos: pos, end: right.end, ttype: 'matrix', rows: contents.rows, left: left, right: right}\n\t}\n\n\tmatrix_contents(pos = 0, leftright = false) {\n\t\tconst rows = []\n\t\tlet end = pos\n\t\tlet row_length = undefined\n\t\tlet column_desc = undefined\n\t\tlet is_array = false\n\t\twhile(!this.eof(end) && !(leftright ? this.leftright_bracket(end) : this.right_bracket(end))) {\n\t\t\tif(rows.length) {\n\t\t\t\tconst comma = this.exact(\",\",end)\n\t\t\t\tif(!comma) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tend = comma.end\n\t\t\t}\n\t\t\tconst lb = this.match(/^[(\\[]/,end)\n\t\t\tif(!lb) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst cells = []\n\t\t\tconst columns = []\n\t\t\tend = lb.end\n\t\t\twhile(!this.eof(end)) {\n\t\t\t\tif(cells.length) {\n\t\t\t\t\tconst comma = this.exact(\",\",end)\n\t\t\t\t\tif(!comma) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tend = comma.end\n\t\t\t\t}\n\t\t\t\tconst cell = this.matrix_cell(end)\n\t\t\t\tif(!cell) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tif(cell.ttype=='column') {\n\t\t\t\t\tcolumns.push('|')\n\t\t\t\t\tis_array = true\n\t\t\t\t\tif(cell.expr!==null) {\n\t\t\t\t\t\tcolumns.push('r')\n\t\t\t\t\t\tcells.push(cell.expr)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcolumns.push('r')\n\t\t\t\t\tcells.push(cell)\n\t\t\t\t}\n\t\t\t\tend = cell.end\n\t\t\t}\n\t\t\tif(!cells.length) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(row_length===undefined) {\n\t\t\t\trow_length = cells.length\n\t\t\t} else if(cells.length!=row_length) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst rb = this.match(/^[)\\]]/,end)\n\t\t\tif(!rb) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst row_column_desc = columns.join('')\n\t\t\tif(column_desc===undefined) {\n\t\t\t\tcolumn_desc = row_column_desc\n\t\t\t} else if(row_column_desc!=column_desc) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\trows.push({ttype: 'row', tex: cells.map(c=>c.tex).join(' & '), pos: lb.end, end: end, cells: cells})\n\t\t\tend = rb.end\n\t\t}\n\t\tif(row_length===undefined || (row_length<=1 && rows.length<=1)) {\n\t\t\treturn\n\t\t}\n\t\treturn {rows: rows, end: end, column_desc: column_desc, is_array: is_array}\n\t}\n\n\tmatrix_cell(pos = 0) {\n\t\tconst lvert = this.exact('|',pos)\n\t\tif(lvert) {\n\t\t\tconst middle = this.expression(lvert.end)\n\t\t\tif(middle) {\n\t\t\t\tconst rvert = this.exact('|',middle.end)\n\t\t\t\tif(rvert) {\n\t\t\t\t\tconst second = this.expression(rvert.end)\n\t\t\t\t\tif(second) {\n\t\t\t\t\t\treturn {tex: `\\\\left \\\\lvert ${middle.tex} \\\\right \\\\rvert ${second.text}`, pos: lvert.pos, end: second.end, ttype: 'expression', exprs: [middle,second]}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {ttype: 'column', expr: middle, pos: lvert.pos, end: middle.end}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {ttype: 'column', expr: null, pos: lvert.pos, end: lvert.end}\n\t\t\t}\n\t\t}\n\t\treturn this.expression(pos)\n\t}\n\n\tbracketed_expression(pos = 0) {\n\t\tconst l = this.left_bracket(pos)\n\t\tif(l) {\n\t\t\tconst middle = this.expression_list(l.end)\n\t\t\tif(middle) {\n\t\t\t\tconst m = this.mid_expression(l,middle,pos)\n\t\t\t\tif(m) {\n\t\t\t\t\treturn m\n\t\t\t\t}\n\t\t\t\tconst r = this.right_bracket(middle.end) || this.leftright_bracket(middle.end,'right')\n\t\t\t\tif(r) {\n\t\t\t\t\treturn {tex: `\\\\left ${l.tex} ${middle.tex} \\\\right ${r.tex}`, pos: pos, end: r.end, bracket: true, left: l, right: r, middle: middle, ttype: 'bracket'}\n\t\t\t\t} else if(this.eof(middle.end)) {\n\t\t\t\t\treturn {tex: `\\\\left ${l.tex} ${middle.tex} \\\\right.`, pos: pos, end: middle.end, ttype: 'bracket', left: l, right: null, middle: middle}\n\t\t\t\t} else {\n\t\t\t\t\treturn {tex: `${l.tex} ${middle.tex}`, pos: pos, end: middle.end, ttype: 'expression', exprs: [l,middle]}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst r = this.right_bracket(l.end) || this.leftright_bracket(l.end,'right')\n\t\t\t\tif(r) {\n\t\t\t\t\treturn {tex: `\\\\left ${l.tex} \\\\right ${r.tex}`, pos: pos, end: r.end, bracket: true, left: l, right: r, middle: null, ttype: 'bracket'}\n\t\t\t\t} else {\n\t\t\t\t\treturn {tex: l.tex, pos: pos, end: l.end, ttype: 'constant'}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(this.other_constant(pos)) {\n\t\t\treturn\n\t\t}\n\t\tconst left = this.leftright_bracket(pos, 'left')\n\t\tif(left) {\n\t\t\tconst middle = this.expression_list(left.end)\n\t\t\tif(middle) {\n\t\t\t\tconst m = this.mid_expression(left,middle,pos)\n\t\t\t\tif(m) {\n\t\t\t\t\treturn m\n\t\t\t\t}\n\t\t\t\tconst right = this.leftright_bracket(middle.end, 'right') || this.right_bracket(middle.end)\n\t\t\t\tif(right) {\n\t\t\t\t\treturn {tex: `\\\\left ${left.tex} ${middle.tex} \\\\right ${right.tex}`, pos: pos, end: right.end, bracket: true, left: left, right: right, middle: middle, ttype: 'bracket'}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Detect the case where the \"middle\" part of a bracketed expression ends in another bracketed expression whose left delimiter is a left/right symbol, e.g. `|`.\n\t// In these cases, interpret this as a bracketed expression where the left/right symbol is a 'mid' delimiter.\n\tmid_expression(l,middle,pos) {\n\t\tfunction is_mid_bracket(t) {\n\t\t\treturn t.ttype == 'bracket' && t.left.ttype=='leftright_bracket'\n\t\t}\n\t\tif(middle.exprs.length==1 && middle.exprs[0].ttype=='expression') {\n\t\t\tconst firsts = [middle.exprs[0].exprs[0]]\n\t\t\tlet last =  middle.exprs[0].exprs[1]\n\t\t\tlet end = middle.end\n\t\t\twhile(last.ttype=='expression') {\n\t\t\t\tconst first = last.exprs[0]\n\t\t\t\tif(is_mid_bracket(first)) {\n\t\t\t\t\tlast = first\n\t\t\t\t\tend = first.end\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tfirsts.push(last.exprs[0])\n\t\t\t\tlast = last.exprs[1]\n\t\t\t}\n\t\t\tif(last.ttype=='fraction') {\n\t\t\t\tlast = last.raw_numerator\n\t\t\t\tend = last.end\n\t\t\t}\n\t\t\tif(!(last.ttype=='bracket' && last.left.ttype=='leftright_bracket')) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst firsttex = firsts.map(e=>e.tex).join(' ')\n\t\t\tconst mid = last.left\n\t\t\tconst lasttex = last.middle.exprs.map(e=>e.tex).join(' ')\n\t\t\tconst nr = last.right\n\t\t\treturn {tex: `\\\\left ${l.tex} ${firsttex} ${mid.def.mid_tex} ${lasttex} \\\\right ${nr.tex}`, pos: pos, end: end, left: l, right: nr, middle: {tex: `${firsttex} ${mid.def.mid_tex} ${lasttex}`, exprs: firsts.concat([mid,last.middle]), pos: middle.pos, end: last.middle.end, ttype: 'expression_list'}}\n\t\t}\n\t}\n\n\t// r ::= ) | ] | } | :) | :} | other right brackets\n\tright_bracket(pos = 0) {\n\t\tfor(const bracket of this.right_brackets) {\n\t\t\tconst m = this.exact(bracket.asciimath,pos)\n\t\t\tif(m) {\n\t\t\t\treturn {tex: bracket.tex, pos: pos, end: m.end, asciimath: bracket.asciimath, def: bracket, ttype: 'right_bracket'}\n\t\t\t}\n\t\t}\n\t}\n\n\t// l ::= ( | [ | { | (: | {: | other left brackets\n\tleft_bracket(pos = 0) {\n\t\tfor(const bracket of this.left_brackets) {\n\t\t\tconst m = this.exact(bracket.asciimath,pos)\n\t\t\tif(m) {\n\t\t\t\treturn {tex: bracket.tex, pos: pos, end: m.end, asciimath: bracket.asciimath, ttype: 'left_bracket'}\n\t\t\t}\n\t\t}\n\t}\n\n\tleftright_bracket(pos = 0,position) {\n\t\tfor(const lr of this.leftright_brackets) {\n\t\t\tconst b = this.exact(lr.asciimath, pos)\n\t\t\tif(b) {\n\t\t\t\tif(this.exact(',',b.end)) {\n\t\t\t\t\treturn {tex: lr.free_tex, pos: pos, end: b.end, ttype: 'binary'}\n\t\t\t\t} else {\n\t\t\t\t\treturn {tex: position=='left' ? lr.left_tex : position=='right' ? lr.right_tex : lr.free_tex, pos: pos, end: b.end, ttype: 'leftright_bracket', def: lr}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttext(pos = 0) {\n\t\tconst quoted = this.match(/^\"([^\"]*)\"/,pos)\n\t\tif(quoted) {\n\t\t\tconst text = this.escape_text(quoted.match[1])\n\t\t\treturn {tex: `\\\\text{${text}}`, pos: pos, end: quoted.end, ttype: 'text', text: text}\n\t\t}\n\t\tconst textfn = this.match(/^(?:mbox|text)\\s*(\\([^)]*\\)?|\\{[^}]*\\}?|\\[[^\\]]*\\]?)/,pos)\n\t\tif(textfn) {\n\t\t\tconst text = this.escape_text(textfn.match[1].slice(1,textfn.match[1].length-1))\n\t\t\treturn {tex: `\\\\text{${text}}`, pos: pos, end: textfn.end, ttype: 'text', text: text}\n\t\t}\n\t}\n\n\t// b ::= frac | root | stackrel | other binary symbols\n\tbinary(pos = 0) {\n\t\tfor(const binary of this.binary_symbols) {\n\t\t\tconst m = this.exact(binary.asciimath, pos)\n\t\t\tconst [lb1,rb1] = binary.option ? ['[',']'] : ['{','}']\n\t\t\tif(m) {\n\t\t\t\tconst a = this.unbracket(this.simple(m.end))\n\t\t\t\tif(a) {\n\t\t\t\t\tconst atex = binary.rawfirst ? a.middle_asciimath : a.tex\n\t\t\t\t\tconst b = this.unbracket(this.simple(a.end))\n\t\t\t\t\tif(b) {\n\t\t\t\t\t\treturn {tex: `${binary.tex}${lb1}${atex}${rb1}{${b.tex}}`, pos: pos, end: b.end, ttype: 'binary', op: binary, arg1: a, arg2: b}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {tex: `${binary.tex}${lb1}${atex}${rb1}{}`, pos: pos, end: a.end, ttype: 'binary', op: binary, arg1: a, arg2: null}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {tex: `${binary.tex}${lb1}${rb1}{}`, pos: pos, end: m.end, ttype: 'binary', op: binary, arg1: null, arg2: null}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// u ::= sqrt | text | bb | other unary symbols for font commands\n\tunary(pos = 0) {\n\t\tfor(const u of this.unary_symbols) {\n\t\t\tconst m = this.exact(u.asciimath, pos)\n\t\t\tif(m) {\n\t\t\t\tconst ss = this.subsup(m.end)\n\t\t\t\tconst sstex = ss ? ss.tex : ''\n\t\t\t\tconst end = ss ? ss.end : m.end\n\t\t\t\tconst barg = this.simple(end)\n\t\t\t\tconst arg = u.func ? barg : this.unbracket(barg)\n\t\t\t\tconst argtex = arg && (u.raw ? arg.middle_asciimath : arg.tex)\n\t\t\t\tif(u.rewriteleftright) {\n\t\t\t\t\tconst [left,right] = u.rewriteleftright\n\t\t\t\t\tif(arg) {\n\t\t\t\t\t\treturn {tex: `\\\\left ${left} ${argtex} \\\\right ${right} ${sstex}`, pos: pos, end: arg.end, ttype: 'unary', op: m, subsup: ss, arg: arg}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {tex: `\\\\left ${left} \\\\right ${right} ${sstex}`, pos: pos, end: m.end, ttype: 'unary', op: m, subsup: ss, arg: null}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(arg) {\n\t\t\t\t\t\treturn {tex: `${u.tex}${sstex}{${argtex}}`, pos: pos, end: arg.end, ttype: 'unary', op: m, subsup: ss, arg: arg}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {tex: `${u.tex}${sstex}{}`, pos: pos, end: m.end, ttype: 'unary', op: m, subsup: ss, arg: null}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// v ::= [A-Za-z] | greek letters | numbers | other constant symbols\n\tconstant(pos = 0) {\n\t\tif(this.right_bracket(pos)) {\n\t\t\treturn\n\t\t}\n\t\treturn this.longest([this.other_constant(pos), this.greek(pos), this.name(pos), this.number(pos), this.arbitrary_constant(pos)])\n\t}\n\n\tname(pos = 0) {\n\t\treturn this.literal(this.match(/^[A-Za-z]/, pos))\n\t}\n\n\tgreek(pos = 0) {\n\t\tconst re_greek = new RegExp('^('+this.greek_letters.join('|')+')')\n\t\tconst m = this.match(re_greek, pos)\n\t\tif(m) {\n\t\t\treturn {tex: '\\\\'+m.token, pos: pos, end: m.end, ttype: 'greek'}\n\t\t}\n\t}\n\n\tnumber(pos = 0) {\n\t\tconst re_number = new RegExp('^\\\\d+('+this.decimalsign+'\\\\d+)?')\n\t\treturn this.literal(this.match(re_number, pos))\n\t}\n\n\tother_constant(pos = 0) {\n\t\tfor(const sym of this.constants) {\n\t\t\tconst m = this.exact(sym.asciimath, pos)\n\t\t\tif(m) {\n\t\t\t\treturn {tex: `${sym.tex}`, pos: m.pos, end: m.end, ttype: 'other_constant'}\n\t\t\t}\n\t\t}\n\t\tfor(const sym of this.relations) {\n\t\t\tif(!sym.asciimath.match(/^!/)) {\n\t\t\t\tconst notm = this.exact('!'+sym.asciimath, pos)\n\t\t\t\tif(notm) {\n\t\t\t\t\treturn {tex: `\\\\not ${sym.tex}`, pos: notm.pos, end: notm.end, ttype: 'other_constant'}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tarbitrary_constant(pos = 0) {\n\t\tif(!this.eof(pos)) {\n\t\t\tif(this.exact(\",\",pos)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfor(const nc of this.non_constant_symbols.concat(this.left_brackets.map(x=>x.asciimath), this.right_brackets.map(x=>x.asciimath), this.leftright_brackets.map(x=>x.asciimath))) {\n\t\t\t\tif(this.exact(nc, pos)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst spos = this.strip_space(pos)\n\t\t\tconst symbol = this.source(spos).slice(0,1)\n\t\t\treturn {tex: symbol, pos: pos, end: spos+1, ttype: 'arbitrary_constant'}\n\t\t}\n\t}\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {braceSorter} from \"../helperFunctions\";\nimport AsciiMathParser from \"../asciimath2tex\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"solution\"\nconst description = `solution|sol,[paramètres]\n\n**paramètres**\nchecker = par défaut, c'est le \"exact\"\n`\n\nexport class SolutionChecker extends CheckerAbstract {\n\n    constructor(config?: string[] | string) {\n        super(config)\n        this.type = CHECKERS.SOLUTION\n        this.description = description\n\n    }\n\n    get format(): string {\n        return `Solution de la forme \\\\(\\\\mathcal{S}=\\\\{3;5\\\\}\\\\)<br/>${this.secondaryChecker?.format}`\n    }\n\n\n    override checkValue(value: string): string {\n        // Ensemble vide / réelles entre accolades.\n        if (isEmptyOrReal(value)) {\n            // IR ou (vide) est entre accolade.\n            if (value === `{${this.answer}} `) {\n                return `${new AsciiMathParser().parse(\n                    this.answer,\n                )} est déjà un ensemble.`\n            }\n\n            // De toute façon, ce n'est pas le bonne ensemble de solution.\n            return \"Ce n'est pas le bon ensemble de solution.\"\n        } else if (isEmptyOrReal(this.answer)) {\n            // la réponse donnée n'est pas un cas particulier, mais on devrait l'avoir...\n            return \"Ce n'est pas le bon ensemble de solution.\"\n        }\n\n        // La réponse donnée et espérée ne sont pas des cas particuliers\n\n        // La solution espérée est avec des accolades\n        if (this.answer.startsWith(\"{\")) {\n            if (!value.startsWith(\"{\")) {\n                // Manque les accolades\n                return \"L'ensemble des solutions doit avoir des \\\\(\\\\{ \\\\}\\\\).\"\n            }\n\n            // vérifie qu'il y a bien le bon nombre d'accolades ouvrantes et fermantes\n            if (value.split(\"{\").length !== value.split(\"}\").length) {\n                return \"Le nombre d'accolades ouvrantes est différent des fermantes.\"\n            }\n        }\n\n        // Si la solution est avec intervalle mais pas la réponse.\n        if (isWithInterval(this.answer) && !isWithInterval(value)) {\n            return isWithInterval(this.answer)\n                ? \"La solution contient un intervalle.\"\n                : \"La solution ne contient pas d'intervalle.\"\n        }\n\n        // La solution n'est pas un intervalle.\n        if (!isWithInterval(this.answer)) {\n            // On devrait être dans la situation : {a;b;c;d}\n            const expectedValues = this.answer\n                .substring(1, this.answer.length - 1)\n                .split(\";\")\n\n            let correctAnswers = 0\n            expectedValues.forEach((checkValue) => {\n\n                const givenValues = value\n                    .substring(1, value.length - 1)\n                    .split(\";\")\n\n                for (let i = 0; i < givenValues.length; i++) {\n                    if (\n                        this.secondaryChecker?.check(checkValue, givenValues[i]).result ?? false\n                    ) {\n                        // TODO : vérifier si splice retourne bien le bon élément eslint/ts error ?\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        givenValues.splice(i, 1)[0]\n\n                        correctAnswers++\n                        break\n                    }\n                }\n            })\n\n            if (correctAnswers !== expectedValues.length) {\n                return `Il y a ${correctAnswers} réponse(s) juste sur ${expectedValues.length}`\n            } else {\n                return \"\"\n            }\n        }\n\n        // La solution peut être du type IR\\setminus {a;b;c}\n\n        // Ce n'est pas dans le bon ordre (cas des ensembles, pas des intervalles)\n        if (!this.answer.includes(\"]\") && !this.answer.includes(\"[\")) {\n            const inBracketsExpectedValue = braceSorter(this.answer),\n                inBracketsGivenValue = braceSorter(value)\n\n            return inBracketsGivenValue === inBracketsExpectedValue\n                ? \"\"\n                : \"Une ou plusieurs valeurs sont fausses.\"\n        }\n\n        return \"\"\n    }\n}\n\nfunction isWithInterval(value: string): boolean {\n    return value.includes(\"[\") || value.includes(\"]\")\n}\n\nfunction isEmptyOrReal(value: string): boolean {\n    return (\n        value === \"!!\" ||\n        value === \"RR\" ||\n        value === \"RR^**\" ||\n        value === \"RR_+\" ||\n        value === \"RR_+^**\" ||\n        value === \"RR_-\" ||\n        value === \"RR_-^**\"\n    )\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"string\"\nconst description = \"string\"\n\nexport class StringChecker extends CheckerAbstract {\n\tconstructor(config?: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.STRING\n\t\tthis.description = description\n\t}\n\n\treadonly format = \"réponse textuelle\"\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\r\nimport {stripFirstCharacter, stripLastCharacter} from \"../helperFunctions\";\r\nimport {Fraction} from \"pimath\";\r\nimport {ExactChecker} from \"./ExactChecker\";\r\nimport {CHECKERS} from \"../checker.config\";\r\n\r\nconst name = \"vector\"\r\nconst description = `vector,[paramètres]\r\n\r\n**paramètres**\r\n- co=accepte un vecteur colinéaire\r\n- nb= les composantes sont des nombres\r\n- frac= les composantes sont des fractions\r\n`\r\n\r\nexport class VectorChecker extends CheckerAbstract {\r\n\r\n    private _colinear = false\r\n\r\n    constructor(config?: string[] | string) {\r\n        super(config)\r\n        this.type = CHECKERS.VECTOR\r\n        this.description = description\r\n\r\n        if (this.config.includes(\"co\")) { this._colinear = true }\r\n\r\n\t\tthis.secondaryChecker = new ExactChecker()\r\n    }\r\n\r\n    get format(): string {\r\n        return `Vecteur ${this._colinear ? 'colinéaire ' : ''}sous la forme \\\\(\\\\begin{pmatrix}a\\\\\\\\b\\\\end{pmatrix}\\\\)<br>${this.secondaryChecker?.format}`\r\n    }\r\n\r\n\toverride checkFormat(value: string): string {\r\n\r\n\t\tif (value[0] !== \"(\" || value[value.length - 1] !== \")\") {\r\n\t\t\treturn \"des vecteurs commencent et se terminent par des parenthèses\"\r\n\t\t}\r\n\r\n\t\treturn \"\"\r\n\t}\r\n\r\n\toverride checkValue(value: string): string {\r\n\t\t// On récupère les valeurs\r\n\t\tconst values = value.split(\";\"),\r\n\t\t\texpectedValues = this.answer.split(\";\")\r\n\r\n\r\n\t\tif (values.length === 1) {\r\n\t\t\treturn \"des vecteurs ont au moins deux valeurs\"\r\n\t\t}\r\n\r\n\t\tif (values.length !== expectedValues.length) {\r\n\t\t\treturn \"la dimension du vecteur ne correspond pas\"\r\n\t\t}\r\n\r\n\t\t// remove the parentese from the first and last value.\r\n\t\tvalues[0] = stripFirstCharacter(values[0])\r\n\t\tvalues[values.length - 1] = stripLastCharacter(values[values.length - 1])\r\n\r\n\t\tif (expectedValues[0].startsWith(\"(\")) {\r\n\t\t\texpectedValues[0] = stripFirstCharacter(expectedValues[0])\r\n\t\t}\r\n\r\n\t\tif (expectedValues[expectedValues.length - 1].endsWith(\")\")) {\r\n\t\t\texpectedValues[expectedValues.length - 1] = stripLastCharacter(expectedValues[expectedValues.length - 1])\r\n\t\t}\r\n\r\n\t\tif (this.config.includes(\"co\")) {\r\n\t\t\t// suppose that each values are fraction\r\n\t\t\tlet a, b, k\r\n\r\n\t\t\tfor (let i = 0; i < values.length; i++) {\r\n\t\t\t\ta = new Fraction(values[i])\r\n\t\t\t\tb = new Fraction(expectedValues[i])\r\n\r\n\t\t\t\tif ((a.isZero() && b.isNotZero()) || a.isNotZero() && b.isZero()) {\r\n\t\t\t\t\treturn `la ${i + 1}e composante est fausse.`\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (a.isNotZero() && b.isNotZero()) {\r\n\t\t\t\t\tif (k === undefined) {\r\n\t\t\t\t\t\tk = new Fraction(a.clone().divide(b))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (a.isNotEqual(b.clone().multiply(k))) {\r\n\t\t\t\t\t\t\treturn `la ${i + 1}e composante n'est pas proportionnelle`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < values.length; i++) {\r\n\t\t\t\tconst result = this.secondaryChecker?.check(expectedValues[i], values[i])??{result: false, message: \"\"}\r\n\t\t\t\tif (!result.result) {\r\n\t\t\t\t\treturn `la ${i === 0 ? \"1ère\" : (i + 1) + \"ème\"} composante n'est pas juste.<br>${result.message}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// tous les tests sont passés ! La réponse est donc juste\r\n\t\treturn \"\"\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"order\"\nconst description = `order,[paramètres]\n\n**paramètres**\naucun\n`\n\nexport class OrderChecker extends CheckerAbstract {\n\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.ORDER\n\t\tthis.description = description\n\t}\n\n\treadonly format = \"\"\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"qcm\"\nconst description = \"qcm,[paramètres]\"\n\nexport class QcmChecker extends CheckerAbstract{\n\treadonly format = \"\"\n\n\tconstructor(config: string[]|string){\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.QCM\n\t\tthis.description = description\n\t}\n\n}\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"study\"\nconst description = `study\n\n**paramètres**\naucun\n`\nexport class StudyChecker extends CheckerAbstract {\n\tconstructor(config: string[] | string) {\n\t\tsuper(config)\n\t\tthis.type = CHECKERS.STUDY\n\t\tthis.description = description\n\t}\n\n\n\treadonly format = \"Tracer le graphe\"\n\n\toverride checkValue(value: string): string {\n\t\tconst arrayAnswer = value.split(\",\").sort(),\n\t\t\tarrayExpected = this.answer.split(\",\").sort(),\n\t\t\td = arrayExpected.length - arrayAnswer.length\n\n\t\tif (d > 0) {\n\t\t\treturn `il manque ${d} élément${d > 1 ? \"s\" : \"\"}`\n\t\t} else if (d < 0) {\n\t\t\treturn `il y a ${-d} élément${-d > 1 ? \"s\" : \"\"} en trop`\n\t\t}\n\n\t\tconst erreurs = [],\n\t\t\ttraceErrors = []\n\t\tfor (let i = 0; i <= arrayAnswer.length; i++) {\n\t\t\tif (arrayAnswer[i] !== arrayExpected[i]) {\n\n\t\t\t\tif (arrayExpected[i].split(\"&\")[0] === arrayAnswer[i].split(\"&\")[0]) {\n\t\t\t\t\ttraceErrors.push(i + 1)\n\t\t\t\t} else {\n\t\t\t\t\terreurs.push(i + 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (erreurs.length > 0) {\n\t\t\treturn `il y a ${erreurs.length} erreur${erreurs.length > 1 ? \"s\" : \"\"}`\n\t\t}\n\n\t\tif (traceErrors.length > 0) {\n\t\t\treturn `il y a ${traceErrors.length} erreur${traceErrors.length > 1 ? \"s\" : \"\"} dans le tracé`\n\t\t}\n\n\t\treturn \"\"\n\n\t}\n\n\n}\n\n","import {CheckerAbstract} from \"../CheckerAbstract\";\r\nimport {ExactChecker} from \"../Basic\";\r\nimport {CHECKERS} from \"../checker.config\";\r\n\r\nconst name = \"tos\"\r\nconst description = `tos,[paramètres]\r\n\r\n**paramètres**\r\naucun\r\n`\r\nexport class TableofsignChecker extends CheckerAbstract {\r\n\tprivate grows: boolean\r\n    private coords: boolean\r\n\r\n    constructor(config: string[] | string) {\r\n        super(config)\r\n        this.type = CHECKERS.TABLE_OF_SIGNS\r\n        this.description = description\r\n\r\n        this.grows = this.config.includes('g') || this.config.includes('grows')\r\n        this.coords = this.config.includes('c') || this.config.includes('coords')\r\n\r\n\t\tthis.secondaryChecker = new ExactChecker()\r\n    }\r\n\r\n    get format(): string {\r\n        if (this.coords) {\r\n            return `Tableau de croissance avec min / max<br/>Coordonnées au format ${this.secondaryChecker?.format}`\r\n        } else if (this.grows) {\r\n            return \"Tableau de croissance\"\r\n        }\r\n        return \"Tableau de signes\"\r\n    }\r\n\r\n\toverride checkValue(value: string): string {\r\n\t\tif (this.answer !== value) {\r\n\t\t\tconst zeroes = {\r\n\t\t\t\t\texpected: this.answer.split(\"@\")[0],\r\n\t\t\t\t\tprovided: value.split(\"@\")[0]\r\n\t\t\t\t},\r\n\t\t\t\tsigns = {\r\n\t\t\t\t\texpected: this.answer.split(\"@\")[1],\r\n\t\t\t\t\tprovided: value.split(\"@\")[1] ?? \"\"\r\n\t\t\t\t},\r\n\t\t\t\tgrows = {\r\n\t\t\t\t\texpected: this.answer.split(\"@\")[2] ?? \"\",\r\n\t\t\t\t\tprovided: value.split(\"@\")[2] ?? \"\"\r\n\t\t\t\t},\r\n\t\t\t\tcoords = {\r\n\t\t\t\t\texpected: this.answer.split(\"@\")[3] ?? \"\",\r\n\t\t\t\t\tprovided: value.split(\"@\")[3] ?? \"\"\r\n\t\t\t\t}\r\n\r\n\t\t\tif (zeroes.expected !== zeroes.provided) {\r\n\t\t\t\t//TODO: compare each zeroes...\r\n\t\t\t\treturn \"les zéros ne sont pas justes\"\r\n\t\t\t}\r\n\r\n\t\t\tif (signs.expected !== signs.provided) {\r\n\t\t\t\treturn \"les signes ne sont pas justes\"\r\n\t\t\t}\r\n\r\n\t\t\tif (grows.expected !== grows.provided) {\r\n\t\t\t\treturn \"la croissance n'est pas juste\"\r\n\t\t\t}\r\n\r\n\t\t\t// Check the coordinates\r\n\t\t\tif (coords.expected.length > 0) {\r\n\t\t\t\tconst expectedCoordinates = coords.expected.split(\",\"),\r\n\t\t\t\t\tprovidedCoordinates = coords.provided.split(\",\")\r\n\r\n\t\t\t\tif (expectedCoordinates.length !== providedCoordinates.length) {\r\n\t\t\t\t\treturn \"toutes les valeurs des extrêmes n'ont pas été données...\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < expectedCoordinates.length; i++) {\r\n\t\t\t\t\tconst check = this.secondaryChecker?.check(expectedCoordinates[i], providedCoordinates[i]) ?? {result: false, message: \"\"}\r\n\r\n\t\t\t\t\tif (!check.result) {\r\n\t\t\t\t\t\treturn `il y a une erreur avec ${i === 0 ? \"la 1ère\" : \"la \" + (i + 1) + \"ème\"} coordonnée`\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn \"Il y a une erreur dans le tableau de signes.\"\r\n\t\t}\r\n\r\n\t\treturn \"\"\r\n\t}\r\n\r\n\r\n}\r\n","import {CheckerAbstract} from \"../CheckerAbstract\";\nimport {CHECKERS} from \"../checker.config\";\n\nconst name = \"type\"\nconst description = \"type\"\n\nexport class TypeChecker extends CheckerAbstract {\n    constructor(config:string[]|string) {\n        super(config)\n        this.type = CHECKERS.TYPE\n        this.description = description\n    }\n\n\n    readonly format = \"Cliquer sur les bonnes lettres.\"\n\n}\n","import type {CheckerAbstract} from \"./CheckerAbstract\";\r\nimport {checkerNameToEnum, type CheckerResult, CHECKERS} from \"./checker.config\";\r\nimport {\r\n    CartesianChecker,\r\n    CoordChecker,\r\n    EquationChecker,\r\n    ExactChecker,\r\n    ExpChecker,\r\n    FractionChecker,\r\n    FunctionChecker,\r\n    InputChecker,\r\n    LogChecker,\r\n    NumberChecker,\r\n    PolynomChecker,\r\n    PrimitiveChecker,\r\n    RationalChecker,\r\n    ScientificChecker,\r\n    SolutionChecker,\r\n    StringChecker,\r\n    VectorChecker\r\n} from \"./Basic\";\r\nimport {OrderChecker, QcmChecker, StudyChecker, TableofsignChecker, TypeChecker} from \"./Custom\";\r\n\r\ntype CheckerClass = (new (...args: any[]) => CheckerAbstract)\r\n\r\nexport function checkersList(): Record<CHECKERS, CheckerClass> {\r\n    let list: Partial<Record<CHECKERS, CheckerClass>> = {}\r\n\r\n    list[CHECKERS.CARTESIAN] = CartesianChecker\r\n    list[CHECKERS.COORDINATES] = CoordChecker\r\n    list[CHECKERS.EQUATION] = EquationChecker\r\n    list[CHECKERS.EXACT] = ExactChecker\r\n    list[CHECKERS.EXPONENTIAL] = ExpChecker\r\n    list[CHECKERS.FRACTION] = FractionChecker\r\n    list[CHECKERS.FUNCTION] = FunctionChecker\r\n    list[CHECKERS.INPUT] = InputChecker\r\n    list[CHECKERS.LOGARITHM] = LogChecker\r\n    list[CHECKERS.NUMBER] = NumberChecker\r\n    list[CHECKERS.POLYNOMIAL] = PolynomChecker\r\n    list[CHECKERS.PRIMITIVE] = PrimitiveChecker\r\n    list[CHECKERS.RATIONAL] = RationalChecker\r\n    list[CHECKERS.SCIENTIFIC] = ScientificChecker\r\n    list[CHECKERS.SOLUTION] = SolutionChecker\r\n    list[CHECKERS.STRING] = StringChecker\r\n    list[CHECKERS.VECTOR] = VectorChecker\r\n\r\n    list[CHECKERS.ORDER] = OrderChecker\r\n    list[CHECKERS.QCM] = QcmChecker\r\n    list[CHECKERS.STUDY] = StudyChecker\r\n    list[CHECKERS.TABLE_OF_SIGNS] = TableofsignChecker\r\n    list[CHECKERS.TYPE] = TypeChecker\r\n\r\n    return list as Record<CHECKERS, CheckerClass>\r\n}\r\n\r\nexport class PiChecker {\r\n    #checker: CheckerAbstract\r\n\r\n    constructor(config?: string) {\r\n        // Split the config to get the main checker and the sub checker\r\n        // name,a,b,c,[checker:name,d,e,f,g]\r\n\r\n        const [mainCheckerConfig, subCheckerConfig] = config?.split(\"checker:\") ?? []\r\n\r\n        this.#checker = this.#loadCheckerTo(mainCheckerConfig ?? '')\r\n        if (subCheckerConfig !== undefined) {\r\n            this.#checker.secondaryChecker = this.#loadCheckerTo(subCheckerConfig)\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    get checker(): CheckerAbstract {\r\n        return this.#checker;\r\n    }\r\n\r\n    set checker(value: CheckerAbstract) {\r\n        this.#checker = value;\r\n    }\r\n\r\n    get secondaryChecker(): CheckerAbstract | null {\r\n        return this.#checker.secondaryChecker\r\n    }\r\n\r\n    set secondaryChecker(value: CheckerAbstract){\r\n        this.#checker.secondaryChecker = value\r\n    }\r\n\r\n    check(value: string, answer: string): CheckerResult {\r\n        return this.#checker.check(value, answer)\r\n    }\r\n\r\n    #parseConfig(config: string): { checker: CHECKERS, options: string[] } {\r\n        const [checker, ...options] = config.split(',')\r\n        return {checker: checkerNameToEnum(checker), options: options.filter(o => o !== \"\")}\r\n    }\r\n\r\n\r\n    #loadCheckerTo(config: string): CheckerAbstract {\r\n        const {checker, options} = this.#parseConfig(config)\r\n        const checkerClass = this.#loadChecker(checker)\r\n\r\n        if (checkerClass === null) {\r\n            throw new Error(`Checker ${checker} not found`)\r\n        }\r\n\r\n        return new checkerClass(options)\r\n    }\r\n\r\n    #loadChecker(checker: CHECKERS): (new (...args: any[]) => CheckerAbstract) | null {\r\n        const list = checkersList()\r\n\r\n        return list[checker] ?? null\r\n        //\r\n        // switch (checker) {\r\n        //     case CHECKERS.CARTESIAN:\r\n        //         return CartesianChecker\r\n        //     case CHECKERS.COORDINATES:\r\n        //         return CoordChecker\r\n        //     case CHECKERS.EQUATION:\r\n        //         return EquationChecker\r\n        //     case CHECKERS.EXACT:\r\n        //         return ExactChecker\r\n        //     case CHECKERS.EXPONENTIAL:\r\n        //         return ExpChecker\r\n        //     case CHECKERS.FRACTION:\r\n        //         return FractionChecker\r\n        //     case CHECKERS.FUNCTION:\r\n        //         return FunctionChecker\r\n        //     case CHECKERS.INPUT:\r\n        //         return InputChecker\r\n        //     case CHECKERS.LOGARITHM:\r\n        //         return LogChecker\r\n        //     case CHECKERS.NUMBER:\r\n        //         return NumberChecker\r\n        //     case CHECKERS.POLYNOMIAL:\r\n        //         return PolynomChecker\r\n        //     case CHECKERS.PRIMITIVE:\r\n        //         return PrimitiveChecker\r\n        //     case CHECKERS.RATIONAL:\r\n        //         return RationalChecker\r\n        //     case CHECKERS.SCIENTIFIC:\r\n        //         return ScientificChecker\r\n        //     case CHECKERS.SOLUTION:\r\n        //         return SolutionChecker\r\n        //     case CHECKERS.STRING:\r\n        //         return StringChecker\r\n        //     case CHECKERS.VECTOR:\r\n        //         return VectorChecker\r\n        //\r\n        //     case CHECKERS.ORDER:\r\n        //         return OrderChecker\r\n        //     case CHECKERS.QCM:\r\n        //         return QcmChecker\r\n        //     case CHECKERS.STUDY:\r\n        //         return StudyChecker\r\n        //     case CHECKERS.TABLE_OF_SIGNS:\r\n        //         return TableofsignChecker\r\n        //     case CHECKERS.TYPE:\r\n        //         return TypeChecker\r\n        // }\r\n        //\r\n        // return null\r\n    }\r\n}"],"names":["CHECKERS","checkerNameToEnum","name","Li","gi","o","Vi","a","_t","s","m","h","Di","wi","n","Zi","ui","Fi","ji","Ui","Wi","Gi","Hi","U","ut","x","v","Re","$","e","t","i","r","l","f","Z","ie","re","Ye","vt","Fe","C","Ge","ge","vi","bi","xi","Ei","Ni","Ai","Ti","p","c","u","w","d","V","ce","ue","fe","ye","me","de","rt","Jt","At","Xi","Oi","Yi","ei","qi","te","ot","Ee","fi","g","Ze","Qi","Ki","Ji","_i","es","ts","He","at","ne","bt","Ve","Kt","is","T","Qe","xt","ze","kt","Mt","I","yi","Et","je","y","Ke","ft","Je","dt","Ct","Pt","$t","_e","It","pt","St","Bt","Rt","zt","ki","Lt","Vt","P","q","k","oe","Dt","et","Zt","Ne","H","Te","Ae","be","tt","ve","se","lt","it","N","We","ni","Mi","gt","ri","X","ht","si","ns","rs","os","F","Le","Be","E","we","oi","Ci","pe","Q","S","$e","B","z","W","he","J","Ie","xe","De","L","ct","CheckerAbstract","config","__publicField","value","expected","given","message","description","PolynomChecker","opts","Polynom","A","_reduced","_circle","_line2d","_slope","_minmax","_line3d","CartesianChecker","__privateAdd","__privateSet","__privateGet","Equation","_a","A2","Q2","left","right","eLeft","eRight","polynomY","polynomSommet","expectedSommet","center","lcmL","lcmR","Numeric","splitIfOutsideParentheses","splitCharacter","isInside","lastIndex","arr","splitAtSigns","element","index","braceSorter","stripFirstCharacter","stripLastCharacter","ExactChecker","stringAnswer","asciiAnswer","expectedExpression","givenExpression","expectedNumber","NumExp","givenNumber","CoordChecker","values","expectedValues","result","EquationChecker","ExpChecker","D","eN","eD","resultatNumerateur","expCompare","eValue","elements","expectedElements","elementsArr","displayPolynomForSorting","b","expectedElementsArr","errors","match","poly1","poly2","poly3","FractionChecker","Fraction","FAnswer","FExpected","FunctionChecker","InputChecker","LogChecker","ND","userN","userD","expN","expD","expNValue","expDValue","answerDecimal","expectedDecimal","NumberChecker","nbDigits","crtDigits","lastDigit","lastExpectedDigit","PrimitiveChecker","subchk","RationalChecker","num","den","expectedNum","expectedDen","givenRationnal","PolyFactor","givenRationnalReduced","expectedRationnal","ScientificChecker","PS","OG","ePS","eOG","AsciiMathParser","by_asciimath","pos","neighbourhood","token","matches","str","end","tok","skip_brackets","skipleft","skipright","middle","tex","exprs","expr","rb","lr","ss","chr","osource","reduced","comma","negative","first","second","dash","frac","ufirst","usecond","sub","sub_expr","sup_expr","sup","contents","contents_tex","matrix_tex","leftright","rows","row_length","column_desc","is_array","lb","cells","columns","cell","row_column_desc","lvert","rvert","is_mid_bracket","firsts","last","firsttex","mid","lasttex","nr","bracket","position","quoted","text","textfn","binary","lb1","rb1","atex","sstex","barg","arg","argtex","re_greek","re_number","sym","notm","nc","spos","SolutionChecker","isEmptyOrReal","isWithInterval","correctAnswers","checkValue","givenValues","inBracketsExpectedValue","StringChecker","VectorChecker","OrderChecker","QcmChecker","StudyChecker","arrayAnswer","arrayExpected","erreurs","traceErrors","TableofsignChecker","zeroes","signs","grows","coords","expectedCoordinates","providedCoordinates","TypeChecker","checkersList","list","_checker","_PiChecker_instances","parseConfig_fn","loadCheckerTo_fn","loadChecker_fn","PiChecker","mainCheckerConfig","subCheckerConfig","__privateMethod","answer","checker","options","checkerClass"],"mappings":"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","x_google_ignoreList":[1]}